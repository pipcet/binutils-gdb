@c Copyright (C) 2002-2017 Free Software Foundation, Inc.
@c Copyright (C) 2017 Pip Cet <pipcet@gmail.com>
@c This is NOT part of the GAS manual.
@c For copying conditions, see the file as.texinfo.
@c man end

@ifset GENERIC
@page
@node WebAssembly-Dependent
@chapter WebAssembly Dependent Features
@end ifset

@ifclear GENERIC
@node Machine Dependencies
@chapter WebAssembly Dependent Features
@end ifclear

@cindex WebAssembly support
@menu
* WebAssembly Notes::                Notes
* WebAssembly Syntax::               Syntax
* WebAssembly Floating Point::       Floating Point
* WebAssembly Directives::           WebAssembly Machine Directives
* WebAssembly Opcodes::              Opcodes
@end menu

@node WebAssembly Notes
@section Notes
@cindex WebAssembly notes
@cindex notes for WebAssembly

While WebAssembly provides its own module format for executables, this
documentation here describes how to use @code{@value{AS}} to produce
intermediate ELF object format files.

@cindex WebAssembly Syntax
@node WebAssembly Syntax
@section Syntax
The assembler syntax directly encodes sequences of opcodes as defined
in the WebAssembly binary encoding specification at
https://github.com/webassembly/spec/BinaryEncoding.md.  Structured
sexp-style expressions are not supported as input.

@menu
* WebAssembly-Chars::                Special Characters
* WebAssembly-Regs::                 Register Names
* WebAssembly-Relocs::               Relocations
@end menu

@node WebAssembly-Chars
@subsection Special Characters

@cindex line comment character, WebAssembly
@cindex WebAssembly line comment character
@samp{#} and @samp{;} are the line comment characters.  Note that if
@samp{#} is the first character on a line then it can also be a
logical line number directive (@pxref{Comments}) or a preprocessor
control command (@pxref{Preprocessing}).

@node WebAssembly-Relocs
@subsection Relocations
@cindex WebAssembly relocations
@cindex relocations, WebAssembly

Special relocations are available by using the @samp{@@@var{plt}}, @samp{@@@var{got}}, or @samp{@@@var{got}} suffixes after a constant expression, which correspond to the R_ASMJS_LEB128_PLT, R_ASMJS_LEB128_GOT, and R_ASMJS_LEB128_GOT_CODE relocations, respectively.

@node WebAssembly-Signatures
@subsection Signatures
@cindex WebAssembly signatures
@cindex signatures, WebAssembly

Function signatures are specified with the @code{signature} pseudo-opcode, followed by a simple C++-mangled function signature: @code{F} followed by an optional @code{v}, then a sequence of @code{i}, @code{l}, @code{f}, and @code{d} characters to mark i32, i64, f32, and f64 parameters, respectively; followed by a final @code{E} to mark the end of the function signature.

@node WebAssembly Floating Point
@section Floating Point
@cindex floating point, WebAssembly (@sc{ieee})
@cindex WebAssembly floating point (@sc{ieee})
The WebAssembly family uses @sc{ieee} floating-point numbers.

@node WebAssembly Directives
@section WebAssembly Assembler Directives

@command{@value{AS}} for the WebAssembly supports many additional directives for
compatibility with the native assembler.  This section describes them only
briefly.

@cindex WebAssembly-only directives
These are the additional directives in @code{@value{AS}} for the WebAssembly:

