# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
"POT-Creation-Date: 2020-06-07 11:29+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#: ldcref.c:171
msgid "%X%P: bfd_hash_table_init of cref table failed: %E\n"
msgstr ""

#: ldcref.c:177
msgid "%X%P: cref_hash_lookup failed: %E\n"
msgstr ""

#: ldcref.c:187
msgid "%X%P: cref alloc failed: %E\n"
msgstr ""

#: ldcref.c:372
#, c-format
msgid ""
"\n"
"Cross Reference Table\n"
"\n"
msgstr ""

#: ldcref.c:373
msgid "Symbol"
msgstr ""

#: ldcref.c:381
#, c-format
msgid "File\n"
msgstr ""

#: ldcref.c:385
#, c-format
msgid "No symbols\n"
msgstr ""

#: ldcref.c:414 ldcref.c:566
msgid "%P: symbol `%pT' missing from main hash table\n"
msgstr ""

#: ldcref.c:518 ldcref.c:629 ldmain.c:1228 ldmisc.c:335 pe-dll.c:736
#: pe-dll.c:1314 pe-dll.c:1435 pe-dll.c:1558 earm_wince_pe.c:1437
#: earm_wince_pe.c:1644 earmpe.c:1437 earmpe.c:1644 ei386pe.c:1437
#: ei386pe.c:1644 ei386pe_posix.c:1437 ei386pe_posix.c:1644 ei386pep.c:1422
#: emcorepe.c:1437 emcorepe.c:1644 eppcpe.c:1437 eppcpe.c:1644 eshpe.c:1437
#: eshpe.c:1644
msgid "%F%P: %pB: could not read symbols: %E\n"
msgstr ""

#: ldcref.c:691 ldcref.c:698 ldmain.c:1290 ldmain.c:1297
msgid "%F%P: %pB: could not read relocs: %E\n"
msgstr ""

#. We found a reloc for the symbol.  The symbol is defined
#. in OUTSECNAME.  This reloc is from a section which is
#. mapped into a section from which references to OUTSECNAME
#. are prohibited.  We must report an error.
#: ldcref.c:725
msgid "%X%P: %C: prohibited cross reference from %s to `%pT' in %s\n"
msgstr ""

#: ldctor.c:84
msgid "%X%P: different relocs used in set %s\n"
msgstr ""

#: ldctor.c:102
msgid "%X%P: different object file formats composing set %s\n"
msgstr ""

#: ldctor.c:278 ldctor.c:299
msgid "%X%P: %s does not support reloc %s for set %s\n"
msgstr ""

#: ldctor.c:294
msgid "%X%P: special section %s does not support reloc %s for set %s\n"
msgstr ""

#: ldctor.c:320
msgid "%X%P: unsupported size %d for set %s\n"
msgstr ""

#: ldctor.c:343
msgid ""
"\n"
"Set                 Symbol\n"
"\n"
msgstr ""

#: ldelf.c:71
msgid "%P: warning: -z dynamic-undefined-weak ignored\n"
msgstr ""

#: ldelf.c:98
msgid "%F%P: %pB: --just-symbols may not be used on DSO\n"
msgstr ""

#: ldelf.c:200
msgid "%P: %pB: bfd_stat failed: %E\n"
msgstr ""

#: ldelf.c:241
msgid "%P: warning: %s, needed by %pB, may conflict with %s\n"
msgstr ""

#: ldelf.c:261 ldfile.c:133
#, c-format
msgid "attempt to open %s failed\n"
msgstr ""

#: ldelf.c:296
msgid "%F%P: %pB: bfd_elf_get_bfd_needed_list failed: %E\n"
msgstr ""

#: ldelf.c:344
msgid "%F%P: %pB: bfd_stat failed: %E\n"
msgstr ""

#: ldelf.c:350
#, c-format
msgid "found %s at %s\n"
msgstr ""

#: ldelf.c:383 ldlang.c:3144 ldlang.c:3158
msgid "%F%P: %pB: error adding symbols: %E\n"
msgstr ""

#. We only issue an "unrecognised" message in verbose mode
#. as the $<foo> token might be a legitimate component of
#. a path name in the target's file system.
#: ldelf.c:570
#, c-format
msgid "unrecognised or unsupported token '%s' in search path\n"
msgstr ""

#: ldelf.c:1014
msgid "%F%P: %s: can't open for writing: %E\n"
msgstr ""

#: ldelf.c:1048 ldelf.c:1082
msgid "%F%P: cannot use executable file '%pB' as input to a link\n"
msgstr ""

#: ldelf.c:1109
msgid ""
"%F%P: compact frame descriptions incompatible with DWARF2 .eh_frame from "
"%pB\n"
msgstr ""

#: ldelf.c:1145
msgid ""
"%P: warning: cannot create .eh_frame_hdr section, --eh-frame-hdr ignored\n"
msgstr ""

#: ldelf.c:1201
#, c-format
msgid "%s needed by %pB\n"
msgstr ""

#: ldelf.c:1310
msgid ""
"%P: warning: %s, needed by %pB, not found (try using -rpath or -rpath-link)\n"
msgstr ""

#: ldelf.c:1323
msgid "%F%P: failed to add DT_NEEDED dynamic tag\n"
msgstr ""

#: ldelf.c:1331
msgid "%F%P: failed to parse EH frame entries\n"
msgstr ""

#: ldelf.c:1370
msgid "%P: warning: .note.gnu.build-id section discarded, --build-id ignored\n"
msgstr ""

#: ldelf.c:1416 earm_wince_pe.c:1228 earmpe.c:1228 ei386pe.c:1228
#: ei386pe_posix.c:1228 ei386pep.c:1231 emcorepe.c:1228 eppcpe.c:1228
#: eshpe.c:1228
msgid "%P: warning: unrecognized --build-id style ignored\n"
msgstr ""

#: ldelf.c:1434
msgid ""
"%P: warning: cannot create .note.gnu.build-id section, --build-id ignored\n"
msgstr ""

#: ldelf.c:1466 eaix5ppc.c:1370 eaix5rs6.c:1370 eaixppc.c:1370 eaixrs6.c:1370
#: eppcmacos.c:1370
msgid "%F%P: failed to record assignment to %s: %E\n"
msgstr ""

#: ldelf.c:1648 ldelf.c:1713 eaix5ppc.c:832 eaix5rs6.c:832 eaixppc.c:832
#: eaixrs6.c:832 eelf64_ia64_vms.c:209 eppcmacos.c:832
msgid "%F%P: failed to set dynamic section sizes: %E\n"
msgstr ""

#: ldelf.c:1685
msgid "%F%P: %pB: can't read contents of section .gnu.warning: %E\n"
msgstr ""

#: ldelfgen.c:55
msgid "%F%P: map sections to segments failed: %E\n"
msgstr ""

#: ldelfgen.c:75
msgid "%F%P: looping in map_segments"
msgstr ""

#: ldelfgen.c:87
msgid "%F%P: failed to strip zero-sized dynamic sections"
msgstr ""

#: ldelfgen.c:190
msgid ""
"%F%P: warning: CTF strtab association failed; strings will not be shared: "
"%s\n"
msgstr ""

#: ldelfgen.c:196
msgid "%F%P: warning: CTF symbol shuffling failed; slight space cost: %s\n"
msgstr ""

#: ldemul.c:314
#, c-format
msgid "%pS SYSLIB ignored\n"
msgstr ""

#: ldemul.c:320
#, c-format
msgid "%pS HLL ignored\n"
msgstr ""

#: ldemul.c:340
msgid "%P: unrecognised emulation mode: %s\n"
msgstr ""

#: ldemul.c:341
msgid "Supported emulations: "
msgstr ""

#: ldemul.c:383
#, c-format
msgid "  no emulation specific options.\n"
msgstr ""

#: ldexp.c:284
msgid "%F%P: bfd_hash_allocate failed creating symbol %s\n"
msgstr ""

#: ldexp.c:315
msgid "%F%P: bfd_hash_lookup failed creating symbol %s\n"
msgstr ""

#: ldexp.c:552
msgid "%P: warning: address of `%s' isn't multiple of maximum page size\n"
msgstr ""

#: ldexp.c:631
msgid "%F%P:%pS %% by zero\n"
msgstr ""

#: ldexp.c:640
msgid "%F%P:%pS / by zero\n"
msgstr ""

#: ldexp.c:736 ldlang.c:3887 ldmain.c:1195 earm_wince_pe.c:1772 earmpe.c:1772
#: ei386pe.c:1772 ei386pe_posix.c:1772 ei386pep.c:1646 emcorepe.c:1772
#: eppcpe.c:1772 eshpe.c:1772
msgid "%F%P: bfd_link_hash_lookup failed: %E\n"
msgstr ""

#: ldexp.c:749
msgid "%X%P:%pS: unresolvable symbol `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:764
msgid "%F%P:%pS: undefined symbol `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:802 ldexp.c:820 ldexp.c:848
msgid "%F%P:%pS: undefined section `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:879 ldexp.c:893
msgid "%F%P:%pS: undefined MEMORY region `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:905
msgid "%F%P:%pS: unknown constant `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:1053
msgid "%F%P:%pS can not PROVIDE assignment to location counter\n"
msgstr ""

#: ldexp.c:1086
msgid "%F%P:%pS invalid assignment to location counter\n"
msgstr ""

#: ldexp.c:1090
msgid "%F%P:%pS assignment to location counter invalid outside of SECTIONS\n"
msgstr ""

#: ldexp.c:1109
msgid "%F%P:%pS cannot move location counter backwards (from %V to %V)\n"
msgstr ""

#: ldexp.c:1169
msgid "%F%P:%s: hash creation failed\n"
msgstr ""

#: ldexp.c:1534 ldexp.c:1576 ldexp.c:1636
msgid "%F%P:%pS: nonconstant expression for %s\n"
msgstr ""

#: ldexp.c:1662 ldlang.c:1279 ldlang.c:3462 ldlang.c:7812
msgid "%F%P: can not create hash table: %E\n"
msgstr ""

#: ldfile.c:135
#, c-format
msgid "attempt to open %s succeeded\n"
msgstr ""

#: ldfile.c:141
msgid "%F%P: invalid BFD target `%s'\n"
msgstr ""

#: ldfile.c:265 ldfile.c:295
msgid "%P: skipping incompatible %s when searching for %s\n"
msgstr ""

#: ldfile.c:278
msgid "%F%P: attempted static link of dynamic object `%s'\n"
msgstr ""

#: ldfile.c:405
msgid "%P: cannot find %s (%s): %E\n"
msgstr ""

#: ldfile.c:408
msgid "%P: cannot find %s: %E\n"
msgstr ""

#: ldfile.c:460
msgid "%P: cannot find %s inside %s\n"
msgstr ""

#: ldfile.c:463
msgid "%P: cannot find %s\n"
msgstr ""

#: ldfile.c:473
msgid "%P: note to link with %s use -l:%s or rename it to lib%s\n"
msgstr ""

#: ldfile.c:501
#, c-format
msgid "cannot find script file %s\n"
msgstr ""

#: ldfile.c:503
#, c-format
msgid "opened script file %s\n"
msgstr ""

#: ldfile.c:652
msgid "%F%P: error: linker script file '%s' appears multiple times\n"
msgstr ""

#: ldfile.c:674
msgid "%F%P: cannot open linker script file %s: %E\n"
msgstr ""

#: ldfile.c:745
msgid "%F%P: cannot represent machine `%s'\n"
msgstr ""

#: ldlang.c:1363
msgid "%P:%pS: warning: redeclaration of memory region `%s'\n"
msgstr ""

#: ldlang.c:1369
msgid "%P:%pS: warning: memory region `%s' not declared\n"
msgstr ""

#: ldlang.c:1405
msgid "%F%P:%pS: error: alias for default memory region\n"
msgstr ""

#: ldlang.c:1416
msgid "%F%P:%pS: error: redefinition of memory region alias `%s'\n"
msgstr ""

#: ldlang.c:1423
msgid "%F%P:%pS: error: memory region `%s' for alias `%s' does not exist\n"
msgstr ""

#: ldlang.c:1482 ldlang.c:1521
msgid "%F%P: failed creating section `%s': %E\n"
msgstr ""

#: ldlang.c:2219
msgid ""
"\n"
"As-needed library included to satisfy reference by file (symbol)\n"
"\n"
msgstr ""

#: ldlang.c:2286
#, c-format
msgid ""
"\n"
"Discarded input sections\n"
"\n"
msgstr ""

#: ldlang.c:2294
msgid ""
"\n"
"Memory Configuration\n"
"\n"
msgstr ""

#: ldlang.c:2296
msgid "Name"
msgstr ""

#: ldlang.c:2296
msgid "Origin"
msgstr ""

#: ldlang.c:2296
msgid "Length"
msgstr ""

#: ldlang.c:2296
msgid "Attributes"
msgstr ""

#: ldlang.c:2336
#, c-format
msgid ""
"\n"
"Linker script and memory map\n"
"\n"
msgstr ""

#: ldlang.c:2389
msgid "%F%P: illegal use of `%s' section\n"
msgstr ""

#: ldlang.c:2398
msgid "%F%P: output format %s cannot represent section called %s: %E\n"
msgstr ""

#: ldlang.c:2565
msgid ""
"%P:%pS: warning: --enable-non-contiguous-regions makes section `%pA' from "
"'%pB' match /DISCARD/ clause.\n"
msgstr ""

#: ldlang.c:2598
msgid ""
"%P:%pS: warning: --enable-non-contiguous-regions may change behaviour for "
"section `%pA' from '%pB' (assigned to %pA, but additional match: %pA)\n"
msgstr ""

#: ldlang.c:3048
msgid "%P: %pB: file not recognized: %E; matching formats:"
msgstr ""

#: ldlang.c:3056
msgid "%F%P: %pB: file not recognized: %E\n"
msgstr ""

#: ldlang.c:3129
msgid "%F%P: %pB: member %pB in archive is not an object\n"
msgstr ""

#: ldlang.c:3432
msgid ""
"%P: warning: could not find any targets that match endianness requirement\n"
msgstr ""

#: ldlang.c:3446
msgid "%F%P: target %s not found\n"
msgstr ""

#: ldlang.c:3448
msgid "%F%P: cannot open output file %s: %E\n"
msgstr ""

#: ldlang.c:3454
msgid "%F%P: %s: can not make object file: %E\n"
msgstr ""

#: ldlang.c:3458
msgid "%F%P: %s: can not set architecture: %E\n"
msgstr ""

#: ldlang.c:3638
msgid "%P: warning: %s contains output sections; did you forget -T?\n"
msgstr ""

#: ldlang.c:3694
msgid ""
"%P: warning: CTF section in `%pI' not loaded: its types will be discarded: `"
"%s'\n"
msgstr ""

#: ldlang.c:3719
msgid "%P: warning: CTF output not created: `%s'\n"
msgstr ""

#: ldlang.c:3761
msgid "%F%P: cannot link with CTF in %pB: %s\n"
msgstr ""

#: ldlang.c:3771
msgid "%F%P: CTF linking failed; output will have no CTF section: %s\n"
msgstr ""

#: ldlang.c:3827
msgid ""
"%F%P: CTF section emission failed; output will have no CTF section: %s\n"
msgstr ""

#: ldlang.c:3957
msgid "%X%P: required symbol `%s' not defined\n"
msgstr ""

#: ldlang.c:4256
msgid ""
"warning: INSERT statement in linker script is incompatible with --enable-non-"
"contiguous-regions.\n"
msgstr ""

#: ldlang.c:4269
msgid "%F%P: %s not found for insert\n"
msgstr ""

#: ldlang.c:4509
msgid " load address 0x%V"
msgstr ""

#: ldlang.c:4742
msgid "%W (size before relaxing)\n"
msgstr ""

#: ldlang.c:4835
#, c-format
msgid "Address of section %s set to "
msgstr ""

#: ldlang.c:5033
#, c-format
msgid "Fail with %d\n"
msgstr ""

#: ldlang.c:5246
msgid ""
"%F%P: Output section '%s' not large enough for the linker-created stubs "
"section '%s'.\n"
msgstr ""

#: ldlang.c:5251
msgid ""
"%F%P: Relaxation not supported with --enable-non-contiguous-regions (section "
"'%s' would overflow '%s' after it changed size).\n"
msgstr ""

#: ldlang.c:5360
msgid "%X%P: section %s VMA wraps around address space\n"
msgstr ""

#: ldlang.c:5366
msgid "%X%P: section %s LMA wraps around address space\n"
msgstr ""

#: ldlang.c:5418
msgid "%X%P: section %s LMA [%V,%V] overlaps section %s LMA [%V,%V]\n"
msgstr ""

#: ldlang.c:5462
msgid "%X%P: section %s VMA [%V,%V] overlaps section %s VMA [%V,%V]\n"
msgstr ""

#: ldlang.c:5485
msgid "%X%P: region `%s' overflowed by %lu byte\n"
msgid_plural "%X%P: region `%s' overflowed by %lu bytes\n"
msgstr[0] ""
msgstr[1] ""

#: ldlang.c:5510
msgid "%X%P: address 0x%v of %pB section `%s' is not within region `%s'\n"
msgstr ""

#: ldlang.c:5521
msgid "%X%P: %pB section `%s' will not fit in region `%s'\n"
msgstr ""

#: ldlang.c:5607
msgid ""
"%F%P:%pS: non constant or forward reference address expression for section "
"%s\n"
msgstr ""

#: ldlang.c:5632
msgid "%X%P: internal error on COFF shared library section %s\n"
msgstr ""

#: ldlang.c:5690
msgid "%F%P: error: no memory region specified for loadable section `%s'\n"
msgstr ""

#: ldlang.c:5694
msgid "%P: warning: no memory region specified for loadable section `%s'\n"
msgstr ""

#: ldlang.c:5728
msgid "%P: warning: start of section %s changed by %ld\n"
msgstr ""

#: ldlang.c:5820
msgid "%P: warning: dot moved backwards before `%s'\n"
msgstr ""

#: ldlang.c:6001
msgid "%F%P: can't relax section: %E\n"
msgstr ""

#: ldlang.c:6422
msgid "%F%P: invalid data statement\n"
msgstr ""

#: ldlang.c:6455
msgid "%F%P: invalid reloc statement\n"
msgstr ""

#: ldlang.c:6809
msgid "%F%P: gc-sections requires either an entry or an undefined symbol\n"
msgstr ""

#: ldlang.c:6833
msgid "%F%P: %s: can't set start address\n"
msgstr ""

#: ldlang.c:6846 ldlang.c:6864
msgid "%F%P: can't set start address\n"
msgstr ""

#: ldlang.c:6858
msgid "%P: warning: cannot find entry symbol %s; defaulting to %V\n"
msgstr ""

#: ldlang.c:6869
msgid "%P: warning: cannot find entry symbol %s; not setting start address\n"
msgstr ""

#: ldlang.c:6925
msgid ""
"%F%P: relocatable linking with relocations from format %s (%pB) to format %s "
"(%pB) is not supported\n"
msgstr ""

#: ldlang.c:6935
msgid ""
"%X%P: %s architecture of input file `%pB' is incompatible with %s output\n"
msgstr ""

#: ldlang.c:6958
msgid "%X%P: failed to merge target specific data of file %pB\n"
msgstr ""

#: ldlang.c:7029
msgid "%F%P: could not define common symbol `%pT': %E\n"
msgstr ""

#: ldlang.c:7041
msgid ""
"\n"
"Allocating common symbols\n"
msgstr ""

#: ldlang.c:7042
msgid ""
"Common symbol       size              file\n"
"\n"
msgstr ""

#: ldlang.c:7116
msgid "%X%P: error: unplaced orphan section `%pA' from `%pB'\n"
msgstr ""

#: ldlang.c:7134
msgid ""
"%P: warning: orphan section `%pA' from `%pB' being placed in section `%s'\n"
msgstr ""

#: ldlang.c:7225
msgid "%F%P: invalid character %c (%d) in flags\n"
msgstr ""

#: ldlang.c:7333
msgid "%F%P:%pS: error: align with input and explicit align specified\n"
msgstr ""

#: ldlang.c:7839
msgid "%F%P: %s: plugin reported error after all symbols read\n"
msgstr ""

#: ldlang.c:8276
msgid "%F%P: multiple STARTUP files\n"
msgstr ""

#: ldlang.c:8322
msgid "%X%P:%pS: section has both a load address and a load region\n"
msgstr ""

#: ldlang.c:8428
msgid ""
"%X%P:%pS: PHDRS and FILEHDR are not supported when prior PT_LOAD headers "
"lack them\n"
msgstr ""

#: ldlang.c:8501
msgid "%F%P: no sections assigned to phdrs\n"
msgstr ""

#: ldlang.c:8539
msgid "%F%P: bfd_record_phdr failed: %E\n"
msgstr ""

#: ldlang.c:8559
msgid "%X%P: section `%s' assigned to non-existent phdr `%s'\n"
msgstr ""

#: ldlang.c:8982
msgid "%X%P: unknown language `%s' in version information\n"
msgstr ""

#: ldlang.c:9127
msgid ""
"%X%P: anonymous version tag cannot be combined with other version tags\n"
msgstr ""

#: ldlang.c:9136
msgid "%X%P: duplicate version tag `%s'\n"
msgstr ""

#: ldlang.c:9157 ldlang.c:9166 ldlang.c:9184 ldlang.c:9194
msgid "%X%P: duplicate expression `%s' in version information\n"
msgstr ""

#: ldlang.c:9234
msgid "%X%P: unable to find version dependency `%s'\n"
msgstr ""

#: ldlang.c:9257
msgid "%X%P: unable to read .exports section contents\n"
msgstr ""

#: ldlang.c:9295
msgid "%F%P: invalid origin for memory region %s\n"
msgstr ""

#: ldlang.c:9304
msgid "%F%P: invalid length for memory region %s\n"
msgstr ""

#: ldlang.c:9415
msgid "%X%P: unknown feature `%s'\n"
msgstr ""

#: ldmain.c:216
msgid "%F%P: fatal error: libbfd ABI mismatch\n"
msgstr ""

#: ldmain.c:252
msgid "%X%P: can't set BFD default target to `%s': %E\n"
msgstr ""

#: ldmain.c:353
msgid "built in linker script"
msgstr ""

#: ldmain.c:363
msgid "using external linker script:"
msgstr ""

#: ldmain.c:365
msgid "using internal linker script:"
msgstr ""

#: ldmain.c:412
msgid "%F%P: --no-define-common may not be used without -shared\n"
msgstr ""

#: ldmain.c:418
msgid "%F%P: no input files\n"
msgstr ""

#: ldmain.c:422
msgid "%P: mode %s\n"
msgstr ""

#: ldmain.c:438 ends32belf.c:403 ends32belf16m.c:403 ends32belf_linux.c:532
#: ends32elf.c:403 ends32elf16m.c:403 ends32elf_linux.c:532
msgid "%F%P: cannot open map file %s: %E\n"
msgstr ""

#: ldmain.c:488
msgid "%P: link errors found, deleting executable `%s'\n"
msgstr ""

#: ldmain.c:497
msgid "%F%P: %pB: final close failed: %E\n"
msgstr ""

#: ldmain.c:524
msgid "%F%P: unable to open for source of copy `%s'\n"
msgstr ""

#: ldmain.c:527
msgid "%F%P: unable to open for destination of copy `%s'\n"
msgstr ""

#: ldmain.c:534
msgid "%P: error writing file `%s'\n"
msgstr ""

#: ldmain.c:539 pe-dll.c:1949
#, c-format
msgid "%P: error closing file `%s'\n"
msgstr ""

#: ldmain.c:553
#, c-format
msgid "%s: total time in link: %ld.%06ld\n"
msgstr ""

#: ldmain.c:640
msgid "%F%P: missing argument to -m\n"
msgstr ""

#: ldmain.c:690 ldmain.c:707 ldmain.c:727 ldmain.c:759 pe-dll.c:1395
msgid "%F%P: bfd_hash_table_init failed: %E\n"
msgstr ""

#: ldmain.c:694 ldmain.c:711 ldmain.c:731
msgid "%F%P: bfd_hash_lookup failed: %E\n"
msgstr ""

#: ldmain.c:745
msgid "%X%P: error: duplicate retain-symbols-file\n"
msgstr ""

#: ldmain.c:789
msgid "%F%P: bfd_hash_lookup for insertion failed: %E\n"
msgstr ""

#: ldmain.c:794
msgid "%P: `-retain-symbols-file' overrides `-s' and `-S'\n"
msgstr ""

#: ldmain.c:897
msgid ""
"Archive member included to satisfy reference by file (symbol)\n"
"\n"
msgstr ""

#: ldmain.c:1006
msgid "%X%P: %C: multiple definition of `%pT'"
msgstr ""

#: ldmain.c:1009
msgid "; %D: first defined here"
msgstr ""

#: ldmain.c:1014
msgid "%P: disabling relaxation; it will not work with multiple definitions\n"
msgstr ""

#: ldmain.c:1067
msgid "%P: %pB: warning: definition of `%pT' overriding common from %pB\n"
msgstr ""

#: ldmain.c:1071
msgid "%P: %pB: warning: definition of `%pT' overriding common\n"
msgstr ""

#: ldmain.c:1080
msgid "%P: %pB: warning: common of `%pT' overridden by definition from %pB\n"
msgstr ""

#: ldmain.c:1084
msgid "%P: %pB: warning: common of `%pT' overridden by definition\n"
msgstr ""

#: ldmain.c:1093
msgid ""
"%P: %pB: warning: common of `%pT' overridden by larger common from %pB\n"
msgstr ""

#: ldmain.c:1097
msgid "%P: %pB: warning: common of `%pT' overridden by larger common\n"
msgstr ""

#: ldmain.c:1104
msgid "%P: %pB: warning: common of `%pT' overriding smaller common from %pB\n"
msgstr ""

#: ldmain.c:1108
msgid "%P: %pB: warning: common of `%pT' overriding smaller common\n"
msgstr ""

#: ldmain.c:1115
msgid "%P: %pB and %pB: warning: multiple common of `%pT'\n"
msgstr ""

#: ldmain.c:1118
msgid "%P: %pB: warning: multiple common of `%pT'\n"
msgstr ""

#: ldmain.c:1137 ldmain.c:1173
msgid "%P: warning: global constructor %s used\n"
msgstr ""

#: ldmain.c:1183
msgid "%F%P: BFD backend error: BFD_RELOC_CTOR unsupported\n"
msgstr ""

#. We found a reloc for the symbol we are looking for.
#: ldmain.c:1255 ldmain.c:1257 ldmain.c:1259 ldmain.c:1267 ldmain.c:1310
msgid "warning: "
msgstr ""

#: ldmain.c:1362
msgid "%X%P: %C: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1365
msgid "%P: %C: warning: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1371
msgid "%X%P: %D: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1374
msgid "%P: %D: warning: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1385
msgid "%X%P: %pB: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1388
msgid "%P: %pB: warning: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1394
msgid "%X%P: %pB: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1397
msgid "%P: %pB: warning: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1434
msgid " additional relocation overflows omitted from the output\n"
msgstr ""

#: ldmain.c:1447
#, c-format
msgid " relocation truncated to fit: %s against undefined symbol `%pT'"
msgstr ""

#: ldmain.c:1453
#, c-format
msgid ""
" relocation truncated to fit: %s against symbol `%pT' defined in %pA section "
"in %pB"
msgstr ""

#: ldmain.c:1466
#, c-format
msgid " relocation truncated to fit: %s against `%pT'"
msgstr ""

#: ldmain.c:1482
msgid "%X%H: dangerous relocation: %s\n"
msgstr ""

#: ldmain.c:1496
msgid "%X%H: reloc refers to symbol `%pT' which is not being output\n"
msgstr ""

#: ldmain.c:1530
msgid "%P: %pB: reference to %s\n"
msgstr ""

#: ldmain.c:1532
msgid "%P: %pB: definition of %s\n"
msgstr ""

#: ldmisc.c:374
#, c-format
msgid "%pB: in function `%pT':\n"
msgstr ""

#: ldmisc.c:512
#, c-format
msgid "no symbol"
msgstr ""

#: ldmisc.c:619
msgid "%F%P: internal error %s %d\n"
msgstr ""

#: ldmisc.c:683
msgid "%P: internal error: aborting at %s:%d in %s\n"
msgstr ""

#: ldmisc.c:686
msgid "%P: internal error: aborting at %s:%d\n"
msgstr ""

#: ldmisc.c:688
msgid "%F%P: please report this bug\n"
msgstr ""

#. Output for noisy == 2 is intended to follow the GNU standards.
#: ldver.c:38
#, c-format
msgid "GNU ld %s\n"
msgstr ""

#: ldver.c:42
#, c-format
msgid "Copyright (C) 2020 Free Software Foundation, Inc.\n"
msgstr ""

#: ldver.c:43
#, c-format
msgid ""
"This program is free software; you may redistribute it under the terms of\n"
"the GNU General Public License version 3 or (at your option) a later "
"version.\n"
"This program has absolutely no warranty.\n"
msgstr ""

#: ldver.c:53
#, c-format
msgid "  Supported emulations:\n"
msgstr ""

#: ldwrite.c:60 ldwrite.c:170 ldwrite.c:222 ldwrite.c:263
msgid "%F%P: bfd_new_link_order failed\n"
msgstr ""

#: ldwrite.c:332
msgid "%F%P: cannot create split section name for %s\n"
msgstr ""

#: ldwrite.c:344
msgid "%F%P: clone section failed: %E\n"
msgstr ""

#: ldwrite.c:382
#, c-format
msgid "%8x something else\n"
msgstr ""

#: ldwrite.c:552
msgid "%F%P: final link failed: %E\n"
msgstr ""

#: lexsup.c:103 lexsup.c:286
msgid "KEYWORD"
msgstr ""

#: lexsup.c:103
msgid "Shared library control for HP/UX compatibility"
msgstr ""

#: lexsup.c:106
msgid "ARCH"
msgstr ""

#: lexsup.c:106
msgid "Set architecture"
msgstr ""

#: lexsup.c:108 lexsup.c:413
msgid "TARGET"
msgstr ""

#: lexsup.c:108
msgid "Specify target for following input files"
msgstr ""

#: lexsup.c:111 lexsup.c:172 lexsup.c:176 lexsup.c:212 lexsup.c:225
#: lexsup.c:227 lexsup.c:431 lexsup.c:498 lexsup.c:511 lexsup.c:515
msgid "FILE"
msgstr ""

#: lexsup.c:111
msgid "Read MRI format linker script"
msgstr ""

#: lexsup.c:113
msgid "Force common symbols to be defined"
msgstr ""

#: lexsup.c:118
msgid "Force group members out of groups"
msgstr ""

#: lexsup.c:120 lexsup.c:475 lexsup.c:477 lexsup.c:479 lexsup.c:481
#: lexsup.c:483 lexsup.c:485
msgid "ADDRESS"
msgstr ""

#: lexsup.c:120
msgid "Set start address"
msgstr ""

#: lexsup.c:122
msgid "Export all dynamic symbols"
msgstr ""

#: lexsup.c:124
msgid "Undo the effect of --export-dynamic"
msgstr ""

#: lexsup.c:126
msgid "Enable support of non-contiguous memory regions"
msgstr ""

#: lexsup.c:128
msgid ""
"Enable warnings when --enable-non-contiguous-regions may cause unexpected "
"behaviour"
msgstr ""

#: lexsup.c:130
msgid "Link big-endian objects"
msgstr ""

#: lexsup.c:132
msgid "Link little-endian objects"
msgstr ""

#: lexsup.c:134 lexsup.c:137
msgid "SHLIB"
msgstr ""

#: lexsup.c:134
msgid "Auxiliary filter for shared object symbol table"
msgstr ""

#: lexsup.c:137
msgid "Filter for shared object symbol table"
msgstr ""

#: lexsup.c:140
msgid "Ignored"
msgstr ""

#: lexsup.c:142
msgid "SIZE"
msgstr ""

#: lexsup.c:142
msgid "Small data size (if no size, same as --shared)"
msgstr ""

#: lexsup.c:145
msgid "FILENAME"
msgstr ""

#: lexsup.c:145
msgid "Set internal name of shared library"
msgstr ""

#: lexsup.c:147
msgid "PROGRAM"
msgstr ""

#: lexsup.c:147
msgid "Set PROGRAM as the dynamic linker to use"
msgstr ""

#: lexsup.c:150
msgid "Produce an executable with no program interpreter header"
msgstr ""

#: lexsup.c:153
msgid "LIBNAME"
msgstr ""

#: lexsup.c:153
msgid "Search for library LIBNAME"
msgstr ""

#: lexsup.c:155
msgid "DIRECTORY"
msgstr ""

#: lexsup.c:155
msgid "Add DIRECTORY to library search path"
msgstr ""

#: lexsup.c:158
msgid "Override the default sysroot location"
msgstr ""

#: lexsup.c:160
msgid "EMULATION"
msgstr ""

#: lexsup.c:160
msgid "Set emulation"
msgstr ""

#: lexsup.c:162
msgid "Print map file on standard output"
msgstr ""

#: lexsup.c:164
msgid "Do not page align data"
msgstr ""

#: lexsup.c:166
msgid "Do not page align data, do not make text readonly"
msgstr ""

#: lexsup.c:169
msgid "Page align data, make text readonly"
msgstr ""

#: lexsup.c:172
msgid "Set output file name"
msgstr ""

#: lexsup.c:174
msgid "Optimize output file"
msgstr ""

#: lexsup.c:176
msgid "Generate import library"
msgstr ""

#: lexsup.c:179 lexsup.c:190
msgid "PLUGIN"
msgstr ""

#: lexsup.c:179
msgid "Load named plugin"
msgstr ""

#: lexsup.c:181 lexsup.c:192
msgid "ARG"
msgstr ""

#: lexsup.c:181
msgid "Send arg to last-loaded plugin"
msgstr ""

#: lexsup.c:183 lexsup.c:186
msgid "Ignored for GCC LTO option compatibility"
msgstr ""

#: lexsup.c:190
msgid "Load named plugin (ignored)"
msgstr ""

#: lexsup.c:192
msgid "Send arg to last-loaded plugin (ignored)"
msgstr ""

#: lexsup.c:195
msgid "Ignored for GCC linker option compatibility"
msgstr ""

#: lexsup.c:198 lexsup.c:201
msgid "Ignored for gold option compatibility"
msgstr ""

#: lexsup.c:204
msgid "Ignored for SVR4 compatibility"
msgstr ""

#: lexsup.c:208
msgid "Generate relocatable output"
msgstr ""

#: lexsup.c:212
msgid "Just link symbols (if directory, same as --rpath)"
msgstr ""

#: lexsup.c:215
msgid "Strip all symbols"
msgstr ""

#: lexsup.c:217
msgid "Strip debugging symbols"
msgstr ""

#: lexsup.c:219
msgid "Strip symbols in discarded sections"
msgstr ""

#: lexsup.c:221
msgid "Do not strip symbols in discarded sections"
msgstr ""

#: lexsup.c:223
msgid "Trace file opens"
msgstr ""

#: lexsup.c:225
msgid "Read linker script"
msgstr ""

#: lexsup.c:227
msgid "Read default linker script"
msgstr ""

#: lexsup.c:231 lexsup.c:234 lexsup.c:252 lexsup.c:341 lexsup.c:365
#: lexsup.c:468 lexsup.c:501 lexsup.c:513 lexsup.c:551 lexsup.c:554
msgid "SYMBOL"
msgstr ""

#: lexsup.c:231
msgid "Start with undefined reference to SYMBOL"
msgstr ""

#: lexsup.c:234
msgid "Require SYMBOL be defined in the final output"
msgstr ""

#: lexsup.c:237
msgid "[=SECTION]"
msgstr ""

#: lexsup.c:238
msgid "Don't merge input [SECTION | orphan] sections"
msgstr ""

#: lexsup.c:240
msgid "Build global constructor/destructor tables"
msgstr ""

#: lexsup.c:242
msgid "Print version information"
msgstr ""

#: lexsup.c:244
msgid "Print version and emulation information"
msgstr ""

#: lexsup.c:246
msgid "Discard all local symbols"
msgstr ""

#: lexsup.c:248
msgid "Discard temporary local symbols (default)"
msgstr ""

#: lexsup.c:250
msgid "Don't discard any local symbols"
msgstr ""

#: lexsup.c:252
msgid "Trace mentions of SYMBOL"
msgstr ""

#: lexsup.c:254 lexsup.c:433 lexsup.c:435
msgid "PATH"
msgstr ""

#: lexsup.c:254
msgid "Default search path for Solaris compatibility"
msgstr ""

#: lexsup.c:257
msgid "Start a group"
msgstr ""

#: lexsup.c:259
msgid "End a group"
msgstr ""

#: lexsup.c:263
msgid "Accept input files whose architecture cannot be determined"
msgstr ""

#: lexsup.c:267
msgid "Reject input files whose architecture is unknown"
msgstr ""

#: lexsup.c:279
msgid "Only set DT_NEEDED for following dynamic libs if used"
msgstr ""

#: lexsup.c:282
msgid ""
"Always set DT_NEEDED for dynamic libraries mentioned on\n"
"                                the command line"
msgstr ""

#: lexsup.c:286
msgid "Ignored for SunOS compatibility"
msgstr ""

#: lexsup.c:288
msgid "Link against shared libraries"
msgstr ""

#: lexsup.c:294
msgid "Do not link against shared libraries"
msgstr ""

#: lexsup.c:302
msgid "Bind global references locally"
msgstr ""

#: lexsup.c:304
msgid "Bind global function references locally"
msgstr ""

#: lexsup.c:306
msgid "Check section addresses for overlaps (default)"
msgstr ""

#: lexsup.c:309
msgid "Do not check section addresses for overlaps"
msgstr ""

#: lexsup.c:313
msgid "Copy DT_NEEDED links mentioned inside DSOs that follow"
msgstr ""

#: lexsup.c:317
msgid "Do not copy DT_NEEDED links mentioned inside DSOs that follow"
msgstr ""

#: lexsup.c:321
msgid "Output cross reference table"
msgstr ""

#: lexsup.c:323
msgid "SYMBOL=EXPRESSION"
msgstr ""

#: lexsup.c:323
msgid "Define a symbol"
msgstr ""

#: lexsup.c:325
msgid "[=STYLE]"
msgstr ""

#: lexsup.c:325
msgid "Demangle symbol names [using STYLE]"
msgstr ""

#: lexsup.c:329
msgid ""
"Do not allow multiple definitions with symbols included\n"
"           in filename invoked by -R or --just-symbols"
msgstr ""

#: lexsup.c:333
msgid "Generate embedded relocs"
msgstr ""

#: lexsup.c:335
msgid "Treat warnings as errors"
msgstr ""

#: lexsup.c:338
msgid "Do not treat warnings as errors (default)"
msgstr ""

#: lexsup.c:341
msgid "Call SYMBOL at unload-time"
msgstr ""

#: lexsup.c:343
msgid "Force generation of file with .exe suffix"
msgstr ""

#: lexsup.c:345
msgid "Remove unused sections (on some targets)"
msgstr ""

#: lexsup.c:348
msgid "Don't remove unused sections (default)"
msgstr ""

#: lexsup.c:351
msgid "List removed unused sections on stderr"
msgstr ""

#: lexsup.c:354
msgid "Do not list removed unused sections"
msgstr ""

#: lexsup.c:357
msgid "Keep exported symbols when removing unused sections"
msgstr ""

#: lexsup.c:360
msgid "Set default hash table size close to <NUMBER>"
msgstr ""

#: lexsup.c:363
msgid "Print option help"
msgstr ""

#: lexsup.c:365
msgid "Call SYMBOL at load-time"
msgstr ""

#: lexsup.c:367
msgid "FILE/DIR"
msgstr ""

#: lexsup.c:367
msgid "Write a linker map to FILE or DIR/<outputname>.map"
msgstr ""

#: lexsup.c:369
msgid "Do not define Common storage"
msgstr ""

#: lexsup.c:371
msgid "Do not demangle symbol names"
msgstr ""

#: lexsup.c:373
msgid "Use less memory and more disk I/O"
msgstr ""

#: lexsup.c:375
msgid "Do not allow unresolved references in object files"
msgstr ""

#: lexsup.c:378
msgid "Allow unresolved references in shared libraries"
msgstr ""

#: lexsup.c:382
msgid "Do not allow unresolved references in shared libs"
msgstr ""

#: lexsup.c:386
msgid "Allow multiple definitions"
msgstr ""

#: lexsup.c:388
msgid "Disallow undefined version"
msgstr ""

#: lexsup.c:390
msgid "Create default symbol version"
msgstr ""

#: lexsup.c:393
msgid "Create default symbol version for imported symbols"
msgstr ""

#: lexsup.c:396
msgid "Don't warn about mismatched input files"
msgstr ""

#: lexsup.c:399
msgid "Don't warn on finding an incompatible library"
msgstr ""

#: lexsup.c:402
msgid "Turn off --whole-archive"
msgstr ""

#: lexsup.c:404
msgid "Create an output file even if errors occur"
msgstr ""

#: lexsup.c:409
msgid ""
"Only use library directories specified on\n"
"                                the command line"
msgstr ""

#: lexsup.c:413
msgid "Specify target of output file"
msgstr ""

#: lexsup.c:416
msgid "Print default output format"
msgstr ""

#: lexsup.c:418
msgid "Print current sysroot"
msgstr ""

#: lexsup.c:420
msgid "Ignored for Linux compatibility"
msgstr ""

#: lexsup.c:423
msgid "Reduce memory overheads, possibly taking much longer"
msgstr ""

#: lexsup.c:426
msgid "Reduce code size by using target specific optimizations"
msgstr ""

#: lexsup.c:428
msgid "Do not use relaxation techniques to reduce code size"
msgstr ""

#: lexsup.c:431
msgid "Keep only symbols listed in FILE"
msgstr ""

#: lexsup.c:433
msgid "Set runtime shared library search path"
msgstr ""

#: lexsup.c:435
msgid "Set link time shared library search path"
msgstr ""

#: lexsup.c:438
msgid "Create a shared library"
msgstr ""

#: lexsup.c:442
msgid "Create a position independent executable"
msgstr ""

#: lexsup.c:446
msgid "[=ascending|descending]"
msgstr ""

#: lexsup.c:447
msgid "Sort common symbols by alignment [in specified order]"
msgstr ""

#: lexsup.c:452
msgid "name|alignment"
msgstr ""

#: lexsup.c:453
msgid "Sort sections by name or maximum alignment"
msgstr ""

#: lexsup.c:455
msgid "COUNT"
msgstr ""

#: lexsup.c:455
msgid "How many tags to reserve in .dynamic section"
msgstr ""

#: lexsup.c:458
msgid "[=SIZE]"
msgstr ""

#: lexsup.c:458
msgid "Split output sections every SIZE octets"
msgstr ""

#: lexsup.c:461
msgid "[=COUNT]"
msgstr ""

#: lexsup.c:461
msgid "Split output sections every COUNT relocs"
msgstr ""

#: lexsup.c:464
msgid "Print memory usage statistics"
msgstr ""

#: lexsup.c:466
msgid "Display target specific options"
msgstr ""

#: lexsup.c:468
msgid "Do task level linking"
msgstr ""

#: lexsup.c:470
msgid "Use same format as native linker"
msgstr ""

#: lexsup.c:472
msgid "SECTION=ADDRESS"
msgstr ""

#: lexsup.c:472
msgid "Set address of named section"
msgstr ""

#: lexsup.c:475
msgid "Set address of .bss section"
msgstr ""

#: lexsup.c:477
msgid "Set address of .data section"
msgstr ""

#: lexsup.c:479
msgid "Set address of .text section"
msgstr ""

#: lexsup.c:481
msgid "Set address of text segment"
msgstr ""

#: lexsup.c:483
msgid "Set address of rodata segment"
msgstr ""

#: lexsup.c:485
msgid "Set address of ldata segment"
msgstr ""

#: lexsup.c:488
msgid ""
"How to handle unresolved symbols.  <method> is:\n"
"                                ignore-all, report-all, ignore-in-object-"
"files,\n"
"                                ignore-in-shared-libs"
msgstr ""

#: lexsup.c:493
msgid "[=NUMBER]"
msgstr ""

#: lexsup.c:494
msgid "Output lots of information during link"
msgstr ""

#: lexsup.c:498
msgid "Read version information script"
msgstr ""

#: lexsup.c:501
msgid ""
"Take export symbols list from .exports, using\n"
"                                SYMBOL as the version."
msgstr ""

#: lexsup.c:505
msgid "Add data symbols to dynamic list"
msgstr ""

#: lexsup.c:507
msgid "Use C++ operator new/delete dynamic list"
msgstr ""

#: lexsup.c:509
msgid "Use C++ typeinfo dynamic list"
msgstr ""

#: lexsup.c:511
msgid "Read dynamic list"
msgstr ""

#: lexsup.c:513
msgid "Export the specified symbol"
msgstr ""

#: lexsup.c:515
msgid "Read export dynamic symbol list"
msgstr ""

#: lexsup.c:517
msgid "Warn about duplicate common symbols"
msgstr ""

#: lexsup.c:519
msgid "Warn if global constructors/destructors are seen"
msgstr ""

#: lexsup.c:522
msgid "Warn if the multiple GP values are used"
msgstr ""

#: lexsup.c:524
msgid "Warn only once per undefined symbol"
msgstr ""

#: lexsup.c:526
msgid "Warn if start of section changes due to alignment"
msgstr ""

#: lexsup.c:531
msgid "Warn if outpout has DT_TEXTREL (default)"
msgstr ""

#: lexsup.c:533
msgid "Warn if outpout has DT_TEXTREL"
msgstr ""

#: lexsup.c:539
msgid "Warn if an object has alternate ELF machine code"
msgstr ""

#: lexsup.c:543
msgid "Report unresolved symbols as warnings"
msgstr ""

#: lexsup.c:546
msgid "Report unresolved symbols as errors"
msgstr ""

#: lexsup.c:548
msgid "Include all objects from following archives"
msgstr ""

#: lexsup.c:551
msgid "Use wrapper functions for SYMBOL"
msgstr ""

#: lexsup.c:555
msgid "Unresolved SYMBOL will not cause an error or warning"
msgstr ""

#: lexsup.c:557
msgid "Push state of flags governing input file handling"
msgstr ""

#: lexsup.c:560
msgid "Pop state of flags governing input file handling"
msgstr ""

#: lexsup.c:563
msgid "Report target memory usage"
msgstr ""

#: lexsup.c:565
msgid "=MODE"
msgstr ""

#: lexsup.c:565
msgid "Control how orphan sections are handled."
msgstr ""

#: lexsup.c:568
msgid "Show discarded sections in map file output (default)"
msgstr ""

#: lexsup.c:571
msgid "Do not show discarded sections in map file output"
msgstr ""

#: lexsup.c:749
msgid "%P: %s: missing argument\n"
msgstr ""

#: lexsup.c:754
msgid "%P: unrecognized option '%s'\n"
msgstr ""

#: lexsup.c:759
msgid "%F%P: use the --help option for usage information\n"
msgstr ""

#: lexsup.c:778
msgid "%F%P: unrecognized -a option `%s'\n"
msgstr ""

#: lexsup.c:791
msgid "%F%P: unrecognized -assert option `%s'\n"
msgstr ""

#: lexsup.c:835
msgid "%F%P: unknown demangling style `%s'\n"
msgstr ""

#: lexsup.c:911 lexsup.c:1370 eaarch64cloudabi.c:788 eaarch64cloudabib.c:788
#: eaarch64elf.c:788 eaarch64elf32.c:788 eaarch64elf32b.c:788
#: eaarch64elfb.c:788 eaarch64fbsd.c:788 eaarch64fbsdb.c:788
#: eaarch64linux.c:788 eaarch64linux32.c:788 eaarch64linux32b.c:788
#: eaarch64linuxb.c:788 earmelf.c:1054 earmelf_fbsd.c:1054
#: earmelf_fuchsia.c:1054 earmelf_linux.c:1054 earmelf_linux_eabi.c:1054
#: earmelf_linux_fdpiceabi.c:1054 earmelf_nacl.c:1054 earmelf_nbsd.c:1054
#: earmelf_phoenix.c:1054 earmelf_vxworks.c:1090 earmelfb.c:1054
#: earmelfb_fbsd.c:1054 earmelfb_fuchsia.c:1054 earmelfb_linux.c:1054
#: earmelfb_linux_eabi.c:1054 earmelfb_linux_fdpiceabi.c:1054
#: earmelfb_nacl.c:1054 earmelfb_nbsd.c:1054 earmnto.c:1029 earmsymbian.c:1054
#: ecskyelf.c:516 ecskyelf_linux.c:678 eelf32metag.c:675 eelf64lppc.c:1123
#: eelf64ppc.c:1123 eelf64ppc_fbsd.c:1123 ehppaelf.c:536 ehppalinux.c:713
#: ehppanbsd.c:713 ehppaobsd.c:713
msgid "%F%P: invalid number `%s'\n"
msgstr ""

#: lexsup.c:1007
msgid "%F%P: bad --unresolved-symbols option: %s\n"
msgstr ""

#: lexsup.c:1075
msgid "%F%P: bad -plugin-opt option\n"
msgstr ""

#. This can happen if the user put "-rpath,a" on the command
#. line.  (Or something similar.  The comma is important).
#. Getopt becomes confused and thinks that this is a -r option
#. but it cannot parse the text after the -r so it refuses to
#. increment the optind counter.  Detect this case and issue
#. an error message here.  We cannot just make this a warning,
#. increment optind, and continue because getopt is too confused
#. and will seg-fault the next time around.
#: lexsup.c:1092
msgid "%F%P: unrecognised option: %s\n"
msgstr ""

#: lexsup.c:1095 lexsup.c:1205 lexsup.c:1223 lexsup.c:1339
msgid "%F%P: -r and %s may not be used together\n"
msgstr ""

#: lexsup.c:1217
msgid "%F%P: -shared not supported\n"
msgstr ""

#: lexsup.c:1228
msgid "%F%P: -pie not supported\n"
msgstr ""

#: lexsup.c:1234
msgid "%P: SONAME must not be empty string; keeping previous one\n"
msgstr ""

#: lexsup.c:1240
msgid "descending"
msgstr ""

#: lexsup.c:1242
msgid "ascending"
msgstr ""

#: lexsup.c:1245
msgid "%F%P: invalid common section sorting option: %s\n"
msgstr ""

#: lexsup.c:1249
msgid "name"
msgstr ""

#: lexsup.c:1251
msgid "alignment"
msgstr ""

#: lexsup.c:1254
msgid "%F%P: invalid section sorting option: %s\n"
msgstr ""

#: lexsup.c:1288
msgid "%F%P: invalid argument to option \"--section-start\"\n"
msgstr ""

#: lexsup.c:1295
msgid "%F%P: missing argument(s) to option \"--section-start\"\n"
msgstr ""

#: lexsup.c:1560
msgid "%F%P: group ended before it began (--help for usage)\n"
msgstr ""

#: lexsup.c:1588
msgid "%X%P: --hash-size needs a numeric argument\n"
msgstr ""

#: lexsup.c:1600
msgid "%F%P: no state pushed before popping\n"
msgstr ""

#: lexsup.c:1623
msgid "%F%P: invalid argument to option \"--orphan-handling\"\n"
msgstr ""

#: lexsup.c:1642
msgid "%P: no file/directory name provided for map output; ignored\n"
msgstr ""

#. If this alloc fails then something is probably very
#. wrong.  Better to halt now rather than continue on
#. into more problems.
#: lexsup.c:1663
msgid "%P%F: cannot create name for linker map file: %E\n"
msgstr ""

#: lexsup.c:1674
msgid "%P: SONAME must not be empty string; ignored\n"
msgstr ""

#: lexsup.c:1680
msgid "%P: missing --end-group; added as last command line option\n"
msgstr ""

#: lexsup.c:1788
msgid "%F%P: -F may not be used without -shared\n"
msgstr ""

#: lexsup.c:1790
msgid "%F%P: -f may not be used without -shared\n"
msgstr ""

#: lexsup.c:1831 lexsup.c:1844
msgid "%F%P: invalid hex number `%s'\n"
msgstr ""

#: lexsup.c:1874
#, c-format
msgid "  --audit=AUDITLIB            Specify a library to use for auditing\n"
msgstr ""

#: lexsup.c:1876
#, c-format
msgid "  -Bgroup                     Selects group name lookup rules for DSO\n"
msgstr ""

#: lexsup.c:1878
#, c-format
msgid "  --disable-new-dtags         Disable new dynamic tags\n"
msgstr ""

#: lexsup.c:1880
#, c-format
msgid "  --enable-new-dtags          Enable new dynamic tags\n"
msgstr ""

#: lexsup.c:1882
#, c-format
msgid "  --eh-frame-hdr              Create .eh_frame_hdr section\n"
msgstr ""

#: lexsup.c:1884
#, c-format
msgid "  --no-eh-frame-hdr           Do not create .eh_frame_hdr section\n"
msgstr ""

#: lexsup.c:1886
#, c-format
msgid "  --exclude-libs=LIBS         Make all symbols in LIBS hidden\n"
msgstr ""

#: lexsup.c:1888
#, c-format
msgid ""
"  --hash-style=STYLE          Set hash style to sysv/gnu/both.  Default: "
msgstr ""

#: lexsup.c:1907
#, c-format
msgid ""
"  -P AUDITLIB, --depaudit=AUDITLIB\n"
"                              Specify a library to use for auditing "
"dependencies\n"
msgstr ""

#: lexsup.c:1910
#, c-format
msgid ""
"  -z combreloc                Merge dynamic relocs into one section and "
"sort\n"
msgstr ""

#: lexsup.c:1912
#, c-format
msgid ""
"  -z nocombreloc              Don't merge dynamic relocs into one section\n"
msgstr ""

#: lexsup.c:1914
#, c-format
msgid ""
"  -z global                   Make symbols in DSO available for "
"subsequently\n"
"                               loaded objects\n"
msgstr ""

#: lexsup.c:1917
#, c-format
msgid ""
"  -z initfirst                Mark DSO to be initialized first at runtime\n"
msgstr ""

#: lexsup.c:1919
#, c-format
msgid ""
"  -z interpose                Mark object to interpose all DSOs but "
"executable\n"
msgstr ""

#: lexsup.c:1921
#, c-format
msgid ""
"  -z lazy                     Mark object lazy runtime binding (default)\n"
msgstr ""

#: lexsup.c:1923
#, c-format
msgid "  -z loadfltr                 Mark object requiring immediate process\n"
msgstr ""

#: lexsup.c:1925
#, c-format
msgid "  -z nocopyreloc              Don't create copy relocs\n"
msgstr ""

#: lexsup.c:1927
#, c-format
msgid ""
"  -z nodefaultlib             Mark object not to use default search paths\n"
msgstr ""

#: lexsup.c:1929
#, c-format
msgid "  -z nodelete                 Mark DSO non-deletable at runtime\n"
msgstr ""

#: lexsup.c:1931
#, c-format
msgid "  -z nodlopen                 Mark DSO not available to dlopen\n"
msgstr ""

#: lexsup.c:1933
#, c-format
msgid "  -z nodump                   Mark DSO not available to dldump\n"
msgstr ""

#: lexsup.c:1935
#, c-format
msgid "  -z now                      Mark object non-lazy runtime binding\n"
msgstr ""

#: lexsup.c:1937
#, c-format
msgid ""
"  -z origin                   Mark object requiring immediate $ORIGIN\n"
"                                processing at runtime\n"
msgstr ""

#: lexsup.c:1941
#, c-format
msgid "  -z relro                    Create RELRO program header (default)\n"
msgstr ""

#: lexsup.c:1943
#, c-format
msgid "  -z norelro                  Don't create RELRO program header\n"
msgstr ""

#: lexsup.c:1946
#, c-format
msgid "  -z relro                    Create RELRO program header\n"
msgstr ""

#: lexsup.c:1948
#, c-format
msgid ""
"  -z norelro                  Don't create RELRO program header (default)\n"
msgstr ""

#: lexsup.c:1952
#, c-format
msgid ""
"  -z separate-code            Create separate code program header (default)\n"
msgstr ""

#: lexsup.c:1954
#, c-format
msgid ""
"  -z noseparate-code          Don't create separate code program header\n"
msgstr ""

#: lexsup.c:1957
#, c-format
msgid "  -z separate-code            Create separate code program header\n"
msgstr ""

#: lexsup.c:1959
#, c-format
msgid ""
"  -z noseparate-code          Don't create separate code program header "
"(default)\n"
msgstr ""

#: lexsup.c:1962
#, c-format
msgid ""
"  -z common                   Generate common symbols with STT_COMMON type\n"
msgstr ""

#: lexsup.c:1964
#, c-format
msgid ""
"  -z nocommon                 Generate common symbols with STT_OBJECT type\n"
msgstr ""

#: lexsup.c:1966
#, c-format
msgid "  -z stack-size=SIZE          Set size of stack segment\n"
msgstr ""

#: lexsup.c:1969
#, c-format
msgid ""
"  -z text                     Treat DT_TEXTREL in output as error (default)\n"
msgstr ""

#: lexsup.c:1972
#, c-format
msgid "  -z text                     Treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:1976
#, c-format
msgid ""
"  -z notext                   Don't treat DT_TEXTREL in output as error "
"(default)\n"
msgstr ""

#: lexsup.c:1978
#, c-format
msgid ""
"  -z textoff                  Don't treat DT_TEXTREL in output as error "
"(default)\n"
msgstr ""

#: lexsup.c:1983
#, c-format
msgid ""
"  -z notext                   Don't treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:1985
#, c-format
msgid ""
"  -z textoff                  Don't treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:1993
#, c-format
msgid "  --build-id[=STYLE]          Generate build ID note\n"
msgstr ""

#: lexsup.c:1995
#, c-format
msgid ""
"  --compress-debug-sections=[none|zlib|zlib-gnu|zlib-gabi]\n"
"                              Compress DWARF debug sections using zlib\n"
msgstr ""

#: lexsup.c:1999
#, c-format
msgid "                               Default: zlib-gabi\n"
msgstr ""

#: lexsup.c:2002
#, c-format
msgid "                               Default: none\n"
msgstr ""

#: lexsup.c:2005
#, c-format
msgid "  -z common-page-size=SIZE    Set common page size to SIZE\n"
msgstr ""

#: lexsup.c:2007
#, c-format
msgid "  -z max-page-size=SIZE       Set maximum page size to SIZE\n"
msgstr ""

#: lexsup.c:2009
#, c-format
msgid ""
"  -z defs                     Report unresolved symbols in object files\n"
msgstr ""

#: lexsup.c:2011
#, c-format
msgid "  -z muldefs                  Allow multiple definitions\n"
msgstr ""

#: lexsup.c:2013
#, c-format
msgid ""
"  -z execstack                Mark executable as requiring executable stack\n"
msgstr ""

#: lexsup.c:2015
#, c-format
msgid ""
"  -z noexecstack              Mark executable as not requiring executable "
"stack\n"
msgstr ""

#: lexsup.c:2017
#, c-format
msgid ""
"  -z globalaudit              Mark executable requiring global auditing\n"
msgstr ""

#: lexsup.c:2024
#, c-format
msgid ""
"  --ld-generated-unwind-info  Generate exception handling info for PLT\n"
msgstr ""

#: lexsup.c:2026
#, c-format
msgid ""
"  --no-ld-generated-unwind-info\n"
"                              Don't generate exception handling info for "
"PLT\n"
msgstr ""

#: lexsup.c:2037
#, c-format
msgid "ELF emulations:\n"
msgstr ""

#: lexsup.c:2055
#, c-format
msgid "Usage: %s [options] file...\n"
msgstr ""

#: lexsup.c:2057
#, c-format
msgid "Options:\n"
msgstr ""

#: lexsup.c:2135
#, c-format
msgid "  @FILE"
msgstr ""

#: lexsup.c:2138
#, c-format
msgid "Read options from FILE\n"
msgstr ""

#. Note: Various tools (such as libtool) depend upon the
#. format of the listings below - do not change them.
#: lexsup.c:2143
#, c-format
msgid "%s: supported targets:"
msgstr ""

#: lexsup.c:2151
#, c-format
msgid "%s: supported emulations: "
msgstr ""

#: lexsup.c:2156
#, c-format
msgid "%s: emulation specific options:\n"
msgstr ""

#: lexsup.c:2163
#, c-format
msgid "Report bugs to %s\n"
msgstr ""

#: mri.c:291
msgid "%F%P: unknown format type %s\n"
msgstr ""

#: pe-dll.c:447
msgid "%X%P: unsupported PEI architecture: %s\n"
msgstr ""

#: pe-dll.c:825
msgid "%X%P: cannot export %s: invalid export name\n"
msgstr ""

#: pe-dll.c:877
#, c-format
msgid "%X%P: error, duplicate EXPORT with ordinals: %s (%d vs %d)\n"
msgstr ""

#: pe-dll.c:884
#, c-format
msgid "%P: warning, duplicate EXPORT: %s\n"
msgstr ""

#: pe-dll.c:991
#, c-format
msgid "%X%P: cannot export %s: symbol not defined\n"
msgstr ""

#: pe-dll.c:997
#, c-format
msgid "%X%P: cannot export %s: symbol wrong type (%d vs %d)\n"
msgstr ""

#: pe-dll.c:1004
#, c-format
msgid "%X%P: cannot export %s: symbol not found\n"
msgstr ""

#: pe-dll.c:1027 eaarch64cloudabi.c:360 eaarch64cloudabib.c:360
#: eaarch64elf.c:360 eaarch64elf32.c:360 eaarch64elf32b.c:360
#: eaarch64elfb.c:360 eaarch64fbsd.c:360 eaarch64fbsdb.c:360
#: eaarch64linux.c:360 eaarch64linux32.c:360 eaarch64linux32b.c:360
#: eaarch64linuxb.c:360 eaix5ppc.c:1432 eaix5ppc.c:1442 eaix5rs6.c:1432
#: eaix5rs6.c:1442 eaixppc.c:1432 eaixppc.c:1442 eaixrs6.c:1432 eaixrs6.c:1442
#: earmelf.c:569 earmelf_fbsd.c:569 earmelf_fuchsia.c:569 earmelf_linux.c:569
#: earmelf_linux_eabi.c:569 earmelf_linux_fdpiceabi.c:569 earmelf_nacl.c:569
#: earmelf_nbsd.c:569 earmelf_phoenix.c:569 earmelf_vxworks.c:569
#: earmelfb.c:569 earmelfb_fbsd.c:569 earmelfb_fuchsia.c:569
#: earmelfb_linux.c:569 earmelfb_linux_eabi.c:569
#: earmelfb_linux_fdpiceabi.c:569 earmelfb_nacl.c:569 earmelfb_nbsd.c:569
#: earmnto.c:569 earmsymbian.c:569 ecskyelf.c:163 ecskyelf_linux.c:163
#: eelf32b4300.c:172 eelf32bmip.c:172 eelf32bmipn32.c:186 eelf32bsmip.c:186
#: eelf32btsmip.c:172 eelf32btsmip_fbsd.c:172 eelf32btsmipn32.c:172
#: eelf32btsmipn32_fbsd.c:172 eelf32ebmip.c:172 eelf32ebmipvxworks.c:172
#: eelf32elmip.c:172 eelf32elmipvxworks.c:172 eelf32l4300.c:172
#: eelf32lmip.c:172 eelf32lr5900.c:172 eelf32lr5900n32.c:172 eelf32lsmip.c:172
#: eelf32ltsmip.c:172 eelf32ltsmip_fbsd.c:172 eelf32ltsmipn32.c:172
#: eelf32ltsmipn32_fbsd.c:172 eelf32metag.c:87 eelf32mipswindiss.c:172
#: eelf64bmip.c:186 eelf64btsmip.c:172 eelf64btsmip_fbsd.c:172 eelf64lppc.c:117
#: eelf64ltsmip.c:172 eelf64ltsmip_fbsd.c:172 eelf64ppc.c:117
#: eelf64ppc_fbsd.c:117 ehppaelf.c:110 ehppalinux.c:110 ehppanbsd.c:110
#: ehppaobsd.c:110 em68hc11elf.c:170 em68hc11elfb.c:170 em68hc12elf.c:170
#: em68hc12elfb.c:170 enios2elf.c:92 enios2linux.c:92 eppcmacos.c:1432
#: eppcmacos.c:1442
msgid "%F%P: can not create BFD: %E\n"
msgstr ""

#: pe-dll.c:1041
msgid "%X%P: can not create .edata section: %E\n"
msgstr ""

#: pe-dll.c:1055
msgid "%X%P: can not create .reloc section: %E\n"
msgstr ""

#: pe-dll.c:1116
#, c-format
msgid "%X%P: error: ordinal used twice: %d (%s vs %s)\n"
msgstr ""

#: pe-dll.c:1152
#, c-format
msgid "%X%P: error: export ordinal too large: %d\n"
msgstr ""

#: pe-dll.c:1475
#, c-format
msgid "Info: resolving %s by linking to %s (auto-import)\n"
msgstr ""

#: pe-dll.c:1481
msgid ""
"%P: warning: auto-importing has been activated without --enable-auto-import "
"specified on the command line; this should work unless it involves constant "
"data structures referencing symbols from auto-imported DLLs\n"
msgstr ""

#. Huh?  Shouldn't happen, but punt if it does.
#: pe-dll.c:1550
msgid "%P: zero vma section reloc detected: `%s' #%d f=%d\n"
msgstr ""

#: pe-dll.c:1666
#, c-format
msgid "%X%P: error: %d-bit reloc in dll\n"
msgstr ""

#: pe-dll.c:1794
#, c-format
msgid "%P: can't open output def file %s\n"
msgstr ""

#: pe-dll.c:1945
#, c-format
msgid "; no contents available\n"
msgstr ""

#: pe-dll.c:2804
msgid ""
"%X%P: %C: variable '%pT' can't be auto-imported; please read the "
"documentation for ld's --enable-auto-import for details\n"
msgstr ""

#: pe-dll.c:2831
#, c-format
msgid "%X%P: can't open .lib file: %s\n"
msgstr ""

#: pe-dll.c:2837
#, c-format
msgid "Creating library file: %s\n"
msgstr ""

#: pe-dll.c:2867
msgid "%X%P: bfd_openr %s: %E\n"
msgstr ""

#: pe-dll.c:2879
msgid "%X%P: %s(%s): can't find member in non-archive file"
msgstr ""

#: pe-dll.c:2893
msgid "%X%P: %s(%s): can't find member in archive"
msgstr ""

#: pe-dll.c:3156
msgid "%X%P: add symbols %s: %E\n"
msgstr ""

#: pe-dll.c:3343
msgid "%X%P: open %s: %E\n"
msgstr ""

#: pe-dll.c:3350
msgid "%X%P: %s: this doesn't appear to be a DLL\n"
msgstr ""

#: pe-dll.c:3555
msgid "%X%P: error: can't use long section names on this arch\n"
msgstr ""

#: plugin.c:232 plugin.c:278
msgid "<no plugin>"
msgstr ""

#: plugin.c:247 plugin.c:1099
msgid "%F%P: %s: error loading plugin: %s\n"
msgstr ""

#: plugin.c:254
msgid "%P: %s: duplicated plugin\n"
msgstr ""

#: plugin.c:340
msgid "%F%P: could not create dummy IR bfd: %E\n"
msgstr ""

#: plugin.c:421
msgid "%F%P: %s: non-ELF symbol in ELF BFD!\n"
msgstr ""

#: plugin.c:432
msgid "%F%P: unknown ELF symbol visibility: %d!\n"
msgstr ""

#: plugin.c:541
msgid "%F%P: unsupported input file size: %s (%ld bytes)\n"
msgstr ""

#: plugin.c:678
#, c-format
msgid "unknown LTO kind value %x"
msgstr ""

#: plugin.c:704
#, c-format
msgid "unknown LTO resolution value %x"
msgstr ""

#: plugin.c:724
#, c-format
msgid "unknown LTO visibility value %x"
msgstr ""

#. We should not have a new, indirect or warning symbol here.
#: plugin.c:804
msgid "%F%P: %s: plugin symbol table corrupt (sym type %d)\n"
msgstr ""

#: plugin.c:866
msgid "%P: %pB: symbol `%s' definition: %s, visibility: %s, resolution: %s\n"
msgstr ""

#: plugin.c:943
msgid "%P: warning: "
msgstr ""

#: plugin.c:954
msgid "%P: error: "
msgstr ""

#: plugin.c:1106
msgid "%F%P: %s: plugin error: %d\n"
msgstr ""

#: plugin.c:1161
msgid "%F%P: plugin_strdup failed to allocate memory: %s\n"
msgstr ""

#: plugin.c:1198
msgid "%F%P: plugin failed to allocate memory for input: %s\n"
msgstr ""

#: plugin.c:1225
msgid "%F%P: %s: plugin reported error claiming file\n"
msgstr ""

#: plugin.c:1336
msgid "%P: %s: error in plugin cleanup: %d (ignored)\n"
msgstr ""

#: eaarch64cloudabi.c:223 eaarch64cloudabib.c:223 eaarch64elf.c:223
#: eaarch64elf32.c:223 eaarch64elf32b.c:223 eaarch64elfb.c:223
#: eaarch64fbsd.c:223 eaarch64fbsdb.c:223 eaarch64linux.c:223
#: eaarch64linux32.c:223 eaarch64linux32b.c:223 eaarch64linuxb.c:223
#: earmelf.c:293 earmelf_fbsd.c:293 earmelf_fuchsia.c:293 earmelf_linux.c:293
#: earmelf_linux_eabi.c:293 earmelf_linux_fdpiceabi.c:293 earmelf_nacl.c:293
#: earmelf_nbsd.c:293 earmelf_phoenix.c:293 earmelf_vxworks.c:293
#: earmelfb.c:293 earmelfb_fbsd.c:293 earmelfb_fuchsia.c:293
#: earmelfb_linux.c:293 earmelfb_linux_eabi.c:293
#: earmelfb_linux_fdpiceabi.c:293 earmelfb_nacl.c:293 earmelfb_nbsd.c:293
#: earmnto.c:293 earmsymbian.c:293 eavr1.c:178 eavr2.c:178 eavr25.c:178
#: eavr3.c:178 eavr31.c:178 eavr35.c:178 eavr4.c:178 eavr5.c:178 eavr51.c:178
#: eavr6.c:178 eavrtiny.c:178 eavrxmega1.c:178 eavrxmega2.c:178
#: eavrxmega3.c:178 eavrxmega4.c:178 eavrxmega5.c:178 eavrxmega6.c:178
#: eavrxmega7.c:178 ecskyelf.c:210 ecskyelf_linux.c:210 eelf32b4300.c:205
#: eelf32bmip.c:205 eelf32bmipn32.c:219 eelf32bsmip.c:219 eelf32btsmip.c:205
#: eelf32btsmip_fbsd.c:205 eelf32btsmipn32.c:205 eelf32btsmipn32_fbsd.c:205
#: eelf32ebmip.c:205 eelf32ebmipvxworks.c:205 eelf32elmip.c:205
#: eelf32elmipvxworks.c:205 eelf32l4300.c:205 eelf32lmip.c:205
#: eelf32lr5900.c:205 eelf32lr5900n32.c:205 eelf32lsmip.c:205
#: eelf32ltsmip.c:205 eelf32ltsmip_fbsd.c:205 eelf32ltsmipn32.c:205
#: eelf32ltsmipn32_fbsd.c:205 eelf32metag.c:206 eelf32mipswindiss.c:205
#: eelf64bmip.c:219 eelf64btsmip.c:205 eelf64btsmip_fbsd.c:205 eelf64lppc.c:470
#: eelf64ltsmip.c:205 eelf64ltsmip_fbsd.c:205 eelf64ppc.c:470
#: eelf64ppc_fbsd.c:470 ehppaelf.c:230 ehppalinux.c:230 ehppanbsd.c:230
#: ehppaobsd.c:230 em68hc11elf.c:295 em68hc11elfb.c:295 em68hc12elf.c:295
#: em68hc12elfb.c:295 enios2elf.c:223 enios2linux.c:223
msgid "%X%P: can not make stub section: %E\n"
msgstr ""

#: eaarch64cloudabi.c:266 eaarch64cloudabib.c:266 eaarch64elf.c:266
#: eaarch64elf32.c:266 eaarch64elf32b.c:266 eaarch64elfb.c:266
#: eaarch64fbsd.c:266 eaarch64fbsdb.c:266 eaarch64linux.c:266
#: eaarch64linux32.c:266 eaarch64linux32b.c:266 eaarch64linuxb.c:266
#: earcelf.c:97 earclinux.c:97 earclinux_nps.c:97 earcv2elf.c:97
#: earcv2elfx.c:97 earmelf.c:405 earmelf_fbsd.c:405 earmelf_fuchsia.c:405
#: earmelf_linux.c:405 earmelf_linux_eabi.c:405 earmelf_linux_fdpiceabi.c:405
#: earmelf_nacl.c:405 earmelf_nbsd.c:405 earmelf_phoenix.c:405
#: earmelf_vxworks.c:405 earmelfb.c:405 earmelfb_fbsd.c:405
#: earmelfb_fuchsia.c:405 earmelfb_linux.c:405 earmelfb_linux_eabi.c:405
#: earmelfb_linux_fdpiceabi.c:405 earmelfb_nacl.c:405 earmelfb_nbsd.c:405
#: earmnto.c:405 earmsymbian.c:405 eavr1.c:300 eavr2.c:300 eavr25.c:300
#: eavr3.c:300 eavr31.c:300 eavr35.c:300 eavr4.c:300 eavr5.c:300 eavr51.c:300
#: eavr6.c:300 eavrtiny.c:300 eavrxmega1.c:300 eavrxmega2.c:300
#: eavrxmega3.c:300 eavrxmega4.c:300 eavrxmega5.c:300 eavrxmega6.c:300
#: eavrxmega7.c:300 ecriself.c:97 ecrislinux.c:97 ed10velf.c:97
#: eelf32_sparc.c:97 eelf32_sparc_sol2.c:228 eelf32_sparc_vxworks.c:126
#: eelf32_spu.c:631 eelf32_tic6x_be.c:181 eelf32_tic6x_elf_be.c:181
#: eelf32_tic6x_elf_le.c:181 eelf32_tic6x_le.c:181 eelf32_tic6x_linux_be.c:181
#: eelf32_tic6x_linux_le.c:181 eelf32_x86_64.c:121 eelf32_x86_64_nacl.c:121
#: eelf32am33lin.c:97 eelf32b4300.c:293 eelf32bfin.c:107 eelf32bfinfd.c:107
#: eelf32bmip.c:293 eelf32bmipn32.c:307 eelf32bsmip.c:307 eelf32btsmip.c:293
#: eelf32btsmip_fbsd.c:293 eelf32btsmipn32.c:293 eelf32btsmipn32_fbsd.c:293
#: eelf32cr16.c:247 eelf32crx.c:134 eelf32ebmip.c:293 eelf32ebmipvxworks.c:322
#: eelf32elmip.c:293 eelf32elmipvxworks.c:322 eelf32epiphany.c:97
#: eelf32epiphany_4x4.c:99 eelf32frvfd.c:97 eelf32ip2k.c:97 eelf32l4300.c:293
#: eelf32lm32.c:97 eelf32lm32fd.c:97 eelf32lmip.c:293 eelf32lppc.c:305
#: eelf32lppclinux.c:305 eelf32lppcnto.c:305 eelf32lppcsim.c:305
#: eelf32lr5900.c:293 eelf32lr5900n32.c:293 eelf32lriscv.c:89
#: eelf32lriscv_ilp32.c:89 eelf32lriscv_ilp32f.c:89 eelf32lsmip.c:293
#: eelf32ltsmip.c:293 eelf32ltsmip_fbsd.c:293 eelf32ltsmipn32.c:293
#: eelf32ltsmipn32_fbsd.c:293 eelf32m32c.c:108 eelf32mb_linux.c:97
#: eelf32mbel_linux.c:97 eelf32mcore.c:97 eelf32mep.c:97 eelf32metag.c:256
#: eelf32microblaze.c:97 eelf32microblazeel.c:97 eelf32mipswindiss.c:293
#: eelf32moxie.c:97 eelf32or1k.c:97 eelf32or1k_linux.c:97 eelf32ppc.c:305
#: eelf32ppc_fbsd.c:305 eelf32ppclinux.c:305 eelf32ppcnto.c:305
#: eelf32ppcsim.c:305 eelf32ppcvxworks.c:279 eelf32ppcwindiss.c:305
#: eelf32rl78.c:97 eelf32rx.c:113 eelf32rx_linux.c:110 eelf32tilegx.c:97
#: eelf32tilegx_be.c:97 eelf32tilepro.c:97 eelf32vax.c:97 eelf32visium.c:97
#: eelf32xc16x.c:97 eelf32xc16xl.c:97 eelf32xc16xs.c:97 eelf32xstormy16.c:108
#: eelf32xtensa.c:1985 eelf32z80.c:124 eelf64_aix.c:97 eelf64_ia64.c:123
#: eelf64_ia64_fbsd.c:123 eelf64_ia64_vms.c:220 eelf64_s390.c:112
#: eelf64_sparc.c:97 eelf64_sparc_fbsd.c:97 eelf64_sparc_sol2.c:228
#: eelf64alpha.c:180 eelf64alpha_fbsd.c:180 eelf64alpha_nbsd.c:180
#: eelf64bmip.c:307 eelf64bpf.c:97 eelf64btsmip.c:293 eelf64btsmip_fbsd.c:293
#: eelf64hppa.c:97 eelf64lppc.c:580 eelf64lriscv.c:89 eelf64lriscv_lp64.c:89
#: eelf64lriscv_lp64f.c:89 eelf64ltsmip.c:293 eelf64ltsmip_fbsd.c:293
#: eelf64mmix.c:208 eelf64ppc.c:580 eelf64ppc_fbsd.c:580 eelf64rdos.c:112
#: eelf64tilegx.c:97 eelf64tilegx_be.c:97 eelf_i386.c:121 eelf_i386_be.c:121
#: eelf_i386_fbsd.c:121 eelf_i386_ldso.c:121 eelf_i386_nacl.c:121
#: eelf_i386_sol2.c:252 eelf_i386_vxworks.c:150 eelf_iamcu.c:121
#: eelf_k1om.c:121 eelf_k1om_fbsd.c:121 eelf_l1om.c:121 eelf_l1om_fbsd.c:121
#: eelf_s390.c:97 eelf_x86_64.c:121 eelf_x86_64_cloudabi.c:121
#: eelf_x86_64_fbsd.c:121 eelf_x86_64_nacl.c:121 eelf_x86_64_sol2.c:252
#: eh8300elf.c:97 eh8300elf_linux.c:97 eh8300helf.c:97 eh8300helf_linux.c:97
#: eh8300hnelf.c:97 eh8300self.c:97 eh8300self_linux.c:97 eh8300snelf.c:97
#: eh8300sxelf.c:97 eh8300sxelf_linux.c:97 eh8300sxnelf.c:97 ehppa64linux.c:97
#: ehppaelf.c:280 ehppalinux.c:280 ehppanbsd.c:280 ehppaobsd.c:280
#: ei386lynx.c:112 ei386moss.c:112 ei386nto.c:112 em32relf.c:97
#: em32relf_linux.c:97 em32rlelf.c:97 em32rlelf_linux.c:97 em68hc11elf.c:374
#: em68hc11elfb.c:374 em68hc12elf.c:374 em68hc12elfb.c:374 em68kelf.c:248
#: em68kelfnbsd.c:248 emn10300.c:97 ends32belf.c:204 ends32belf16m.c:204
#: ends32belf_linux.c:204 ends32elf.c:204 ends32elf16m.c:204
#: ends32elf_linux.c:204 enios2elf.c:273 enios2linux.c:273 eppclynx.c:305
#: epruelf.c:117 escore3_elf.c:118 escore7_elf.c:118 eshelf.c:97 eshelf_fd.c:97
#: eshelf_linux.c:97 eshelf_nbsd.c:97 eshelf_nto.c:97 eshelf_uclinux.c:97
#: eshelf_vxworks.c:126 eshlelf.c:97 eshlelf_fd.c:97 eshlelf_linux.c:97
#: eshlelf_nbsd.c:97 eshlelf_nto.c:97 eshlelf_vxworks.c:126 ev850.c:144
#: ev850_rh850.c:144 ewasm32.c:97
msgid "%X%P: .eh_frame/.stab edit: %E\n"
msgstr ""

#: eaarch64cloudabi.c:282 eaarch64cloudabib.c:282 eaarch64elf.c:282
#: eaarch64elf32.c:282 eaarch64elf32b.c:282 eaarch64elfb.c:282
#: eaarch64fbsd.c:282 eaarch64fbsdb.c:282 eaarch64linux.c:282
#: eaarch64linux32.c:282 eaarch64linux32b.c:282 eaarch64linuxb.c:282
#: earmelf.c:420 earmelf_fbsd.c:420 earmelf_fuchsia.c:420 earmelf_linux.c:420
#: earmelf_linux_eabi.c:420 earmelf_linux_fdpiceabi.c:420 earmelf_nacl.c:420
#: earmelf_nbsd.c:420 earmelf_phoenix.c:420 earmelf_vxworks.c:420
#: earmelfb.c:420 earmelfb_fbsd.c:420 earmelfb_fuchsia.c:420
#: earmelfb_linux.c:420 earmelfb_linux_eabi.c:420
#: earmelfb_linux_fdpiceabi.c:420 earmelfb_nacl.c:420 earmelfb_nbsd.c:420
#: earmnto.c:420 earmsymbian.c:420 ecskyelf.c:260 ecskyelf_linux.c:260
msgid "%X%P: could not compute sections lists for stub generation: %E\n"
msgstr ""

#: eaarch64cloudabi.c:297 eaarch64cloudabib.c:297 eaarch64elf.c:297
#: eaarch64elf32.c:297 eaarch64elf32b.c:297 eaarch64elfb.c:297
#: eaarch64fbsd.c:297 eaarch64fbsdb.c:297 eaarch64linux.c:297
#: eaarch64linux32.c:297 eaarch64linux32b.c:297 eaarch64linuxb.c:297
#: earmelf.c:435 earmelf_fbsd.c:435 earmelf_fuchsia.c:435 earmelf_linux.c:435
#: earmelf_linux_eabi.c:435 earmelf_linux_fdpiceabi.c:435 earmelf_nacl.c:435
#: earmelf_nbsd.c:435 earmelf_phoenix.c:435 earmelf_vxworks.c:435
#: earmelfb.c:435 earmelfb_fbsd.c:435 earmelfb_fuchsia.c:435
#: earmelfb_linux.c:435 earmelfb_linux_eabi.c:435
#: earmelfb_linux_fdpiceabi.c:435 earmelfb_nacl.c:435 earmelfb_nbsd.c:435
#: earmnto.c:435 earmsymbian.c:435 eavr1.c:129 eavr1.c:192 eavr2.c:129
#: eavr2.c:192 eavr25.c:129 eavr25.c:192 eavr3.c:129 eavr3.c:192 eavr31.c:129
#: eavr31.c:192 eavr35.c:129 eavr35.c:192 eavr4.c:129 eavr4.c:192 eavr5.c:129
#: eavr5.c:192 eavr51.c:129 eavr51.c:192 eavr6.c:129 eavr6.c:192 eavrtiny.c:129
#: eavrtiny.c:192 eavrxmega1.c:129 eavrxmega1.c:192 eavrxmega2.c:129
#: eavrxmega2.c:192 eavrxmega3.c:129 eavrxmega3.c:192 eavrxmega4.c:129
#: eavrxmega4.c:192 eavrxmega5.c:129 eavrxmega5.c:192 eavrxmega6.c:129
#: eavrxmega6.c:192 eavrxmega7.c:129 eavrxmega7.c:192 eelf32metag.c:271
#: eelf32metag.c:285 eelf64lppc.c:523 eelf64lppc.c:542 eelf64lppc.c:569
#: eelf64ppc.c:523 eelf64ppc.c:542 eelf64ppc.c:569 eelf64ppc_fbsd.c:523
#: eelf64ppc_fbsd.c:542 eelf64ppc_fbsd.c:569 ehppaelf.c:295 ehppaelf.c:310
#: ehppalinux.c:295 ehppalinux.c:310 ehppanbsd.c:295 ehppanbsd.c:310
#: ehppaobsd.c:295 ehppaobsd.c:310 em68hc11elf.c:90 em68hc11elf.c:100
#: em68hc11elf.c:317 em68hc11elfb.c:90 em68hc11elfb.c:100 em68hc11elfb.c:317
#: em68hc12elf.c:90 em68hc12elf.c:100 em68hc12elf.c:317 em68hc12elfb.c:90
#: em68hc12elfb.c:100 em68hc12elfb.c:317 enios2elf.c:290 enios2elf.c:303
#: enios2linux.c:290 enios2linux.c:303
msgid "%X%P: can not size stub section: %E\n"
msgstr ""

#: eaarch64cloudabi.c:316 eaarch64cloudabib.c:316 eaarch64elf.c:316
#: eaarch64elf32.c:316 eaarch64elf32b.c:316 eaarch64elfb.c:316
#: eaarch64fbsd.c:316 eaarch64fbsdb.c:316 eaarch64linux.c:316
#: eaarch64linux32.c:316 eaarch64linux32b.c:316 eaarch64linuxb.c:316
#: earmelf.c:469 earmelf_fbsd.c:469 earmelf_fuchsia.c:469 earmelf_linux.c:469
#: earmelf_linux_eabi.c:469 earmelf_linux_fdpiceabi.c:469 earmelf_nacl.c:469
#: earmelf_nbsd.c:469 earmelf_phoenix.c:469 earmelf_vxworks.c:469
#: earmelfb.c:469 earmelfb_fbsd.c:469 earmelfb_fuchsia.c:469
#: earmelfb_linux.c:469 earmelfb_linux_eabi.c:469
#: earmelfb_linux_fdpiceabi.c:469 earmelfb_nacl.c:469 earmelfb_nbsd.c:469
#: earmnto.c:469 earmsymbian.c:469 eavr1.c:201 eavr2.c:201 eavr25.c:201
#: eavr3.c:201 eavr31.c:201 eavr35.c:201 eavr4.c:201 eavr5.c:201 eavr51.c:201
#: eavr6.c:201 eavrtiny.c:201 eavrxmega1.c:201 eavrxmega2.c:201
#: eavrxmega3.c:201 eavrxmega4.c:201 eavrxmega5.c:201 eavrxmega6.c:201
#: eavrxmega7.c:201 eelf32metag.c:300 eelf64lppc.c:619 eelf64ppc.c:619
#: eelf64ppc_fbsd.c:619 ehppaelf.c:332 ehppalinux.c:332 ehppanbsd.c:332
#: ehppaobsd.c:332 em68hc11elf.c:321 em68hc11elfb.c:321 em68hc12elf.c:321
#: em68hc12elfb.c:321 enios2elf.c:318 enios2linux.c:318
msgid "%X%P: can not build stubs: %E\n"
msgstr ""

#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The RISC-V backend needs special fields in the output hash structure.
#. These will only be created if the output format is a RISC-V format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. Check the output target is nds32.
#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The score backend needs special fields in the output hash structure.
#. These will only be created if the output format is an score format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The V850 backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#: eaarch64cloudabi.c:334 eaarch64cloudabib.c:334 eaarch64elf.c:334
#: eaarch64elf32.c:334 eaarch64elf32b.c:334 eaarch64elfb.c:334
#: eaarch64fbsd.c:334 eaarch64fbsdb.c:334 eaarch64linux.c:334
#: eaarch64linux32.c:334 eaarch64linux32b.c:334 eaarch64linuxb.c:334
#: earm_wince_pe.c:1377 earmelf.c:541 earmelf_fbsd.c:541 earmelf_fuchsia.c:541
#: earmelf_linux.c:541 earmelf_linux_eabi.c:541 earmelf_linux_fdpiceabi.c:541
#: earmelf_nacl.c:541 earmelf_nbsd.c:541 earmelf_phoenix.c:541
#: earmelf_vxworks.c:541 earmelfb.c:541 earmelfb_fbsd.c:541
#: earmelfb_fuchsia.c:541 earmelfb_linux.c:541 earmelfb_linux_eabi.c:541
#: earmelfb_linux_fdpiceabi.c:541 earmelfb_nacl.c:541 earmelfb_nbsd.c:541
#: earmnto.c:541 earmpe.c:1377 earmsymbian.c:541 eavr1.c:142 eavr2.c:142
#: eavr25.c:142 eavr3.c:142 eavr31.c:142 eavr35.c:142 eavr4.c:142 eavr5.c:142
#: eavr51.c:142 eavr6.c:142 eavrtiny.c:142 eavrxmega1.c:142 eavrxmega2.c:142
#: eavrxmega3.c:142 eavrxmega4.c:142 eavrxmega5.c:142 eavrxmega6.c:142
#: eavrxmega7.c:142 eelf32lriscv.c:110 eelf32lriscv_ilp32.c:110
#: eelf32lriscv_ilp32f.c:110 eelf64lriscv.c:110 eelf64lriscv_lp64.c:110
#: eelf64lriscv_lp64f.c:110 ei386pe.c:1377 ei386pe_posix.c:1377 emcorepe.c:1377
#: ends32belf.c:74 ends32belf16m.c:74 ends32belf_linux.c:74 ends32elf.c:74
#: ends32elf16m.c:74 ends32elf_linux.c:74 eppcpe.c:1377 escore3_elf.c:76
#: escore7_elf.c:76 eshpe.c:1377 ev850.c:91 ev850_rh850.c:91
msgid "%F%P: error: cannot change output format whilst linking %s binaries\n"
msgstr ""

#: eaarch64cloudabi.c:570 eaarch64cloudabib.c:570 eaarch64elf.c:570
#: eaarch64elf32.c:570 eaarch64elf32b.c:570 eaarch64elfb.c:570
#: eaarch64fbsd.c:570 eaarch64fbsdb.c:570 eaarch64linux.c:570
#: eaarch64linux32.c:570 eaarch64linux32b.c:570 eaarch64linuxb.c:570
#: earcelf.c:203 earclinux.c:258 earclinux_nps.c:258 earcv2elf.c:187
#: earcv2elfx.c:187 earmelf.c:813 earmelf_fbsd.c:813 earmelf_fuchsia.c:813
#: earmelf_linux.c:813 earmelf_linux_eabi.c:813 earmelf_linux_fdpiceabi.c:813
#: earmelf_nacl.c:813 earmelf_nbsd.c:813 earmelf_phoenix.c:813
#: earmelf_vxworks.c:849 earmelfb.c:813 earmelfb_fbsd.c:813
#: earmelfb_fuchsia.c:813 earmelfb_linux.c:813 earmelfb_linux_eabi.c:813
#: earmelfb_linux_fdpiceabi.c:813 earmelfb_nacl.c:813 earmelfb_nbsd.c:813
#: earmnto.c:788 earmsymbian.c:813 eavr1.c:410 eavr2.c:410 eavr25.c:410
#: eavr3.c:410 eavr31.c:410 eavr35.c:410 eavr4.c:410 eavr5.c:410 eavr51.c:410
#: eavr6.c:410 eavrtiny.c:410 eavrxmega1.c:410 eavrxmega2.c:410
#: eavrxmega3.c:410 eavrxmega4.c:410 eavrxmega5.c:410 eavrxmega6.c:410
#: eavrxmega7.c:410 ecriself.c:202 ecrislinux.c:233 ecskyelf.c:446
#: ecskyelf_linux.c:502 ed10velf.c:187 eelf32_sparc.c:258
#: eelf32_sparc_sol2.c:389 eelf32_sparc_vxworks.c:295 eelf32_spu.c:784
#: eelf32_tic6x_be.c:370 eelf32_tic6x_elf_be.c:370 eelf32_tic6x_elf_le.c:370
#: eelf32_tic6x_le.c:370 eelf32_tic6x_linux_be.c:370
#: eelf32_tic6x_linux_le.c:370 eelf32_x86_64.c:292 eelf32_x86_64_nacl.c:292
#: eelf32am33lin.c:233 eelf32b4300.c:473 eelf32bfin.c:251 eelf32bfinfd.c:276
#: eelf32bmip.c:473 eelf32bmipn32.c:487 eelf32bsmip.c:487 eelf32btsmip.c:473
#: eelf32btsmip_fbsd.c:473 eelf32btsmipn32.c:473 eelf32btsmipn32_fbsd.c:473
#: eelf32cr16.c:337 eelf32crx.c:224 eelf32ebmip.c:473 eelf32ebmipvxworks.c:508
#: eelf32elmip.c:473 eelf32elmipvxworks.c:508 eelf32epiphany.c:202
#: eelf32epiphany_4x4.c:189 eelf32frvfd.c:258 eelf32ip2k.c:202
#: eelf32l4300.c:473 eelf32lm32.c:202 eelf32lm32fd.c:258 eelf32lmip.c:473
#: eelf32lppc.c:509 eelf32lppclinux.c:509 eelf32lppcnto.c:509
#: eelf32lppcsim.c:509 eelf32lr5900.c:442 eelf32lr5900n32.c:442
#: eelf32lriscv.c:312 eelf32lriscv_ilp32.c:312 eelf32lriscv_ilp32f.c:312
#: eelf32lsmip.c:473 eelf32ltsmip.c:473 eelf32ltsmip_fbsd.c:473
#: eelf32ltsmipn32.c:473 eelf32ltsmipn32_fbsd.c:473 eelf32m32c.c:213
#: eelf32mb_linux.c:258 eelf32mbel_linux.c:258 eelf32mcore.c:208
#: eelf32mep.c:187 eelf32metag.c:507 eelf32microblaze.c:187
#: eelf32microblazeel.c:187 eelf32mipswindiss.c:417 eelf32moxie.c:202
#: eelf32or1k.c:202 eelf32or1k_linux.c:258 eelf32ppc.c:509 eelf32ppc_fbsd.c:509
#: eelf32ppclinux.c:509 eelf32ppcnto.c:509 eelf32ppcsim.c:509
#: eelf32ppcvxworks.c:483 eelf32ppcwindiss.c:509 eelf32rl78.c:202
#: eelf32rx.c:230 eelf32rx_linux.c:215 eelf32tilegx.c:258 eelf32tilegx_be.c:258
#: eelf32tilepro.c:258 eelf32vax.c:233 eelf32visium.c:187 eelf32xc16x.c:187
#: eelf32xc16xl.c:187 eelf32xc16xs.c:187 eelf32xstormy16.c:198
#: eelf32xtensa.c:2158 eelf32z80.c:214 eelf64_aix.c:233 eelf64_ia64.c:290
#: eelf64_ia64_fbsd.c:290 eelf64_s390.c:328 eelf64_sparc.c:258
#: eelf64_sparc_fbsd.c:258 eelf64_sparc_sol2.c:389 eelf64alpha.c:351
#: eelf64alpha_fbsd.c:351 eelf64alpha_nbsd.c:351 eelf64bmip.c:487
#: eelf64bpf.c:187 eelf64btsmip.c:473 eelf64btsmip_fbsd.c:473 eelf64hppa.c:203
#: eelf64lppc.c:941 eelf64lriscv.c:312 eelf64lriscv_lp64.c:312
#: eelf64lriscv_lp64f.c:312 eelf64ltsmip.c:473 eelf64ltsmip_fbsd.c:473
#: eelf64mmix.c:4010 eelf64ppc.c:941 eelf64ppc_fbsd.c:941 eelf64rdos.c:283
#: eelf64tilegx.c:258 eelf64tilegx_be.c:258 eelf_i386.c:292 eelf_i386_be.c:257
#: eelf_i386_fbsd.c:292 eelf_i386_ldso.c:267 eelf_i386_nacl.c:292
#: eelf_i386_sol2.c:423 eelf_i386_vxworks.c:319 eelf_iamcu.c:4775
#: eelf_k1om.c:5131 eelf_k1om_fbsd.c:5131 eelf_l1om.c:5131
#: eelf_l1om_fbsd.c:5131 eelf_s390.c:258 eelf_x86_64.c:292
#: eelf_x86_64_cloudabi.c:292 eelf_x86_64_fbsd.c:292 eelf_x86_64_nacl.c:292
#: eelf_x86_64_sol2.c:423 eh8300elf.c:202 eh8300elf_linux.c:202
#: eh8300helf.c:202 eh8300helf_linux.c:202 eh8300hnelf.c:202 eh8300self.c:202
#: eh8300self_linux.c:202 eh8300snelf.c:202 eh8300sxelf.c:202
#: eh8300sxelf_linux.c:202 eh8300sxnelf.c:202 ehppa64linux.c:233 ehppaelf.c:470
#: ehppalinux.c:541 ehppanbsd.c:541 ehppaobsd.c:541 ei386lynx.c:248
#: ei386moss.c:248 ei386nto.c:248 em32relf.c:202 em32relf_linux.c:258
#: em32rlelf.c:202 em32rlelf_linux.c:258 em68hc11elf.c:472 em68hc11elfb.c:472
#: em68hc12elf.c:472 em68hc12elfb.c:472 em68kelf.c:415 em68kelfnbsd.c:415
#: emn10300.c:233 ends32belf.c:322 ends32belf16m.c:322 ends32belf_linux.c:345
#: ends32elf.c:322 ends32elf16m.c:322 ends32elf_linux.c:345 enios2elf.c:488
#: enios2linux.c:519 eppclynx.c:509 epruelf.c:207 escore3_elf.c:254
#: escore7_elf.c:254 eshelf.c:233 eshelf_fd.c:258 eshelf_linux.c:258
#: eshelf_nbsd.c:233 eshelf_nto.c:233 eshelf_uclinux.c:233 eshelf_vxworks.c:270
#: eshlelf.c:233 eshlelf_fd.c:258 eshlelf_linux.c:258 eshlelf_nbsd.c:233
#: eshlelf_nto.c:233 eshlelf_vxworks.c:270 ev850.c:234 ev850_rh850.c:234
#: ewasm32.c:2652
msgid "%F%P: invalid --compress-debug-sections option: `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:621 eaarch64cloudabib.c:621 eaarch64elf.c:621
#: eaarch64elf32.c:621 eaarch64elf32b.c:621 eaarch64elfb.c:621
#: eaarch64fbsd.c:621 eaarch64fbsdb.c:621 eaarch64linux.c:621
#: eaarch64linux32.c:621 eaarch64linux32b.c:621 eaarch64linuxb.c:621
#: earcelf.c:254 earclinux.c:309 earclinux_nps.c:309 earmelf.c:864
#: earmelf_fbsd.c:864 earmelf_fuchsia.c:864 earmelf_linux.c:864
#: earmelf_linux_eabi.c:864 earmelf_linux_fdpiceabi.c:864 earmelf_nacl.c:864
#: earmelf_nbsd.c:864 earmelf_phoenix.c:864 earmelf_vxworks.c:900
#: earmelfb.c:864 earmelfb_fbsd.c:864 earmelfb_fuchsia.c:864
#: earmelfb_linux.c:864 earmelfb_linux_eabi.c:864
#: earmelfb_linux_fdpiceabi.c:864 earmelfb_nacl.c:864 earmelfb_nbsd.c:864
#: earmnto.c:839 earmsymbian.c:864 ecrislinux.c:284 ecskyelf_linux.c:553
#: eelf32_sparc.c:309 eelf32_sparc_sol2.c:440 eelf32_sparc_vxworks.c:346
#: eelf32_tic6x_be.c:421 eelf32_tic6x_elf_be.c:421 eelf32_tic6x_elf_le.c:421
#: eelf32_tic6x_le.c:421 eelf32_tic6x_linux_be.c:421
#: eelf32_tic6x_linux_le.c:421 eelf32_x86_64.c:343 eelf32_x86_64_nacl.c:343
#: eelf32am33lin.c:284 eelf32b4300.c:524 eelf32bfin.c:302 eelf32bfinfd.c:327
#: eelf32bmip.c:524 eelf32bmipn32.c:538 eelf32bsmip.c:538 eelf32btsmip.c:524
#: eelf32btsmip_fbsd.c:524 eelf32btsmipn32.c:524 eelf32btsmipn32_fbsd.c:524
#: eelf32ebmip.c:524 eelf32ebmipvxworks.c:559 eelf32elmip.c:524
#: eelf32elmipvxworks.c:559 eelf32frvfd.c:309 eelf32l4300.c:524
#: eelf32lm32fd.c:309 eelf32lmip.c:524 eelf32lppc.c:560 eelf32lppclinux.c:560
#: eelf32lppcnto.c:560 eelf32lppcsim.c:560 eelf32lriscv.c:363
#: eelf32lriscv_ilp32.c:363 eelf32lriscv_ilp32f.c:363 eelf32lsmip.c:524
#: eelf32ltsmip.c:524 eelf32ltsmip_fbsd.c:524 eelf32ltsmipn32.c:524
#: eelf32ltsmipn32_fbsd.c:524 eelf32mb_linux.c:309 eelf32mbel_linux.c:309
#: eelf32metag.c:558 eelf32or1k_linux.c:309 eelf32ppc.c:560
#: eelf32ppc_fbsd.c:560 eelf32ppclinux.c:560 eelf32ppcnto.c:560
#: eelf32ppcsim.c:560 eelf32ppcvxworks.c:534 eelf32ppcwindiss.c:560
#: eelf32tilegx.c:309 eelf32tilegx_be.c:309 eelf32tilepro.c:309 eelf32vax.c:284
#: eelf32xtensa.c:2209 eelf64_aix.c:284 eelf64_ia64.c:341
#: eelf64_ia64_fbsd.c:341 eelf64_s390.c:379 eelf64_sparc.c:309
#: eelf64_sparc_fbsd.c:309 eelf64_sparc_sol2.c:440 eelf64alpha.c:402
#: eelf64alpha_fbsd.c:402 eelf64alpha_nbsd.c:402 eelf64bmip.c:538
#: eelf64btsmip.c:524 eelf64btsmip_fbsd.c:524 eelf64hppa.c:254 eelf64lppc.c:992
#: eelf64lriscv.c:363 eelf64lriscv_lp64.c:363 eelf64lriscv_lp64f.c:363
#: eelf64ltsmip.c:524 eelf64ltsmip_fbsd.c:524 eelf64mmix.c:4061 eelf64ppc.c:992
#: eelf64ppc_fbsd.c:992 eelf64rdos.c:334 eelf64tilegx.c:309
#: eelf64tilegx_be.c:309 eelf_i386.c:343 eelf_i386_be.c:308
#: eelf_i386_fbsd.c:343 eelf_i386_ldso.c:318 eelf_i386_nacl.c:343
#: eelf_i386_sol2.c:474 eelf_i386_vxworks.c:370 eelf_iamcu.c:4826
#: eelf_k1om.c:5182 eelf_k1om_fbsd.c:5182 eelf_l1om.c:5182
#: eelf_l1om_fbsd.c:5182 eelf_s390.c:309 eelf_x86_64.c:343
#: eelf_x86_64_cloudabi.c:343 eelf_x86_64_fbsd.c:343 eelf_x86_64_nacl.c:343
#: eelf_x86_64_sol2.c:474 ehppa64linux.c:284 ehppalinux.c:592 ehppanbsd.c:592
#: ehppaobsd.c:592 ei386lynx.c:299 ei386moss.c:299 ei386nto.c:299
#: em32relf_linux.c:309 em32rlelf_linux.c:309 em68kelf.c:466 em68kelfnbsd.c:466
#: emn10300.c:284 ends32belf_linux.c:396 ends32elf_linux.c:396
#: enios2linux.c:570 eppclynx.c:560 escore3_elf.c:305 escore7_elf.c:305
#: eshelf.c:284 eshelf_fd.c:309 eshelf_linux.c:309 eshelf_nbsd.c:284
#: eshelf_nto.c:284 eshelf_uclinux.c:284 eshelf_vxworks.c:321 eshlelf.c:284
#: eshlelf_fd.c:309 eshlelf_linux.c:309 eshlelf_nbsd.c:284 eshlelf_nto.c:284
#: eshlelf_vxworks.c:321 ewasm32.c:2703
msgid "%F%P: invalid hash style `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:637 eaarch64cloudabib.c:637 eaarch64elf.c:637
#: eaarch64elf32.c:637 eaarch64elf32b.c:637 eaarch64elfb.c:637
#: eaarch64fbsd.c:637 eaarch64fbsdb.c:637 eaarch64linux.c:637
#: eaarch64linux32.c:637 eaarch64linux32b.c:637 eaarch64linuxb.c:637
#: earcelf.c:270 earclinux.c:325 earclinux_nps.c:325 earcv2elf.c:203
#: earcv2elfx.c:203 earmelf.c:880 earmelf_fbsd.c:880 earmelf_fuchsia.c:880
#: earmelf_linux.c:880 earmelf_linux_eabi.c:880 earmelf_linux_fdpiceabi.c:880
#: earmelf_nacl.c:880 earmelf_nbsd.c:880 earmelf_phoenix.c:880
#: earmelf_vxworks.c:916 earmelfb.c:880 earmelfb_fbsd.c:880
#: earmelfb_fuchsia.c:880 earmelfb_linux.c:880 earmelfb_linux_eabi.c:880
#: earmelfb_linux_fdpiceabi.c:880 earmelfb_nacl.c:880 earmelfb_nbsd.c:880
#: earmnto.c:855 earmsymbian.c:880 eavr1.c:426 eavr2.c:426 eavr25.c:426
#: eavr3.c:426 eavr31.c:426 eavr35.c:426 eavr4.c:426 eavr5.c:426 eavr51.c:426
#: eavr6.c:426 eavrtiny.c:426 eavrxmega1.c:426 eavrxmega2.c:426
#: eavrxmega3.c:426 eavrxmega4.c:426 eavrxmega5.c:426 eavrxmega6.c:426
#: eavrxmega7.c:426 ecriself.c:218 ecrislinux.c:300 ecskyelf.c:462
#: ecskyelf_linux.c:569 ed10velf.c:203 eelf32_sparc.c:325
#: eelf32_sparc_sol2.c:456 eelf32_sparc_vxworks.c:362 eelf32_spu.c:800
#: eelf32_tic6x_be.c:437 eelf32_tic6x_elf_be.c:437 eelf32_tic6x_elf_le.c:437
#: eelf32_tic6x_le.c:437 eelf32_tic6x_linux_be.c:437
#: eelf32_tic6x_linux_le.c:437 eelf32_x86_64.c:359 eelf32_x86_64_nacl.c:359
#: eelf32am33lin.c:300 eelf32b4300.c:540 eelf32bfin.c:318 eelf32bfinfd.c:343
#: eelf32bmip.c:540 eelf32bmipn32.c:554 eelf32bsmip.c:554 eelf32btsmip.c:540
#: eelf32btsmip_fbsd.c:540 eelf32btsmipn32.c:540 eelf32btsmipn32_fbsd.c:540
#: eelf32cr16.c:353 eelf32crx.c:240 eelf32ebmip.c:540 eelf32ebmipvxworks.c:575
#: eelf32elmip.c:540 eelf32elmipvxworks.c:575 eelf32epiphany.c:218
#: eelf32epiphany_4x4.c:205 eelf32frvfd.c:325 eelf32ip2k.c:218
#: eelf32l4300.c:540 eelf32lm32.c:218 eelf32lm32fd.c:325 eelf32lmip.c:540
#: eelf32lppc.c:576 eelf32lppclinux.c:576 eelf32lppcnto.c:576
#: eelf32lppcsim.c:576 eelf32lr5900.c:458 eelf32lr5900n32.c:458
#: eelf32lriscv.c:379 eelf32lriscv_ilp32.c:379 eelf32lriscv_ilp32f.c:379
#: eelf32lsmip.c:540 eelf32ltsmip.c:540 eelf32ltsmip_fbsd.c:540
#: eelf32ltsmipn32.c:540 eelf32ltsmipn32_fbsd.c:540 eelf32m32c.c:229
#: eelf32mb_linux.c:325 eelf32mbel_linux.c:325 eelf32mcore.c:224
#: eelf32mep.c:203 eelf32metag.c:574 eelf32microblaze.c:203
#: eelf32microblazeel.c:203 eelf32mipswindiss.c:433 eelf32moxie.c:218
#: eelf32or1k.c:218 eelf32or1k_linux.c:325 eelf32ppc.c:576 eelf32ppc_fbsd.c:576
#: eelf32ppclinux.c:576 eelf32ppcnto.c:576 eelf32ppcsim.c:576
#: eelf32ppcvxworks.c:550 eelf32ppcwindiss.c:576 eelf32rl78.c:218
#: eelf32rx.c:246 eelf32rx_linux.c:231 eelf32tilegx.c:325 eelf32tilegx_be.c:325
#: eelf32tilepro.c:325 eelf32vax.c:300 eelf32visium.c:203 eelf32xc16x.c:203
#: eelf32xc16xl.c:203 eelf32xc16xs.c:203 eelf32xstormy16.c:214
#: eelf32xtensa.c:2225 eelf32z80.c:230 eelf64_aix.c:300 eelf64_ia64.c:357
#: eelf64_ia64_fbsd.c:357 eelf64_s390.c:395 eelf64_sparc.c:325
#: eelf64_sparc_fbsd.c:325 eelf64_sparc_sol2.c:456 eelf64alpha.c:418
#: eelf64alpha_fbsd.c:418 eelf64alpha_nbsd.c:418 eelf64bmip.c:554
#: eelf64bpf.c:203 eelf64btsmip.c:540 eelf64btsmip_fbsd.c:540 eelf64hppa.c:270
#: eelf64lppc.c:1008 eelf64lriscv.c:379 eelf64lriscv_lp64.c:379
#: eelf64lriscv_lp64f.c:379 eelf64ltsmip.c:540 eelf64ltsmip_fbsd.c:540
#: eelf64mmix.c:4077 eelf64ppc.c:1008 eelf64ppc_fbsd.c:1008 eelf64rdos.c:350
#: eelf64tilegx.c:325 eelf64tilegx_be.c:325 eelf_i386.c:359 eelf_i386_be.c:324
#: eelf_i386_fbsd.c:359 eelf_i386_ldso.c:334 eelf_i386_nacl.c:359
#: eelf_i386_sol2.c:490 eelf_i386_vxworks.c:386 eelf_iamcu.c:4842
#: eelf_k1om.c:5198 eelf_k1om_fbsd.c:5198 eelf_l1om.c:5198
#: eelf_l1om_fbsd.c:5198 eelf_s390.c:325 eelf_x86_64.c:359
#: eelf_x86_64_cloudabi.c:359 eelf_x86_64_fbsd.c:359 eelf_x86_64_nacl.c:359
#: eelf_x86_64_sol2.c:490 eh8300elf.c:218 eh8300elf_linux.c:218
#: eh8300helf.c:218 eh8300helf_linux.c:218 eh8300hnelf.c:218 eh8300self.c:218
#: eh8300self_linux.c:218 eh8300snelf.c:218 eh8300sxelf.c:218
#: eh8300sxelf_linux.c:218 eh8300sxnelf.c:218 ehppa64linux.c:300 ehppaelf.c:486
#: ehppalinux.c:608 ehppanbsd.c:608 ehppaobsd.c:608 ei386lynx.c:315
#: ei386moss.c:315 ei386nto.c:315 em32relf.c:218 em32relf_linux.c:325
#: em32rlelf.c:218 em32rlelf_linux.c:325 em68hc11elf.c:488 em68hc11elfb.c:488
#: em68hc12elf.c:488 em68hc12elfb.c:488 em68kelf.c:482 em68kelfnbsd.c:482
#: emn10300.c:300 ends32belf.c:338 ends32belf16m.c:338 ends32belf_linux.c:412
#: ends32elf.c:338 ends32elf16m.c:338 ends32elf_linux.c:412 enios2elf.c:504
#: enios2linux.c:586 eppclynx.c:576 epruelf.c:223 escore3_elf.c:321
#: escore7_elf.c:321 eshelf.c:300 eshelf_fd.c:325 eshelf_linux.c:325
#: eshelf_nbsd.c:300 eshelf_nto.c:300 eshelf_uclinux.c:300 eshelf_vxworks.c:337
#: eshlelf.c:300 eshlelf_fd.c:325 eshlelf_linux.c:325 eshlelf_nbsd.c:300
#: eshlelf_nto.c:300 eshlelf_vxworks.c:337 ev850.c:250 ev850_rh850.c:250
#: ewasm32.c:2719
msgid "%F%P: invalid maximum page size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:646 eaarch64cloudabib.c:646 eaarch64elf.c:646
#: eaarch64elf32.c:646 eaarch64elf32b.c:646 eaarch64elfb.c:646
#: eaarch64fbsd.c:646 eaarch64fbsdb.c:646 eaarch64linux.c:646
#: eaarch64linux32.c:646 eaarch64linux32b.c:646 eaarch64linuxb.c:646
#: earcelf.c:279 earclinux.c:334 earclinux_nps.c:334 earcv2elf.c:212
#: earcv2elfx.c:212 earmelf.c:889 earmelf_fbsd.c:889 earmelf_fuchsia.c:889
#: earmelf_linux.c:889 earmelf_linux_eabi.c:889 earmelf_linux_fdpiceabi.c:889
#: earmelf_nacl.c:889 earmelf_nbsd.c:889 earmelf_phoenix.c:889
#: earmelf_vxworks.c:925 earmelfb.c:889 earmelfb_fbsd.c:889
#: earmelfb_fuchsia.c:889 earmelfb_linux.c:889 earmelfb_linux_eabi.c:889
#: earmelfb_linux_fdpiceabi.c:889 earmelfb_nacl.c:889 earmelfb_nbsd.c:889
#: earmnto.c:864 earmsymbian.c:889 eavr1.c:435 eavr2.c:435 eavr25.c:435
#: eavr3.c:435 eavr31.c:435 eavr35.c:435 eavr4.c:435 eavr5.c:435 eavr51.c:435
#: eavr6.c:435 eavrtiny.c:435 eavrxmega1.c:435 eavrxmega2.c:435
#: eavrxmega3.c:435 eavrxmega4.c:435 eavrxmega5.c:435 eavrxmega6.c:435
#: eavrxmega7.c:435 ecriself.c:227 ecrislinux.c:309 ecskyelf.c:471
#: ecskyelf_linux.c:578 ed10velf.c:212 eelf32_sparc.c:334
#: eelf32_sparc_sol2.c:465 eelf32_sparc_vxworks.c:371 eelf32_spu.c:809
#: eelf32_tic6x_be.c:446 eelf32_tic6x_elf_be.c:446 eelf32_tic6x_elf_le.c:446
#: eelf32_tic6x_le.c:446 eelf32_tic6x_linux_be.c:446
#: eelf32_tic6x_linux_le.c:446 eelf32_x86_64.c:368 eelf32_x86_64_nacl.c:368
#: eelf32am33lin.c:309 eelf32b4300.c:549 eelf32bfin.c:327 eelf32bfinfd.c:352
#: eelf32bmip.c:549 eelf32bmipn32.c:563 eelf32bsmip.c:563 eelf32btsmip.c:549
#: eelf32btsmip_fbsd.c:549 eelf32btsmipn32.c:549 eelf32btsmipn32_fbsd.c:549
#: eelf32cr16.c:362 eelf32crx.c:249 eelf32ebmip.c:549 eelf32ebmipvxworks.c:584
#: eelf32elmip.c:549 eelf32elmipvxworks.c:584 eelf32epiphany.c:227
#: eelf32epiphany_4x4.c:214 eelf32frvfd.c:334 eelf32ip2k.c:227
#: eelf32l4300.c:549 eelf32lm32.c:227 eelf32lm32fd.c:334 eelf32lmip.c:549
#: eelf32lppc.c:585 eelf32lppclinux.c:585 eelf32lppcnto.c:585
#: eelf32lppcsim.c:585 eelf32lr5900.c:467 eelf32lr5900n32.c:467
#: eelf32lriscv.c:388 eelf32lriscv_ilp32.c:388 eelf32lriscv_ilp32f.c:388
#: eelf32lsmip.c:549 eelf32ltsmip.c:549 eelf32ltsmip_fbsd.c:549
#: eelf32ltsmipn32.c:549 eelf32ltsmipn32_fbsd.c:549 eelf32m32c.c:238
#: eelf32mb_linux.c:334 eelf32mbel_linux.c:334 eelf32mcore.c:233
#: eelf32mep.c:212 eelf32metag.c:583 eelf32microblaze.c:212
#: eelf32microblazeel.c:212 eelf32mipswindiss.c:442 eelf32moxie.c:227
#: eelf32or1k.c:227 eelf32or1k_linux.c:334 eelf32ppc.c:585 eelf32ppc_fbsd.c:585
#: eelf32ppclinux.c:585 eelf32ppcnto.c:585 eelf32ppcsim.c:585
#: eelf32ppcvxworks.c:559 eelf32ppcwindiss.c:585 eelf32rl78.c:227
#: eelf32rx.c:255 eelf32rx_linux.c:240 eelf32tilegx.c:334 eelf32tilegx_be.c:334
#: eelf32tilepro.c:334 eelf32vax.c:309 eelf32visium.c:212 eelf32xc16x.c:212
#: eelf32xc16xl.c:212 eelf32xc16xs.c:212 eelf32xstormy16.c:223
#: eelf32xtensa.c:2234 eelf32z80.c:239 eelf64_aix.c:309 eelf64_ia64.c:366
#: eelf64_ia64_fbsd.c:366 eelf64_s390.c:404 eelf64_sparc.c:334
#: eelf64_sparc_fbsd.c:334 eelf64_sparc_sol2.c:465 eelf64alpha.c:427
#: eelf64alpha_fbsd.c:427 eelf64alpha_nbsd.c:427 eelf64bmip.c:563
#: eelf64bpf.c:212 eelf64btsmip.c:549 eelf64btsmip_fbsd.c:549 eelf64hppa.c:279
#: eelf64lppc.c:1017 eelf64lriscv.c:388 eelf64lriscv_lp64.c:388
#: eelf64lriscv_lp64f.c:388 eelf64ltsmip.c:549 eelf64ltsmip_fbsd.c:549
#: eelf64mmix.c:4086 eelf64ppc.c:1017 eelf64ppc_fbsd.c:1017 eelf64rdos.c:359
#: eelf64tilegx.c:334 eelf64tilegx_be.c:334 eelf_i386.c:368 eelf_i386_be.c:333
#: eelf_i386_fbsd.c:368 eelf_i386_ldso.c:343 eelf_i386_nacl.c:368
#: eelf_i386_sol2.c:499 eelf_i386_vxworks.c:395 eelf_iamcu.c:4851
#: eelf_k1om.c:5207 eelf_k1om_fbsd.c:5207 eelf_l1om.c:5207
#: eelf_l1om_fbsd.c:5207 eelf_s390.c:334 eelf_x86_64.c:368
#: eelf_x86_64_cloudabi.c:368 eelf_x86_64_fbsd.c:368 eelf_x86_64_nacl.c:368
#: eelf_x86_64_sol2.c:499 eh8300elf.c:227 eh8300elf_linux.c:227
#: eh8300helf.c:227 eh8300helf_linux.c:227 eh8300hnelf.c:227 eh8300self.c:227
#: eh8300self_linux.c:227 eh8300snelf.c:227 eh8300sxelf.c:227
#: eh8300sxelf_linux.c:227 eh8300sxnelf.c:227 ehppa64linux.c:309 ehppaelf.c:495
#: ehppalinux.c:617 ehppanbsd.c:617 ehppaobsd.c:617 ei386lynx.c:324
#: ei386moss.c:324 ei386nto.c:324 em32relf.c:227 em32relf_linux.c:334
#: em32rlelf.c:227 em32rlelf_linux.c:334 em68hc11elf.c:497 em68hc11elfb.c:497
#: em68hc12elf.c:497 em68hc12elfb.c:497 em68kelf.c:491 em68kelfnbsd.c:491
#: emn10300.c:309 ends32belf.c:347 ends32belf16m.c:347 ends32belf_linux.c:421
#: ends32elf.c:347 ends32elf16m.c:347 ends32elf_linux.c:421 enios2elf.c:513
#: enios2linux.c:595 eppclynx.c:585 epruelf.c:232 escore3_elf.c:330
#: escore7_elf.c:330 eshelf.c:309 eshelf_fd.c:334 eshelf_linux.c:334
#: eshelf_nbsd.c:309 eshelf_nto.c:309 eshelf_uclinux.c:309 eshelf_vxworks.c:346
#: eshlelf.c:309 eshlelf_fd.c:334 eshlelf_linux.c:334 eshlelf_nbsd.c:309
#: eshlelf_nto.c:309 eshlelf_vxworks.c:346 ev850.c:259 ev850_rh850.c:259
#: ewasm32.c:2728
msgid "%F%P: invalid common page size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:654 eaarch64cloudabib.c:654 eaarch64elf.c:654
#: eaarch64elf32.c:654 eaarch64elf32b.c:654 eaarch64elfb.c:654
#: eaarch64fbsd.c:654 eaarch64fbsdb.c:654 eaarch64linux.c:654
#: eaarch64linux32.c:654 eaarch64linux32b.c:654 eaarch64linuxb.c:654
#: earcelf.c:287 earclinux.c:342 earclinux_nps.c:342 earcv2elf.c:220
#: earcv2elfx.c:220 earmelf.c:897 earmelf_fbsd.c:897 earmelf_fuchsia.c:897
#: earmelf_linux.c:897 earmelf_linux_eabi.c:897 earmelf_linux_fdpiceabi.c:897
#: earmelf_nacl.c:897 earmelf_nbsd.c:897 earmelf_phoenix.c:897
#: earmelf_vxworks.c:933 earmelfb.c:897 earmelfb_fbsd.c:897
#: earmelfb_fuchsia.c:897 earmelfb_linux.c:897 earmelfb_linux_eabi.c:897
#: earmelfb_linux_fdpiceabi.c:897 earmelfb_nacl.c:897 earmelfb_nbsd.c:897
#: earmnto.c:872 earmsymbian.c:897 eavr1.c:443 eavr2.c:443 eavr25.c:443
#: eavr3.c:443 eavr31.c:443 eavr35.c:443 eavr4.c:443 eavr5.c:443 eavr51.c:443
#: eavr6.c:443 eavrtiny.c:443 eavrxmega1.c:443 eavrxmega2.c:443
#: eavrxmega3.c:443 eavrxmega4.c:443 eavrxmega5.c:443 eavrxmega6.c:443
#: eavrxmega7.c:443 ecriself.c:235 ecrislinux.c:317 ecskyelf.c:479
#: ecskyelf_linux.c:586 ed10velf.c:220 eelf32_sparc.c:342
#: eelf32_sparc_sol2.c:473 eelf32_sparc_vxworks.c:379 eelf32_spu.c:817
#: eelf32_tic6x_be.c:454 eelf32_tic6x_elf_be.c:454 eelf32_tic6x_elf_le.c:454
#: eelf32_tic6x_le.c:454 eelf32_tic6x_linux_be.c:454
#: eelf32_tic6x_linux_le.c:454 eelf32_x86_64.c:376 eelf32_x86_64_nacl.c:376
#: eelf32am33lin.c:317 eelf32b4300.c:557 eelf32bfin.c:335 eelf32bfinfd.c:360
#: eelf32bmip.c:557 eelf32bmipn32.c:571 eelf32bsmip.c:571 eelf32btsmip.c:557
#: eelf32btsmip_fbsd.c:557 eelf32btsmipn32.c:557 eelf32btsmipn32_fbsd.c:557
#: eelf32cr16.c:370 eelf32crx.c:257 eelf32ebmip.c:557 eelf32ebmipvxworks.c:592
#: eelf32elmip.c:557 eelf32elmipvxworks.c:592 eelf32epiphany.c:235
#: eelf32epiphany_4x4.c:222 eelf32frvfd.c:342 eelf32ip2k.c:235
#: eelf32l4300.c:557 eelf32lm32.c:235 eelf32lm32fd.c:342 eelf32lmip.c:557
#: eelf32lppc.c:593 eelf32lppclinux.c:593 eelf32lppcnto.c:593
#: eelf32lppcsim.c:593 eelf32lr5900.c:475 eelf32lr5900n32.c:475
#: eelf32lriscv.c:396 eelf32lriscv_ilp32.c:396 eelf32lriscv_ilp32f.c:396
#: eelf32lsmip.c:557 eelf32ltsmip.c:557 eelf32ltsmip_fbsd.c:557
#: eelf32ltsmipn32.c:557 eelf32ltsmipn32_fbsd.c:557 eelf32m32c.c:246
#: eelf32mb_linux.c:342 eelf32mbel_linux.c:342 eelf32mcore.c:241
#: eelf32mep.c:220 eelf32metag.c:591 eelf32microblaze.c:220
#: eelf32microblazeel.c:220 eelf32mipswindiss.c:450 eelf32moxie.c:235
#: eelf32or1k.c:235 eelf32or1k_linux.c:342 eelf32ppc.c:593 eelf32ppc_fbsd.c:593
#: eelf32ppclinux.c:593 eelf32ppcnto.c:593 eelf32ppcsim.c:593
#: eelf32ppcvxworks.c:567 eelf32ppcwindiss.c:593 eelf32rl78.c:235
#: eelf32rx.c:263 eelf32rx_linux.c:248 eelf32tilegx.c:342 eelf32tilegx_be.c:342
#: eelf32tilepro.c:342 eelf32vax.c:317 eelf32visium.c:220 eelf32xc16x.c:220
#: eelf32xc16xl.c:220 eelf32xc16xs.c:220 eelf32xstormy16.c:231
#: eelf32xtensa.c:2242 eelf32z80.c:247 eelf64_aix.c:317 eelf64_ia64.c:374
#: eelf64_ia64_fbsd.c:374 eelf64_s390.c:412 eelf64_sparc.c:342
#: eelf64_sparc_fbsd.c:342 eelf64_sparc_sol2.c:473 eelf64alpha.c:435
#: eelf64alpha_fbsd.c:435 eelf64alpha_nbsd.c:435 eelf64bmip.c:571
#: eelf64bpf.c:220 eelf64btsmip.c:557 eelf64btsmip_fbsd.c:557 eelf64hppa.c:287
#: eelf64lppc.c:1025 eelf64lriscv.c:396 eelf64lriscv_lp64.c:396
#: eelf64lriscv_lp64f.c:396 eelf64ltsmip.c:557 eelf64ltsmip_fbsd.c:557
#: eelf64mmix.c:4094 eelf64ppc.c:1025 eelf64ppc_fbsd.c:1025 eelf64rdos.c:367
#: eelf64tilegx.c:342 eelf64tilegx_be.c:342 eelf_i386.c:376 eelf_i386_be.c:341
#: eelf_i386_fbsd.c:376 eelf_i386_ldso.c:351 eelf_i386_nacl.c:376
#: eelf_i386_sol2.c:507 eelf_i386_vxworks.c:403 eelf_iamcu.c:4859
#: eelf_k1om.c:5215 eelf_k1om_fbsd.c:5215 eelf_l1om.c:5215
#: eelf_l1om_fbsd.c:5215 eelf_s390.c:342 eelf_x86_64.c:376
#: eelf_x86_64_cloudabi.c:376 eelf_x86_64_fbsd.c:376 eelf_x86_64_nacl.c:376
#: eelf_x86_64_sol2.c:507 eh8300elf.c:235 eh8300elf_linux.c:235
#: eh8300helf.c:235 eh8300helf_linux.c:235 eh8300hnelf.c:235 eh8300self.c:235
#: eh8300self_linux.c:235 eh8300snelf.c:235 eh8300sxelf.c:235
#: eh8300sxelf_linux.c:235 eh8300sxnelf.c:235 ehppa64linux.c:317 ehppaelf.c:503
#: ehppalinux.c:625 ehppanbsd.c:625 ehppaobsd.c:625 ei386lynx.c:332
#: ei386moss.c:332 ei386nto.c:332 em32relf.c:235 em32relf_linux.c:342
#: em32rlelf.c:235 em32rlelf_linux.c:342 em68hc11elf.c:505 em68hc11elfb.c:505
#: em68hc12elf.c:505 em68hc12elfb.c:505 em68kelf.c:499 em68kelfnbsd.c:499
#: emn10300.c:317 ends32belf.c:355 ends32belf16m.c:355 ends32belf_linux.c:429
#: ends32elf.c:355 ends32elf16m.c:355 ends32elf_linux.c:429 enios2elf.c:521
#: enios2linux.c:603 eppclynx.c:593 epruelf.c:240 escore3_elf.c:338
#: escore7_elf.c:338 eshelf.c:317 eshelf_fd.c:342 eshelf_linux.c:342
#: eshelf_nbsd.c:317 eshelf_nto.c:317 eshelf_uclinux.c:317 eshelf_vxworks.c:354
#: eshlelf.c:317 eshlelf_fd.c:342 eshlelf_linux.c:342 eshlelf_nbsd.c:317
#: eshlelf_nto.c:317 eshlelf_vxworks.c:354 ev850.c:267 ev850_rh850.c:267
#: ewasm32.c:2736
msgid "%F%P: invalid stack size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:739 eaarch64cloudabib.c:739 eaarch64elf.c:739
#: eaarch64elf32.c:739 eaarch64elf32b.c:739 eaarch64elfb.c:739
#: eaarch64fbsd.c:739 eaarch64fbsdb.c:739 eaarch64linux.c:739
#: eaarch64linux32.c:739 eaarch64linux32b.c:739 eaarch64linuxb.c:739
#: earcelf.c:363 earclinux.c:418 earclinux_nps.c:418 earcv2elf.c:241
#: earcv2elfx.c:241 earmelf.c:973 earmelf_fbsd.c:973 earmelf_fuchsia.c:973
#: earmelf_linux.c:973 earmelf_linux_eabi.c:973 earmelf_linux_fdpiceabi.c:973
#: earmelf_nacl.c:973 earmelf_nbsd.c:973 earmelf_phoenix.c:973
#: earmelf_vxworks.c:1009 earmelfb.c:973 earmelfb_fbsd.c:973
#: earmelfb_fuchsia.c:973 earmelfb_linux.c:973 earmelfb_linux_eabi.c:973
#: earmelfb_linux_fdpiceabi.c:973 earmelfb_nacl.c:973 earmelfb_nbsd.c:973
#: earmnto.c:948 earmsymbian.c:973 eavr1.c:464 eavr2.c:464 eavr25.c:464
#: eavr3.c:464 eavr31.c:464 eavr35.c:464 eavr4.c:464 eavr5.c:464 eavr51.c:464
#: eavr6.c:464 eavrtiny.c:464 eavrxmega1.c:464 eavrxmega2.c:464
#: eavrxmega3.c:464 eavrxmega4.c:464 eavrxmega5.c:464 eavrxmega6.c:464
#: eavrxmega7.c:464 ecriself.c:256 ecrislinux.c:393 ecskyelf.c:500
#: ecskyelf_linux.c:662 ed10velf.c:241 eelf32_sparc.c:418
#: eelf32_sparc_sol2.c:549 eelf32_sparc_vxworks.c:455 eelf32_spu.c:838
#: eelf32_tic6x_be.c:530 eelf32_tic6x_elf_be.c:530 eelf32_tic6x_elf_le.c:530
#: eelf32_tic6x_le.c:530 eelf32_tic6x_linux_be.c:530
#: eelf32_tic6x_linux_le.c:530 eelf32_x86_64.c:521 eelf32_x86_64_nacl.c:521
#: eelf32am33lin.c:393 eelf32b4300.c:633 eelf32bfin.c:411 eelf32bfinfd.c:436
#: eelf32bmip.c:633 eelf32bmipn32.c:647 eelf32bsmip.c:647 eelf32btsmip.c:633
#: eelf32btsmip_fbsd.c:633 eelf32btsmipn32.c:633 eelf32btsmipn32_fbsd.c:633
#: eelf32cr16.c:391 eelf32crx.c:278 eelf32ebmip.c:633 eelf32ebmipvxworks.c:668
#: eelf32elmip.c:633 eelf32elmipvxworks.c:668 eelf32epiphany.c:256
#: eelf32epiphany_4x4.c:243 eelf32frvfd.c:418 eelf32ip2k.c:256
#: eelf32l4300.c:633 eelf32lm32.c:256 eelf32lm32fd.c:418 eelf32lmip.c:633
#: eelf32lppc.c:675 eelf32lppclinux.c:675 eelf32lppcnto.c:675
#: eelf32lppcsim.c:675 eelf32lr5900.c:496 eelf32lr5900n32.c:496
#: eelf32lriscv.c:472 eelf32lriscv_ilp32.c:472 eelf32lriscv_ilp32f.c:472
#: eelf32lsmip.c:633 eelf32ltsmip.c:633 eelf32ltsmip_fbsd.c:633
#: eelf32ltsmipn32.c:633 eelf32ltsmipn32_fbsd.c:633 eelf32m32c.c:267
#: eelf32mb_linux.c:418 eelf32mbel_linux.c:418 eelf32mcore.c:262
#: eelf32mep.c:241 eelf32metag.c:667 eelf32microblaze.c:241
#: eelf32microblazeel.c:241 eelf32mipswindiss.c:471 eelf32moxie.c:256
#: eelf32or1k.c:256 eelf32or1k_linux.c:418 eelf32ppc.c:675 eelf32ppc_fbsd.c:675
#: eelf32ppclinux.c:675 eelf32ppcnto.c:675 eelf32ppcsim.c:675
#: eelf32ppcvxworks.c:649 eelf32ppcwindiss.c:675 eelf32rl78.c:256
#: eelf32rx.c:284 eelf32rx_linux.c:269 eelf32tilegx.c:418 eelf32tilegx_be.c:418
#: eelf32tilepro.c:418 eelf32vax.c:393 eelf32visium.c:241 eelf32xc16x.c:241
#: eelf32xc16xl.c:241 eelf32xc16xs.c:241 eelf32xstormy16.c:252
#: eelf32xtensa.c:2318 eelf32z80.c:268 eelf64_aix.c:393 eelf64_ia64.c:450
#: eelf64_ia64_fbsd.c:450 eelf64_s390.c:488 eelf64_sparc.c:418
#: eelf64_sparc_fbsd.c:418 eelf64_sparc_sol2.c:549 eelf64alpha.c:511
#: eelf64alpha_fbsd.c:511 eelf64alpha_nbsd.c:511 eelf64bmip.c:647
#: eelf64bpf.c:241 eelf64btsmip.c:633 eelf64btsmip_fbsd.c:633 eelf64hppa.c:363
#: eelf64lppc.c:1107 eelf64lriscv.c:472 eelf64lriscv_lp64.c:472
#: eelf64lriscv_lp64f.c:472 eelf64ltsmip.c:633 eelf64ltsmip_fbsd.c:633
#: eelf64mmix.c:4170 eelf64ppc.c:1107 eelf64ppc_fbsd.c:1107 eelf64rdos.c:443
#: eelf64tilegx.c:418 eelf64tilegx_be.c:418 eelf_i386.c:518 eelf_i386_be.c:460
#: eelf_i386_fbsd.c:518 eelf_i386_ldso.c:470 eelf_i386_nacl.c:518
#: eelf_i386_sol2.c:626 eelf_i386_vxworks.c:522 eelf_iamcu.c:4978
#: eelf_k1om.c:5334 eelf_k1om_fbsd.c:5334 eelf_l1om.c:5334
#: eelf_l1om_fbsd.c:5334 eelf_s390.c:418 eelf_x86_64.c:521
#: eelf_x86_64_cloudabi.c:521 eelf_x86_64_fbsd.c:521 eelf_x86_64_nacl.c:521
#: eelf_x86_64_sol2.c:652 eh8300elf.c:256 eh8300elf_linux.c:256
#: eh8300helf.c:256 eh8300helf_linux.c:256 eh8300hnelf.c:256 eh8300self.c:256
#: eh8300self_linux.c:256 eh8300snelf.c:256 eh8300sxelf.c:256
#: eh8300sxelf_linux.c:256 eh8300sxnelf.c:256 ehppa64linux.c:393 ehppaelf.c:524
#: ehppalinux.c:701 ehppanbsd.c:701 ehppaobsd.c:701 ei386lynx.c:408
#: ei386moss.c:408 ei386nto.c:408 em32relf.c:256 em32relf_linux.c:418
#: em32rlelf.c:256 em32rlelf_linux.c:418 em68hc11elf.c:526 em68hc11elfb.c:526
#: em68hc12elf.c:526 em68hc12elfb.c:526 em68kelf.c:575 em68kelfnbsd.c:575
#: emn10300.c:393 ends32belf.c:376 ends32belf16m.c:376 ends32belf_linux.c:505
#: ends32elf.c:376 ends32elf16m.c:376 ends32elf_linux.c:505 enios2elf.c:542
#: enios2linux.c:679 eppclynx.c:675 epruelf.c:261 escore3_elf.c:414
#: escore7_elf.c:414 eshelf.c:393 eshelf_fd.c:418 eshelf_linux.c:418
#: eshelf_nbsd.c:393 eshelf_nto.c:393 eshelf_uclinux.c:393 eshelf_vxworks.c:430
#: eshlelf.c:393 eshlelf_fd.c:418 eshlelf_linux.c:418 eshlelf_nbsd.c:393
#: eshlelf_nto.c:393 eshlelf_vxworks.c:430 ev850.c:288 ev850_rh850.c:288
#: ewasm32.c:2812
msgid "%P: warning: -z %s ignored\n"
msgstr ""

#: eaarch64cloudabi.c:773 eaarch64cloudabib.c:773 eaarch64elf.c:773
#: eaarch64elf32.c:773 eaarch64elf32b.c:773 eaarch64elfb.c:773
#: eaarch64fbsd.c:773 eaarch64fbsdb.c:773 eaarch64linux.c:773
#: eaarch64linux32.c:773 eaarch64linux32b.c:773 eaarch64linuxb.c:773
msgid "%P: error: unrecognized option for --fix-cortex-a53-843419: %s\n"
msgstr ""

#: eaarch64cloudabi.c:802 eaarch64cloudabib.c:802 eaarch64elf.c:802
#: eaarch64elf32.c:802 eaarch64elf32b.c:802 eaarch64elfb.c:802
#: eaarch64fbsd.c:802 eaarch64fbsdb.c:802 eaarch64linux.c:802
#: eaarch64linux32.c:802 eaarch64linux32b.c:802 eaarch64linuxb.c:802
#: earmelf.c:1110 earmelf_fbsd.c:1110 earmelf_fuchsia.c:1110
#: earmelf_linux.c:1110 earmelf_linux_eabi.c:1110
#: earmelf_linux_fdpiceabi.c:1110 earmelf_nacl.c:1110 earmelf_nbsd.c:1110
#: earmelf_phoenix.c:1110 earmelf_vxworks.c:1150 earmelfb.c:1110
#: earmelfb_fbsd.c:1110 earmelfb_fuchsia.c:1110 earmelfb_linux.c:1110
#: earmelfb_linux_eabi.c:1110 earmelfb_linux_fdpiceabi.c:1110
#: earmelfb_nacl.c:1110 earmelfb_nbsd.c:1110 earmnto.c:1085 earmsymbian.c:1110
#, c-format
msgid ""
"  --no-enum-size-warning      Don't warn about objects with incompatible\n"
"                                enum sizes\n"
msgstr ""

#: eaarch64cloudabi.c:804 eaarch64cloudabib.c:804 eaarch64elf.c:804
#: eaarch64elf32.c:804 eaarch64elf32b.c:804 eaarch64elfb.c:804
#: eaarch64fbsd.c:804 eaarch64fbsdb.c:804 eaarch64linux.c:804
#: eaarch64linux32.c:804 eaarch64linux32b.c:804 eaarch64linuxb.c:804
#: earmelf.c:1112 earmelf_fbsd.c:1112 earmelf_fuchsia.c:1112
#: earmelf_linux.c:1112 earmelf_linux_eabi.c:1112
#: earmelf_linux_fdpiceabi.c:1112 earmelf_nacl.c:1112 earmelf_nbsd.c:1112
#: earmelf_phoenix.c:1112 earmelf_vxworks.c:1152 earmelfb.c:1112
#: earmelfb_fbsd.c:1112 earmelfb_fuchsia.c:1112 earmelfb_linux.c:1112
#: earmelfb_linux_eabi.c:1112 earmelfb_linux_fdpiceabi.c:1112
#: earmelfb_nacl.c:1112 earmelfb_nbsd.c:1112 earmnto.c:1087 earmsymbian.c:1112
#, c-format
msgid ""
"  --no-wchar-size-warning     Don't warn about objects with incompatible\n"
"                                wchar_t sizes\n"
msgstr ""

#: eaarch64cloudabi.c:806 eaarch64cloudabib.c:806 eaarch64elf.c:806
#: eaarch64elf32.c:806 eaarch64elf32b.c:806 eaarch64elfb.c:806
#: eaarch64fbsd.c:806 eaarch64fbsdb.c:806 eaarch64linux.c:806
#: eaarch64linux32.c:806 eaarch64linux32b.c:806 eaarch64linuxb.c:806
#: earmelf.c:1114 earmelf_fbsd.c:1114 earmelf_fuchsia.c:1114
#: earmelf_linux.c:1114 earmelf_linux_eabi.c:1114
#: earmelf_linux_fdpiceabi.c:1114 earmelf_nacl.c:1114 earmelf_nbsd.c:1114
#: earmelf_phoenix.c:1114 earmelf_vxworks.c:1154 earmelfb.c:1114
#: earmelfb_fbsd.c:1114 earmelfb_fuchsia.c:1114 earmelfb_linux.c:1114
#: earmelfb_linux_eabi.c:1114 earmelfb_linux_fdpiceabi.c:1114
#: earmelfb_nacl.c:1114 earmelfb_nbsd.c:1114 earmnto.c:1089 earmsymbian.c:1114
#, c-format
msgid ""
"  --pic-veneer                Always generate PIC interworking veneers\n"
msgstr ""

#: eaarch64cloudabi.c:807 eaarch64cloudabib.c:807 eaarch64elf.c:807
#: eaarch64elf32.c:807 eaarch64elf32b.c:807 eaarch64elfb.c:807
#: eaarch64fbsd.c:807 eaarch64fbsdb.c:807 eaarch64linux.c:807
#: eaarch64linux32.c:807 eaarch64linux32b.c:807 eaarch64linuxb.c:807
#: earmelf.c:1121 earmelf_fbsd.c:1121 earmelf_fuchsia.c:1121
#: earmelf_linux.c:1121 earmelf_linux_eabi.c:1121
#: earmelf_linux_fdpiceabi.c:1121 earmelf_nacl.c:1121 earmelf_nbsd.c:1121
#: earmelf_phoenix.c:1121 earmelf_vxworks.c:1161 earmelfb.c:1121
#: earmelfb_fbsd.c:1121 earmelfb_fuchsia.c:1121 earmelfb_linux.c:1121
#: earmelfb_linux_eabi.c:1121 earmelfb_linux_fdpiceabi.c:1121
#: earmelfb_nacl.c:1121 earmelfb_nbsd.c:1121 earmnto.c:1096 earmsymbian.c:1121
#, c-format
msgid ""
"  --stub-group-size=N         Maximum size of a group of input sections "
"that\n"
"                                can be handled by one stub section.  A "
"negative\n"
"                                value locates all stubs after their "
"branches\n"
"                                (with a group size of -N), while a positive\n"
"                                value allows two groups of input sections, "
"one\n"
"                                before, and one after each stub section.\n"
"                                Values of +/-1 indicate the linker should\n"
"                                choose suitable defaults.\n"
msgstr ""

#: eaarch64cloudabi.c:816 eaarch64cloudabib.c:816 eaarch64elf.c:816
#: eaarch64elf32.c:816 eaarch64elf32b.c:816 eaarch64elfb.c:816
#: eaarch64fbsd.c:816 eaarch64fbsdb.c:816 eaarch64linux.c:816
#: eaarch64linux32.c:816 eaarch64linux32b.c:816 eaarch64linuxb.c:816
#, c-format
msgid "  --fix-cortex-a53-835769      Fix erratum 835769\n"
msgstr ""

#: eaarch64cloudabi.c:817 eaarch64cloudabib.c:817 eaarch64elf.c:817
#: eaarch64elf32.c:817 eaarch64elf32b.c:817 eaarch64elfb.c:817
#: eaarch64fbsd.c:817 eaarch64fbsdb.c:817 eaarch64linux.c:817
#: eaarch64linux32.c:817 eaarch64linux32b.c:817 eaarch64linuxb.c:817
#, c-format
msgid ""
"  --fix-cortex-a53-843419[=full|adr|adrp]      Fix erratum 843419 and "
"optionally specify which workaround to use.\n"
"                                               full (default): Use both ADRP "
"and ADR workaround, this will \n"
"                                                 increase the size of your "
"binaries.\n"
"                                               adr: Only use the ADR "
"workaround, this will not cause any increase\n"
"                                                 in binary size but linking "
"will fail if the referenced address is\n"
"                                                 out of range of an ADR "
"instruction.  This will remove the need of using\n"
"                                                 a veneer and results in "
"both performance and size benefits.\n"
"                                               adrp: Use only the ADRP "
"workaround, this will never rewrite your ADRP\n"
"                                                 instruction into an ADR.  "
"As such the workaround will always use a\n"
"                                                 veneer and this will give "
"you both a performance and size overhead.\n"
msgstr ""

#: eaarch64cloudabi.c:828 eaarch64cloudabib.c:828 eaarch64elf.c:828
#: eaarch64elf32.c:828 eaarch64elf32b.c:828 eaarch64elfb.c:828
#: eaarch64fbsd.c:828 eaarch64fbsdb.c:828 eaarch64linux.c:828
#: eaarch64linux32.c:828 eaarch64linux32b.c:828 eaarch64linuxb.c:828
#, c-format
msgid ""
"  --no-apply-dynamic-relocs    Do not apply link-time values for dynamic "
"relocations\n"
msgstr ""

#: eaarch64cloudabi.c:829 eaarch64cloudabib.c:829 eaarch64elf.c:829
#: eaarch64elf32.c:829 eaarch64elf32b.c:829 eaarch64elfb.c:829
#: eaarch64fbsd.c:829 eaarch64fbsdb.c:829 eaarch64linux.c:829
#: eaarch64linux32.c:829 eaarch64linux32b.c:829 eaarch64linuxb.c:829
#, c-format
msgid ""
"  -z force-bti                  Turn on Branch Target Identification "
"mechanism and generate PLTs with BTI. Generate warnings for missing BTI on "
"inputs\n"
msgstr ""

#: eaarch64cloudabi.c:830 eaarch64cloudabib.c:830 eaarch64elf.c:830
#: eaarch64elf32.c:830 eaarch64elf32b.c:830 eaarch64elfb.c:830
#: eaarch64fbsd.c:830 eaarch64fbsdb.c:830 eaarch64linux.c:830
#: eaarch64linux32.c:830 eaarch64linux32b.c:830 eaarch64linuxb.c:830
#, c-format
msgid ""
"  -z pac-plt                    Protect PLTs with Pointer Authentication.\n"
msgstr ""

#: eaix5ppc.c:317 eaix5rs6.c:317 eaixppc.c:317 eaixrs6.c:317 eppcmacos.c:317
msgid "%F%P: cannot open %s\n"
msgstr ""

#: eaix5ppc.c:364 eaix5rs6.c:364 eaixppc.c:364 eaixrs6.c:364 eppcmacos.c:364
msgid "%F%P: cannot read %s\n"
msgstr ""

#: eaix5ppc.c:392 eaix5rs6.c:392 eaixppc.c:392 eaixrs6.c:392 eppcmacos.c:392
msgid "%P: warning: ignoring invalid -D number %s\n"
msgstr ""

#: eaix5ppc.c:400 eaix5rs6.c:400 eaixppc.c:400 eaixrs6.c:400 eppcmacos.c:400
msgid "%P: warning: ignoring invalid -H number %s\n"
msgstr ""

#: eaix5ppc.c:512 eaix5rs6.c:512 eaixppc.c:512 eaixrs6.c:512 eppcmacos.c:512
msgid "%P: warning: ignoring invalid -bmaxdata number %s\n"
msgstr ""

#: eaix5ppc.c:521 eaix5rs6.c:521 eaixppc.c:521 eaixrs6.c:521 eppcmacos.c:521
msgid "%P: warning: ignoring invalid -bmaxstack number %s\n"
msgstr ""

#: eaix5ppc.c:534 eaix5rs6.c:534 eaixppc.c:534 eaixrs6.c:534 eppcmacos.c:534
msgid "%P: warning: ignoring invalid module type %s\n"
msgstr ""

#: eaix5ppc.c:564 eaix5rs6.c:564 eaixppc.c:564 eaixrs6.c:564 eppcmacos.c:564
msgid "%P: warning: ignoring invalid -pD number %s\n"
msgstr ""

#: eaix5ppc.c:587 eaix5rs6.c:587 eaixppc.c:587 eaixrs6.c:587 eppcmacos.c:587
msgid "%P: warning: ignoring invalid -pT number %s\n"
msgstr ""

#: eaix5ppc.c:716 eaix5rs6.c:716 eaixppc.c:716 eaixrs6.c:716 eppcmacos.c:716
msgid "%F%P: bfd_xcoff_link_record_set failed: %E\n"
msgstr ""

#: eaix5ppc.c:746 eaix5rs6.c:746 eaixppc.c:746 eaixrs6.c:746 eppcmacos.c:746
msgid "%F%P: bfd_link_hash_lookup of export symbol failed: %E\n"
msgstr ""

#: eaix5ppc.c:748 eaix5rs6.c:748 eaixppc.c:748 eaixrs6.c:748 eppcmacos.c:748
msgid "%F%P: bfd_xcoff_export_symbol failed: %E\n"
msgstr ""

#: eaix5ppc.c:854 eaix5rs6.c:854 eaixppc.c:854 eaixrs6.c:854 eppcmacos.c:854
msgid "%F%P: can't find output section %s\n"
msgstr ""

#: eaix5ppc.c:891 eaix5rs6.c:891 eaixppc.c:891 eaixrs6.c:891 eppcmacos.c:891
msgid "%F%P: can't find %s in output section\n"
msgstr ""

#: eaix5ppc.c:958 eaix5rs6.c:958 eaixppc.c:958 eaixrs6.c:958 eppcmacos.c:958
msgid "%P: can't find required output section %s\n"
msgstr ""

#: eaix5ppc.c:1167 eaix5rs6.c:1167 eaixppc.c:1167 eaixrs6.c:1167
#: eppcmacos.c:1167
msgid "%F%P:%s:%d: #! ([member]) is not supported in import files\n"
msgstr ""

#: eaix5ppc.c:1184 eaix5rs6.c:1184 eaixppc.c:1184 eaixrs6.c:1184
#: eppcmacos.c:1184
msgid "%F%P: could not parse import path: %E\n"
msgstr ""

#: eaix5ppc.c:1194 eaix5ppc.c:1206 eaix5rs6.c:1194 eaix5rs6.c:1206
#: eaixppc.c:1194 eaixppc.c:1206 eaixrs6.c:1194 eaixrs6.c:1206 eppcmacos.c:1194
#: eppcmacos.c:1206
msgid "%P:%s:%d: warning: syntax error in import file\n"
msgstr ""

#: eaix5ppc.c:1241 eaix5rs6.c:1241 eaixppc.c:1241 eaixrs6.c:1241
#: eppcmacos.c:1241
msgid "%P:%s%d: warning: syntax error in import/export file\n"
msgstr ""

#: eaix5ppc.c:1259 eaix5rs6.c:1259 eaixppc.c:1259 eaixrs6.c:1259
#: eppcmacos.c:1259
msgid "%P:%s:%d: warning: syntax error in import/export file\n"
msgstr ""

#: eaix5ppc.c:1294 eaix5rs6.c:1294 eaixppc.c:1294 eaixrs6.c:1294
#: eppcmacos.c:1294
msgid "%X%P:%s:%d: failed to import symbol %s: %E\n"
msgstr ""

#: eaix5ppc.c:1304 eaix5rs6.c:1304 eaixppc.c:1304 eaixrs6.c:1304
#: eppcmacos.c:1304
msgid "%P:%s:%d: warning: ignoring unterminated last line\n"
msgstr ""

#: eaix5ppc.c:1339 eaix5rs6.c:1339 eaixppc.c:1339 eaixrs6.c:1339
#: eppcmacos.c:1339
msgid "%F%P: only relocations against symbols are permitted\n"
msgstr ""

#: eaix5ppc.c:1342 eaix5rs6.c:1342 eaixppc.c:1342 eaixrs6.c:1342
#: eppcmacos.c:1342
msgid "%F%P: bfd_xcoff_link_count_reloc failed: %E\n"
msgstr ""

#: ealphavms.c:167 eelf64_ia64_vms.c:167
#, c-format
msgid ""
"  --identification <string>          Set the identification of the output\n"
msgstr ""

#: earm_wince_pe.c:378 earmpe.c:378 ei386pe.c:378 ei386pe_posix.c:378
#: ei386pep.c:361 emcorepe.c:378 eppcpe.c:378 eshpe.c:378
#, c-format
msgid ""
"  --base_file <basefile>             Generate a base file for relocatable "
"DLLs\n"
msgstr ""

#: earm_wince_pe.c:379 earmpe.c:379 ei386pe.c:379 ei386pe_posix.c:379
#: ei386pep.c:362 emcorepe.c:379 eppcpe.c:379 eshpe.c:379
#, c-format
msgid ""
"  --dll                              Set image base to the default for DLLs\n"
msgstr ""

#: earm_wince_pe.c:380 earmpe.c:380 ei386pe.c:380 ei386pe_posix.c:380
#: ei386pep.c:363 emcorepe.c:380 eppcpe.c:380 eshpe.c:380
#, c-format
msgid "  --file-alignment <size>            Set file alignment\n"
msgstr ""

#: earm_wince_pe.c:381 earmpe.c:381 ei386pe.c:381 ei386pe_posix.c:381
#: ei386pep.c:364 emcorepe.c:381 eppcpe.c:381 eshpe.c:381
#, c-format
msgid "  --heap <size>                      Set initial size of the heap\n"
msgstr ""

#: earm_wince_pe.c:382 earmpe.c:382 ei386pe.c:382 ei386pe_posix.c:382
#: ei386pep.c:365 emcorepe.c:382 eppcpe.c:382 eshpe.c:382
#, c-format
msgid ""
"  --image-base <address>             Set start address of the executable\n"
msgstr ""

#: earm_wince_pe.c:383 earmpe.c:383 ei386pe.c:383 ei386pe_posix.c:383
#: ei386pep.c:366 emcorepe.c:383 eppcpe.c:383 eshpe.c:383
#, c-format
msgid ""
"  --major-image-version <number>     Set version number of the executable\n"
msgstr ""

#: earm_wince_pe.c:384 earmpe.c:384 ei386pe.c:384 ei386pe_posix.c:384
#: ei386pep.c:367 emcorepe.c:384 eppcpe.c:384 eshpe.c:384
#, c-format
msgid "  --major-os-version <number>        Set minimum required OS version\n"
msgstr ""

#: earm_wince_pe.c:385 earmpe.c:385 ei386pe.c:385 ei386pe_posix.c:385
#: ei386pep.c:368 emcorepe.c:385 eppcpe.c:385 eshpe.c:385
#, c-format
msgid ""
"  --major-subsystem-version <number> Set minimum required OS subsystem "
"version\n"
msgstr ""

#: earm_wince_pe.c:386 earmpe.c:386 ei386pe.c:386 ei386pe_posix.c:386
#: ei386pep.c:369 emcorepe.c:386 eppcpe.c:386 eshpe.c:386
#, c-format
msgid ""
"  --minor-image-version <number>     Set revision number of the executable\n"
msgstr ""

#: earm_wince_pe.c:387 earmpe.c:387 ei386pe.c:387 ei386pe_posix.c:387
#: ei386pep.c:370 emcorepe.c:387 eppcpe.c:387 eshpe.c:387
#, c-format
msgid "  --minor-os-version <number>        Set minimum required OS revision\n"
msgstr ""

#: earm_wince_pe.c:388 earmpe.c:388 ei386pe.c:388 ei386pe_posix.c:388
#: ei386pep.c:371 emcorepe.c:388 eppcpe.c:388 eshpe.c:388
#, c-format
msgid ""
"  --minor-subsystem-version <number> Set minimum required OS subsystem "
"revision\n"
msgstr ""

#: earm_wince_pe.c:389 earmpe.c:389 ei386pe.c:389 ei386pe_posix.c:389
#: ei386pep.c:372 emcorepe.c:389 eppcpe.c:389 eshpe.c:389
#, c-format
msgid "  --section-alignment <size>         Set section alignment\n"
msgstr ""

#: earm_wince_pe.c:390 earmpe.c:390 ei386pe.c:390 ei386pe_posix.c:390
#: ei386pep.c:373 emcorepe.c:390 eppcpe.c:390 eshpe.c:390
#, c-format
msgid "  --stack <size>                     Set size of the initial stack\n"
msgstr ""

#: earm_wince_pe.c:391 earmpe.c:391 ei386pe.c:391 ei386pe_posix.c:391
#: ei386pep.c:374 emcorepe.c:391 eppcpe.c:391 eshpe.c:391
#, c-format
msgid ""
"  --subsystem <name>[:<version>]     Set required OS subsystem [& version]\n"
msgstr ""

#: earm_wince_pe.c:392 earmpe.c:392 ei386pe.c:392 ei386pe_posix.c:392
#: ei386pep.c:375 emcorepe.c:392 eppcpe.c:392 eshpe.c:392
#, c-format
msgid ""
"  --support-old-code                 Support interworking with old code\n"
msgstr ""

#: earm_wince_pe.c:393 earmpe.c:393 ei386pe.c:393 ei386pe_posix.c:393
#: ei386pep.c:376 emcorepe.c:393 eppcpe.c:393 eshpe.c:393
#, c-format
msgid ""
"  --[no-]leading-underscore          Set explicit symbol underscore prefix "
"mode\n"
msgstr ""

#: earm_wince_pe.c:394 earmpe.c:394 ei386pe.c:394 ei386pe_posix.c:394
#: emcorepe.c:394 eppcpe.c:394 eshpe.c:394
#, c-format
msgid ""
"  --thumb-entry=<symbol>             Set the entry point to be Thumb "
"<symbol>\n"
msgstr ""

#: earm_wince_pe.c:395 earmpe.c:395 ei386pe.c:395 ei386pe_posix.c:395
#: emcorepe.c:395 eppcpe.c:395 eshpe.c:395
#, c-format
msgid ""
"  --[no-]insert-timestamp            Use a real timestamp rather than zero "
"(default).\n"
msgstr ""

#: earm_wince_pe.c:396 earmpe.c:396 ei386pe.c:396 ei386pe_posix.c:396
#: ei386pep.c:378 emcorepe.c:396 eppcpe.c:396 eshpe.c:396
#, c-format
msgid ""
"                                     This makes binaries non-deterministic\n"
msgstr ""

#: earm_wince_pe.c:398 earmpe.c:398 ei386pe.c:398 ei386pe_posix.c:398
#: ei386pep.c:380 emcorepe.c:398 eppcpe.c:398 eshpe.c:398
#, c-format
msgid ""
"  --add-stdcall-alias                Export symbols with and without @nn\n"
msgstr ""

#: earm_wince_pe.c:399 earmpe.c:399 ei386pe.c:399 ei386pe_posix.c:399
#: ei386pep.c:381 emcorepe.c:399 eppcpe.c:399 eshpe.c:399
#, c-format
msgid "  --disable-stdcall-fixup            Don't link _sym to _sym@nn\n"
msgstr ""

#: earm_wince_pe.c:400 earmpe.c:400 ei386pe.c:400 ei386pe_posix.c:400
#: ei386pep.c:382 emcorepe.c:400 eppcpe.c:400 eshpe.c:400
#, c-format
msgid ""
"  --enable-stdcall-fixup             Link _sym to _sym@nn without warnings\n"
msgstr ""

#: earm_wince_pe.c:401 earmpe.c:401 ei386pe.c:401 ei386pe_posix.c:401
#: ei386pep.c:383 emcorepe.c:401 eppcpe.c:401 eshpe.c:401
#, c-format
msgid ""
"  --exclude-symbols sym,sym,...      Exclude symbols from automatic export\n"
msgstr ""

#: earm_wince_pe.c:402 earmpe.c:402 ei386pe.c:402 ei386pe_posix.c:402
#: ei386pep.c:384 emcorepe.c:402 eppcpe.c:402 eshpe.c:402
#, c-format
msgid ""
"  --exclude-all-symbols              Exclude all symbols from automatic "
"export\n"
msgstr ""

#: earm_wince_pe.c:403 earmpe.c:403 ei386pe.c:403 ei386pe_posix.c:403
#: ei386pep.c:385 emcorepe.c:403 eppcpe.c:403 eshpe.c:403
#, c-format
msgid ""
"  --exclude-libs lib,lib,...         Exclude libraries from automatic "
"export\n"
msgstr ""

#: earm_wince_pe.c:404 earmpe.c:404 ei386pe.c:404 ei386pe_posix.c:404
#: ei386pep.c:386 emcorepe.c:404 eppcpe.c:404 eshpe.c:404
#, c-format
msgid "  --exclude-modules-for-implib mod,mod,...\n"
msgstr ""

#: earm_wince_pe.c:405 earmpe.c:405 ei386pe.c:405 ei386pe_posix.c:405
#: ei386pep.c:387 emcorepe.c:405 eppcpe.c:405 eshpe.c:405
#, c-format
msgid ""
"                                     Exclude objects, archive members from "
"auto\n"
msgstr ""

#: earm_wince_pe.c:406 earmpe.c:406 ei386pe.c:406 ei386pe_posix.c:406
#: emcorepe.c:406 eppcpe.c:406 eshpe.c:406
#, c-format
msgid ""
"                                     export, place into import library "
"instead.\n"
msgstr ""

#: earm_wince_pe.c:407 earmpe.c:407 ei386pe.c:407 ei386pe_posix.c:407
#: ei386pep.c:389 emcorepe.c:407 eppcpe.c:407 eshpe.c:407
#, c-format
msgid ""
"  --export-all-symbols               Automatically export all globals to "
"DLL\n"
msgstr ""

#: earm_wince_pe.c:408 earmpe.c:408 ei386pe.c:408 ei386pe_posix.c:408
#: ei386pep.c:390 emcorepe.c:408 eppcpe.c:408 eshpe.c:408
#, c-format
msgid "  --kill-at                          Remove @nn from exported symbols\n"
msgstr ""

#: earm_wince_pe.c:409 earmpe.c:409 ei386pe.c:409 ei386pe_posix.c:409
#: ei386pep.c:391 emcorepe.c:409 eppcpe.c:409 eshpe.c:409
#, c-format
msgid ""
"  --output-def <file>                Generate a .DEF file for the built DLL\n"
msgstr ""

#: earm_wince_pe.c:410 earmpe.c:410 ei386pe.c:410 ei386pe_posix.c:410
#: ei386pep.c:392 emcorepe.c:410 eppcpe.c:410 eshpe.c:410
#, c-format
msgid "  --warn-duplicate-exports           Warn about duplicate exports\n"
msgstr ""

#: earm_wince_pe.c:411 earmpe.c:411 ei386pe.c:411 ei386pe_posix.c:411
#: emcorepe.c:411 eppcpe.c:411 eshpe.c:411
#, c-format
msgid ""
"  --compat-implib                    Create backward compatible import "
"libs;\n"
"                                       create __imp_<SYMBOL> as well.\n"
msgstr ""

#: earm_wince_pe.c:412 earmpe.c:412 ei386pe.c:412 ei386pe_posix.c:412
#: emcorepe.c:412 eppcpe.c:412 eshpe.c:412
#, c-format
msgid ""
"  --enable-auto-image-base[=<address>] Automatically choose image base for "
"DLLs\n"
"                                       (optionally starting with address) "
"unless\n"
"                                       specifically set with --image-base\n"
msgstr ""

#: earm_wince_pe.c:413 earmpe.c:413 ei386pe.c:413 ei386pe_posix.c:413
#: emcorepe.c:413 eppcpe.c:413 eshpe.c:413
#, c-format
msgid ""
"  --disable-auto-image-base          Do not auto-choose image base. "
"(default)\n"
msgstr ""

#: earm_wince_pe.c:414 earmpe.c:414 ei386pe.c:414 ei386pe_posix.c:414
#: ei386pep.c:396 emcorepe.c:414 eppcpe.c:414 eshpe.c:414
#, c-format
msgid ""
"  --dll-search-prefix=<string>       When linking dynamically to a dll "
"without\n"
"                                       an importlib, use <string><basename>."
"dll\n"
"                                       in preference to lib<basename>.dll \n"
msgstr ""

#: earm_wince_pe.c:415 earmpe.c:415 ei386pe.c:415 ei386pe_posix.c:415
#: ei386pep.c:397 emcorepe.c:415 eppcpe.c:415 eshpe.c:415
#, c-format
msgid ""
"  --enable-auto-import               Do sophisticated linking of _sym to\n"
"                                       __imp_sym for DATA references\n"
msgstr ""

#: earm_wince_pe.c:416 earmpe.c:416 ei386pe.c:416 ei386pe_posix.c:416
#: ei386pep.c:398 emcorepe.c:416 eppcpe.c:416 eshpe.c:416
#, c-format
msgid ""
"  --disable-auto-import              Do not auto-import DATA items from "
"DLLs\n"
msgstr ""

#: earm_wince_pe.c:417 earmpe.c:417 ei386pe.c:417 ei386pe_posix.c:417
#: emcorepe.c:417 eppcpe.c:417 eshpe.c:417
#, c-format
msgid ""
"  --enable-runtime-pseudo-reloc      Work around auto-import limitations by\n"
"                                       adding pseudo-relocations resolved "
"at\n"
"                                       runtime.\n"
msgstr ""

#: earm_wince_pe.c:418 earmpe.c:418 ei386pe.c:418 ei386pe_posix.c:418
#: emcorepe.c:418 eppcpe.c:418 eshpe.c:418
#, c-format
msgid ""
"  --disable-runtime-pseudo-reloc     Do not add runtime pseudo-relocations "
"for\n"
"                                       auto-imported DATA.\n"
msgstr ""

#: earm_wince_pe.c:419 earmpe.c:419 ei386pe.c:419 ei386pe_posix.c:419
#: emcorepe.c:419 eppcpe.c:419 eshpe.c:419
#, c-format
msgid ""
"  --enable-extra-pe-debug            Enable verbose debug output when "
"building\n"
"                                       or linking to DLLs (esp. auto-"
"import)\n"
msgstr ""

#: earm_wince_pe.c:421 earmpe.c:421 ei386pe.c:421 ei386pe_posix.c:421
#: emcorepe.c:421 eppcpe.c:421 eshpe.c:421
#, c-format
msgid ""
"  --large-address-aware              Executable supports virtual addresses\n"
"                                       greater than 2 gigabytes\n"
msgstr ""

#: earm_wince_pe.c:422 earmpe.c:422 ei386pe.c:422 ei386pe_posix.c:422
#: emcorepe.c:422 eppcpe.c:422 eshpe.c:422
#, c-format
msgid ""
"  --disable-large-address-aware      Executable does not support virtual\n"
"                                       addresses greater than 2 gigabytes\n"
msgstr ""

#: earm_wince_pe.c:423 earmpe.c:423 ei386pe.c:423 ei386pe_posix.c:423
#: ei386pep.c:402 emcorepe.c:423 eppcpe.c:423 eshpe.c:423
#, c-format
msgid ""
"  --enable-long-section-names        Use long COFF section names even in\n"
"                                       executable image files\n"
msgstr ""

#: earm_wince_pe.c:424 earmpe.c:424 ei386pe.c:424 ei386pe_posix.c:424
#: ei386pep.c:403 emcorepe.c:424 eppcpe.c:424 eshpe.c:424
#, c-format
msgid ""
"  --disable-long-section-names       Never use long COFF section names, "
"even\n"
"                                       in object files\n"
msgstr ""

#: earm_wince_pe.c:425 earmpe.c:425 ei386pe.c:425 ei386pe_posix.c:425
#: ei386pep.c:405 emcorepe.c:425 eppcpe.c:425 eshpe.c:425
#, c-format
msgid ""
"  --dynamicbase                      Image base address may be relocated "
"using\n"
"                                       address space layout randomization "
"(ASLR)\n"
msgstr ""

#: earm_wince_pe.c:426 earmpe.c:426 ei386pe.c:426 ei386pe_posix.c:426
#: ei386pep.c:406 emcorepe.c:426 eppcpe.c:426 eshpe.c:426
#, c-format
msgid "  --enable-reloc-section             Create the base relocation table\n"
msgstr ""

#: earm_wince_pe.c:427 earmpe.c:427 ei386pe.c:427 ei386pe_posix.c:427
#: ei386pep.c:407 emcorepe.c:427 eppcpe.c:427 eshpe.c:427
#, c-format
msgid "  --forceinteg               Code integrity checks are enforced\n"
msgstr ""

#: earm_wince_pe.c:428 earmpe.c:428 ei386pe.c:428 ei386pe_posix.c:428
#: ei386pep.c:408 emcorepe.c:428 eppcpe.c:428 eshpe.c:428
#, c-format
msgid ""
"  --nxcompat                 Image is compatible with data execution "
"prevention\n"
msgstr ""

#: earm_wince_pe.c:429 earmpe.c:429 ei386pe.c:429 ei386pe_posix.c:429
#: ei386pep.c:409 emcorepe.c:429 eppcpe.c:429 eshpe.c:429
#, c-format
msgid ""
"  --no-isolation             Image understands isolation but do not isolate "
"the image\n"
msgstr ""

#: earm_wince_pe.c:430 earmpe.c:430 ei386pe.c:430 ei386pe_posix.c:430
#: emcorepe.c:430 eppcpe.c:430 eshpe.c:430
#, c-format
msgid ""
"  --no-seh                   Image does not use SEH. No SE handler may\n"
"                                       be called in this image\n"
msgstr ""

#: earm_wince_pe.c:431 earmpe.c:431 ei386pe.c:431 ei386pe_posix.c:431
#: ei386pep.c:411 emcorepe.c:431 eppcpe.c:431 eshpe.c:431
#, c-format
msgid "  --no-bind                  Do not bind this image\n"
msgstr ""

#: earm_wince_pe.c:432 earmpe.c:432 ei386pe.c:432 ei386pe_posix.c:432
#: ei386pep.c:412 emcorepe.c:432 eppcpe.c:432 eshpe.c:432
#, c-format
msgid "  --wdmdriver                Driver uses the WDM model\n"
msgstr ""

#: earm_wince_pe.c:433 earmpe.c:433 ei386pe.c:433 ei386pe_posix.c:433
#: ei386pep.c:413 emcorepe.c:433 eppcpe.c:433 eshpe.c:433
#, c-format
msgid "  --tsaware                  Image is Terminal Server aware\n"
msgstr ""

#: earm_wince_pe.c:434 earmpe.c:434 ei386pe.c:434 ei386pe_posix.c:434
#: ei386pep.c:414 emcorepe.c:434 eppcpe.c:434 eshpe.c:434
#, c-format
msgid "  --build-id[=STYLE]         Generate build ID\n"
msgstr ""

#: earm_wince_pe.c:562 earmpe.c:562 ei386beos.c:205 ei386pe.c:562
#: ei386pe_posix.c:562 ei386pep.c:539 emcorepe.c:562 eppcpe.c:562 eshpe.c:562
msgid "%P: warning: bad version number in -subsystem option\n"
msgstr ""

#: earm_wince_pe.c:587 earmpe.c:587 ei386beos.c:222 ei386pe.c:587
#: ei386pe_posix.c:587 ei386pep.c:564 emcorepe.c:587 eppcpe.c:587 eshpe.c:587
msgid "%F%P: invalid subsystem type %s\n"
msgstr ""

#: earm_wince_pe.c:608 earmpe.c:608 ei386beos.c:233 ei386pe.c:608
#: ei386pe_posix.c:608 ei386pep.c:585 emcorepe.c:608 eppcpe.c:608 eshpe.c:608
msgid "%F%P: invalid hex number for PE parameter '%s'\n"
msgstr ""

#: earm_wince_pe.c:625 earmpe.c:625 ei386beos.c:250 ei386pe.c:625
#: ei386pe_posix.c:625 ei386pep.c:602 emcorepe.c:625 eppcpe.c:625 eshpe.c:625
msgid "%F%P: strange hex info for PE parameter '%s'\n"
msgstr ""

#: earm_wince_pe.c:641 earmpe.c:641 eelf32mcore.c:268 ei386beos.c:266
#: ei386pe.c:641 ei386pe_posix.c:641 ei386pep.c:619 emcorepe.c:641 eppcpe.c:641
#: eshpe.c:641
msgid "%F%P: cannot open base file %s\n"
msgstr ""

#: earm_wince_pe.c:937 earmpe.c:937 ei386beos.c:362 ei386pe.c:937
#: ei386pe_posix.c:937 ei386pep.c:899 emcorepe.c:937 eppcpe.c:937 eshpe.c:937
msgid "%P: warning, file alignment > section alignment\n"
msgstr ""

#: earm_wince_pe.c:950 earmpe.c:950 ei386pe.c:950 ei386pe_posix.c:950
#: emcorepe.c:950 eppcpe.c:950 eshpe.c:950
msgid ""
"%P: warning: --export-dynamic is not supported for PE targets, did you mean "
"--export-all-symbols?\n"
msgstr ""

#: earm_wince_pe.c:995 earmpe.c:995 ei386pe.c:995 ei386pe_posix.c:995
#: emcorepe.c:995 eppcpe.c:995 eshpe.c:995
msgid "%P: warning: resolving %s by linking to %s\n"
msgstr ""

#: earm_wince_pe.c:1000 earmpe.c:1000 ei386pe.c:1000 ei386pe_posix.c:1000
#: ei386pep.c:985 ei386pep.c:1012 emcorepe.c:1000 eppcpe.c:1000 eshpe.c:1000
msgid "Use --enable-stdcall-fixup to disable these warnings\n"
msgstr ""

#: earm_wince_pe.c:1001 earmpe.c:1001 ei386pe.c:1001 ei386pe_posix.c:1001
#: ei386pep.c:986 ei386pep.c:1013 emcorepe.c:1001 eppcpe.c:1001 eshpe.c:1001
msgid "Use --disable-stdcall-fixup to disable these fixups\n"
msgstr ""

#: earm_wince_pe.c:1070 earmpe.c:1070 ei386pe.c:1070 ei386pe_posix.c:1070
#: ei386pep.c:1064 emcorepe.c:1070 eppcpe.c:1070 eshpe.c:1070
msgid "%P: %C: cannot get section contents - auto-import exception\n"
msgstr ""

#: earm_wince_pe.c:1155 earmpe.c:1155 ei386pe.c:1155 ei386pe_posix.c:1155
#: ei386pep.c:1158 emcorepe.c:1155 eppcpe.c:1155 eshpe.c:1155
msgid "%P: warning: .buildid section discarded, --build-id ignored\n"
msgstr ""

#: earm_wince_pe.c:1252 earmpe.c:1252 ei386pe.c:1252 ei386pe_posix.c:1252
#: ei386pep.c:1255 emcorepe.c:1252 eppcpe.c:1252 eshpe.c:1252
msgid "%P: warning: cannot create .buildid section, --build-id ignored\n"
msgstr ""

#: earm_wince_pe.c:1306 earmpe.c:1306 ei386pe.c:1306 ei386pe_posix.c:1306
#: ei386pep.c:1310 emcorepe.c:1306 eppcpe.c:1306 eshpe.c:1306
msgid "%F%P: cannot perform PE operations on non PE output file '%pB'\n"
msgstr ""

#: earm_wince_pe.c:1449 earmpe.c:1449 ei386pe.c:1449 ei386pe_posix.c:1449
#: ei386pep.c:1434 emcorepe.c:1449 eppcpe.c:1449 eshpe.c:1449
msgid "%X%P: unable to process relocs: %E\n"
msgstr ""

#: earm_wince_pe.c:1687 earmelf.c:139 earmelf_fbsd.c:139 earmelf_fuchsia.c:139
#: earmelf_linux.c:139 earmelf_linux_eabi.c:139 earmelf_linux_fdpiceabi.c:139
#: earmelf_nacl.c:139 earmelf_nbsd.c:139 earmelf_phoenix.c:139
#: earmelf_vxworks.c:139 earmelfb.c:139 earmelfb_fbsd.c:139
#: earmelfb_fuchsia.c:139 earmelfb_linux.c:139 earmelfb_linux_eabi.c:139
#: earmelfb_linux_fdpiceabi.c:139 earmelfb_nacl.c:139 earmelfb_nbsd.c:139
#: earmnto.c:139 earmpe.c:1687 earmsymbian.c:139 ei386beos.c:610
#: ei386beos.c:631 ei386pe.c:1687 ei386pe_posix.c:1687 emcorepe.c:1687
#: eppcpe.c:1687 eshpe.c:1687
#, c-format
msgid "%P: errors encountered processing file %s\n"
msgstr ""

#: earm_wince_pe.c:1710 earmpe.c:1710 ei386pe.c:1710 ei386pe_posix.c:1710
#: emcorepe.c:1710 eppcpe.c:1710 eshpe.c:1710
#, c-format
msgid "%P: errors encountered processing file %s for interworking\n"
msgstr ""

#: earm_wince_pe.c:1877 earmelf.c:521 earmelf_fbsd.c:521 earmelf_fuchsia.c:521
#: earmelf_linux.c:521 earmelf_linux_eabi.c:521 earmelf_linux_fdpiceabi.c:521
#: earmelf_nacl.c:521 earmelf_nbsd.c:521 earmelf_phoenix.c:521
#: earmelf_vxworks.c:521 earmelfb.c:521 earmelfb_fbsd.c:521
#: earmelfb_fuchsia.c:521 earmelfb_linux.c:521 earmelfb_linux_eabi.c:521
#: earmelfb_linux_fdpiceabi.c:521 earmelfb_nacl.c:521 earmelfb_nbsd.c:521
#: earmnto.c:521 earmpe.c:1877 earmsymbian.c:521 ei386pe.c:1877
#: ei386pe_posix.c:1877 emcorepe.c:1877 eppcpe.c:1877 eshpe.c:1877
msgid "%P: warning: '--thumb-entry %s' is overriding '-e %s'\n"
msgstr ""

#: earm_wince_pe.c:1882 earmelf.c:526 earmelf_fbsd.c:526 earmelf_fuchsia.c:526
#: earmelf_linux.c:526 earmelf_linux_eabi.c:526 earmelf_linux_fdpiceabi.c:526
#: earmelf_nacl.c:526 earmelf_nbsd.c:526 earmelf_phoenix.c:526
#: earmelf_vxworks.c:526 earmelfb.c:526 earmelfb_fbsd.c:526
#: earmelfb_fuchsia.c:526 earmelfb_linux.c:526 earmelfb_linux_eabi.c:526
#: earmelfb_linux_fdpiceabi.c:526 earmelfb_nacl.c:526 earmelfb_nbsd.c:526
#: earmnto.c:526 earmpe.c:1882 earmsymbian.c:526 ei386pe.c:1882
#: ei386pe_posix.c:1882 emcorepe.c:1882 eppcpe.c:1882 eshpe.c:1882
msgid "%P: warning: cannot find thumb start symbol %s\n"
msgstr ""

#: earmelf.c:552 earmelf_fbsd.c:552 earmelf_fuchsia.c:552 earmelf_linux.c:552
#: earmelf_linux_eabi.c:552 earmelf_linux_fdpiceabi.c:552 earmelf_nacl.c:552
#: earmelf_nbsd.c:552 earmelf_phoenix.c:552 earmelf_vxworks.c:552
#: earmelfb.c:552 earmelfb_fbsd.c:552 earmelfb_fuchsia.c:552
#: earmelfb_linux.c:552 earmelfb_linux_eabi.c:552
#: earmelfb_linux_fdpiceabi.c:552 earmelfb_nacl.c:552 earmelfb_nbsd.c:552
#: earmnto.c:552 earmsymbian.c:552
msgid "%F%P: %s: can't open: %E\n"
msgstr ""

#: earmelf.c:555 earmelf_fbsd.c:555 earmelf_fuchsia.c:555 earmelf_linux.c:555
#: earmelf_linux_eabi.c:555 earmelf_linux_fdpiceabi.c:555 earmelf_nacl.c:555
#: earmelf_nbsd.c:555 earmelf_phoenix.c:555 earmelf_vxworks.c:555
#: earmelfb.c:555 earmelfb_fbsd.c:555 earmelfb_fuchsia.c:555
#: earmelfb_linux.c:555 earmelfb_linux_eabi.c:555
#: earmelfb_linux_fdpiceabi.c:555 earmelfb_nacl.c:555 earmelfb_nbsd.c:555
#: earmnto.c:555 earmsymbian.c:555
msgid "%F%P: %s: not a relocatable file: %E\n"
msgstr ""

#: earmelf.c:1020 earmelf_fbsd.c:1020 earmelf_fuchsia.c:1020
#: earmelf_linux.c:1020 earmelf_linux_eabi.c:1020
#: earmelf_linux_fdpiceabi.c:1020 earmelf_nacl.c:1020 earmelf_nbsd.c:1020
#: earmelf_phoenix.c:1020 earmelf_vxworks.c:1056 earmelfb.c:1020
#: earmelfb_fbsd.c:1020 earmelfb_fuchsia.c:1020 earmelfb_linux.c:1020
#: earmelfb_linux_eabi.c:1020 earmelfb_linux_fdpiceabi.c:1020
#: earmelfb_nacl.c:1020 earmelfb_nbsd.c:1020 earmnto.c:995 earmsymbian.c:1020
msgid "%P: unrecognized VFP11 fix type '%s'\n"
msgstr ""

#: earmelf.c:1033 earmelf_fbsd.c:1033 earmelf_fuchsia.c:1033
#: earmelf_linux.c:1033 earmelf_linux_eabi.c:1033
#: earmelf_linux_fdpiceabi.c:1033 earmelf_nacl.c:1033 earmelf_nbsd.c:1033
#: earmelf_phoenix.c:1033 earmelf_vxworks.c:1069 earmelfb.c:1033
#: earmelfb_fbsd.c:1033 earmelfb_fuchsia.c:1033 earmelfb_linux.c:1033
#: earmelfb_linux_eabi.c:1033 earmelfb_linux_fdpiceabi.c:1033
#: earmelfb_nacl.c:1033 earmelfb_nbsd.c:1033 earmnto.c:1008 earmsymbian.c:1033
msgid "%P: unrecognized STM32L4XX fix type '%s'\n"
msgstr ""

#: earmelf.c:1100 earmelf_fbsd.c:1100 earmelf_fuchsia.c:1100
#: earmelf_linux.c:1100 earmelf_linux_eabi.c:1100
#: earmelf_linux_fdpiceabi.c:1100 earmelf_nacl.c:1100 earmelf_nbsd.c:1100
#: earmelf_phoenix.c:1100 earmelf_vxworks.c:1140 earmelfb.c:1100
#: earmelfb_fbsd.c:1100 earmelfb_fuchsia.c:1100 earmelfb_linux.c:1100
#: earmelfb_linux_eabi.c:1100 earmelfb_linux_fdpiceabi.c:1100
#: earmelfb_nacl.c:1100 earmelfb_nbsd.c:1100 earmnto.c:1075 earmsymbian.c:1100
#, c-format
msgid ""
"  --thumb-entry=<sym>         Set the entry point to be Thumb symbol <sym>\n"
msgstr ""

#: earmelf.c:1101 earmelf_fbsd.c:1101 earmelf_fuchsia.c:1101
#: earmelf_linux.c:1101 earmelf_linux_eabi.c:1101
#: earmelf_linux_fdpiceabi.c:1101 earmelf_nacl.c:1101 earmelf_nbsd.c:1101
#: earmelf_phoenix.c:1101 earmelf_vxworks.c:1141 earmelfb.c:1101
#: earmelfb_fbsd.c:1101 earmelfb_fuchsia.c:1101 earmelfb_linux.c:1101
#: earmelfb_linux_eabi.c:1101 earmelfb_linux_fdpiceabi.c:1101
#: earmelfb_nacl.c:1101 earmelfb_nbsd.c:1101 earmnto.c:1076 earmsymbian.c:1101
#, c-format
msgid "  --be8                       Output BE8 format image\n"
msgstr ""

#: earmelf.c:1102 earmelf_fbsd.c:1102 earmelf_fuchsia.c:1102
#: earmelf_linux.c:1102 earmelf_linux_eabi.c:1102
#: earmelf_linux_fdpiceabi.c:1102 earmelf_nacl.c:1102 earmelf_nbsd.c:1102
#: earmelf_phoenix.c:1102 earmelf_vxworks.c:1142 earmelfb.c:1102
#: earmelfb_fbsd.c:1102 earmelfb_fuchsia.c:1102 earmelfb_linux.c:1102
#: earmelfb_linux_eabi.c:1102 earmelfb_linux_fdpiceabi.c:1102
#: earmelfb_nacl.c:1102 earmelfb_nbsd.c:1102 earmnto.c:1077 earmsymbian.c:1102
#, c-format
msgid "  --target1-rel               Interpret R_ARM_TARGET1 as R_ARM_REL32\n"
msgstr ""

#: earmelf.c:1103 earmelf_fbsd.c:1103 earmelf_fuchsia.c:1103
#: earmelf_linux.c:1103 earmelf_linux_eabi.c:1103
#: earmelf_linux_fdpiceabi.c:1103 earmelf_nacl.c:1103 earmelf_nbsd.c:1103
#: earmelf_phoenix.c:1103 earmelf_vxworks.c:1143 earmelfb.c:1103
#: earmelfb_fbsd.c:1103 earmelfb_fuchsia.c:1103 earmelfb_linux.c:1103
#: earmelfb_linux_eabi.c:1103 earmelfb_linux_fdpiceabi.c:1103
#: earmelfb_nacl.c:1103 earmelfb_nbsd.c:1103 earmnto.c:1078 earmsymbian.c:1103
#, c-format
msgid "  --target1-abs               Interpret R_ARM_TARGET1 as R_ARM_ABS32\n"
msgstr ""

#: earmelf.c:1104 earmelf_fbsd.c:1104 earmelf_fuchsia.c:1104
#: earmelf_linux.c:1104 earmelf_linux_eabi.c:1104
#: earmelf_linux_fdpiceabi.c:1104 earmelf_nacl.c:1104 earmelf_nbsd.c:1104
#: earmelf_phoenix.c:1104 earmelf_vxworks.c:1144 earmelfb.c:1104
#: earmelfb_fbsd.c:1104 earmelfb_fuchsia.c:1104 earmelfb_linux.c:1104
#: earmelfb_linux_eabi.c:1104 earmelfb_linux_fdpiceabi.c:1104
#: earmelfb_nacl.c:1104 earmelfb_nbsd.c:1104 earmnto.c:1079 earmsymbian.c:1104
#, c-format
msgid "  --target2=<type>            Specify definition of R_ARM_TARGET2\n"
msgstr ""

#: earmelf.c:1105 earmelf_fbsd.c:1105 earmelf_fuchsia.c:1105
#: earmelf_linux.c:1105 earmelf_linux_eabi.c:1105
#: earmelf_linux_fdpiceabi.c:1105 earmelf_nacl.c:1105 earmelf_nbsd.c:1105
#: earmelf_phoenix.c:1105 earmelf_vxworks.c:1145 earmelfb.c:1105
#: earmelfb_fbsd.c:1105 earmelfb_fuchsia.c:1105 earmelfb_linux.c:1105
#: earmelfb_linux_eabi.c:1105 earmelfb_linux_fdpiceabi.c:1105
#: earmelfb_nacl.c:1105 earmelfb_nbsd.c:1105 earmnto.c:1080 earmsymbian.c:1105
#, c-format
msgid "  --fix-v4bx                  Rewrite BX rn as MOV pc, rn for ARMv4\n"
msgstr ""

#: earmelf.c:1106 earmelf_fbsd.c:1106 earmelf_fuchsia.c:1106
#: earmelf_linux.c:1106 earmelf_linux_eabi.c:1106
#: earmelf_linux_fdpiceabi.c:1106 earmelf_nacl.c:1106 earmelf_nbsd.c:1106
#: earmelf_phoenix.c:1106 earmelf_vxworks.c:1146 earmelfb.c:1106
#: earmelfb_fbsd.c:1106 earmelfb_fuchsia.c:1106 earmelfb_linux.c:1106
#: earmelfb_linux_eabi.c:1106 earmelfb_linux_fdpiceabi.c:1106
#: earmelfb_nacl.c:1106 earmelfb_nbsd.c:1106 earmnto.c:1081 earmsymbian.c:1106
#, c-format
msgid ""
"  --fix-v4bx-interworking     Rewrite BX rn branch to ARMv4 interworking "
"veneer\n"
msgstr ""

#: earmelf.c:1107 earmelf_fbsd.c:1107 earmelf_fuchsia.c:1107
#: earmelf_linux.c:1107 earmelf_linux_eabi.c:1107
#: earmelf_linux_fdpiceabi.c:1107 earmelf_nacl.c:1107 earmelf_nbsd.c:1107
#: earmelf_phoenix.c:1107 earmelf_vxworks.c:1147 earmelfb.c:1107
#: earmelfb_fbsd.c:1107 earmelfb_fuchsia.c:1107 earmelfb_linux.c:1107
#: earmelfb_linux_eabi.c:1107 earmelfb_linux_fdpiceabi.c:1107
#: earmelfb_nacl.c:1107 earmelfb_nbsd.c:1107 earmnto.c:1082 earmsymbian.c:1107
#, c-format
msgid "  --use-blx                   Enable use of BLX instructions\n"
msgstr ""

#: earmelf.c:1108 earmelf_fbsd.c:1108 earmelf_fuchsia.c:1108
#: earmelf_linux.c:1108 earmelf_linux_eabi.c:1108
#: earmelf_linux_fdpiceabi.c:1108 earmelf_nacl.c:1108 earmelf_nbsd.c:1108
#: earmelf_phoenix.c:1108 earmelf_vxworks.c:1148 earmelfb.c:1108
#: earmelfb_fbsd.c:1108 earmelfb_fuchsia.c:1108 earmelfb_linux.c:1108
#: earmelfb_linux_eabi.c:1108 earmelfb_linux_fdpiceabi.c:1108
#: earmelfb_nacl.c:1108 earmelfb_nbsd.c:1108 earmnto.c:1083 earmsymbian.c:1108
#, c-format
msgid "  --vfp11-denorm-fix          Specify how to fix VFP11 denorm erratum\n"
msgstr ""

#: earmelf.c:1109 earmelf_fbsd.c:1109 earmelf_fuchsia.c:1109
#: earmelf_linux.c:1109 earmelf_linux_eabi.c:1109
#: earmelf_linux_fdpiceabi.c:1109 earmelf_nacl.c:1109 earmelf_nbsd.c:1109
#: earmelf_phoenix.c:1109 earmelf_vxworks.c:1149 earmelfb.c:1109
#: earmelfb_fbsd.c:1109 earmelfb_fuchsia.c:1109 earmelfb_linux.c:1109
#: earmelfb_linux_eabi.c:1109 earmelfb_linux_fdpiceabi.c:1109
#: earmelfb_nacl.c:1109 earmelfb_nbsd.c:1109 earmnto.c:1084 earmsymbian.c:1109
#, c-format
msgid ""
"  --fix-stm32l4xx-629360      Specify how to fix STM32L4XX 629360 erratum\n"
msgstr ""

#: earmelf.c:1115 earmelf_fbsd.c:1115 earmelf_fuchsia.c:1115
#: earmelf_linux.c:1115 earmelf_linux_eabi.c:1115
#: earmelf_linux_fdpiceabi.c:1115 earmelf_nacl.c:1115 earmelf_nbsd.c:1115
#: earmelf_phoenix.c:1115 earmelf_vxworks.c:1155 earmelfb.c:1115
#: earmelfb_fbsd.c:1115 earmelfb_fuchsia.c:1115 earmelfb_linux.c:1115
#: earmelfb_linux_eabi.c:1115 earmelfb_linux_fdpiceabi.c:1115
#: earmelfb_nacl.c:1115 earmelfb_nbsd.c:1115 earmnto.c:1090 earmsymbian.c:1115
#, c-format
msgid ""
"  --long-plt                  Generate long .plt entries\n"
"                              to handle large .plt/.got displacements\n"
msgstr ""

#: earmelf.c:1117 earmelf_fbsd.c:1117 earmelf_fuchsia.c:1117
#: earmelf_linux.c:1117 earmelf_linux_eabi.c:1117
#: earmelf_linux_fdpiceabi.c:1117 earmelf_nacl.c:1117 earmelf_nbsd.c:1117
#: earmelf_phoenix.c:1117 earmelf_vxworks.c:1157 earmelfb.c:1117
#: earmelfb_fbsd.c:1117 earmelfb_fuchsia.c:1117 earmelfb_linux.c:1117
#: earmelfb_linux_eabi.c:1117 earmelfb_linux_fdpiceabi.c:1117
#: earmelfb_nacl.c:1117 earmelfb_nbsd.c:1117 earmnto.c:1092 earmsymbian.c:1117
#, c-format
msgid ""
"  --cmse-implib               Make import library to be a secure gateway "
"import\n"
"                                library as per ARMv8-M Security Extensions\n"
msgstr ""

#: earmelf.c:1119 earmelf_fbsd.c:1119 earmelf_fuchsia.c:1119
#: earmelf_linux.c:1119 earmelf_linux_eabi.c:1119
#: earmelf_linux_fdpiceabi.c:1119 earmelf_nacl.c:1119 earmelf_nbsd.c:1119
#: earmelf_phoenix.c:1119 earmelf_vxworks.c:1159 earmelfb.c:1119
#: earmelfb_fbsd.c:1119 earmelfb_fuchsia.c:1119 earmelfb_linux.c:1119
#: earmelfb_linux_eabi.c:1119 earmelfb_linux_fdpiceabi.c:1119
#: earmelfb_nacl.c:1119 earmelfb_nbsd.c:1119 earmnto.c:1094 earmsymbian.c:1119
#, c-format
msgid ""
"  --in-implib                 Import library whose symbols address must\n"
"                                remain stable\n"
msgstr ""

#: earmelf.c:1130 earmelf_fbsd.c:1130 earmelf_fuchsia.c:1130
#: earmelf_linux.c:1130 earmelf_linux_eabi.c:1130
#: earmelf_linux_fdpiceabi.c:1130 earmelf_nacl.c:1130 earmelf_nbsd.c:1130
#: earmelf_phoenix.c:1130 earmelf_vxworks.c:1170 earmelfb.c:1130
#: earmelfb_fbsd.c:1130 earmelfb_fuchsia.c:1130 earmelfb_linux.c:1130
#: earmelfb_linux_eabi.c:1130 earmelfb_linux_fdpiceabi.c:1130
#: earmelfb_nacl.c:1130 earmelfb_nbsd.c:1130 earmnto.c:1105 earmsymbian.c:1130
#, c-format
msgid ""
"  --[no-]fix-cortex-a8        Disable/enable Cortex-A8 Thumb-2 branch "
"erratum fix\n"
msgstr ""

#: earmelf.c:1131 earmelf_fbsd.c:1131 earmelf_fuchsia.c:1131
#: earmelf_linux.c:1131 earmelf_linux_eabi.c:1131
#: earmelf_linux_fdpiceabi.c:1131 earmelf_nacl.c:1131 earmelf_nbsd.c:1131
#: earmelf_phoenix.c:1131 earmelf_vxworks.c:1171 earmelfb.c:1131
#: earmelfb_fbsd.c:1131 earmelfb_fuchsia.c:1131 earmelfb_linux.c:1131
#: earmelfb_linux_eabi.c:1131 earmelfb_linux_fdpiceabi.c:1131
#: earmelfb_nacl.c:1131 earmelfb_nbsd.c:1131 earmnto.c:1106 earmsymbian.c:1131
#, c-format
msgid "  --no-merge-exidx-entries    Disable merging exidx entries\n"
msgstr ""

#: earmelf.c:1132 earmelf_fbsd.c:1132 earmelf_fuchsia.c:1132
#: earmelf_linux.c:1132 earmelf_linux_eabi.c:1132
#: earmelf_linux_fdpiceabi.c:1132 earmelf_nacl.c:1132 earmelf_nbsd.c:1132
#: earmelf_phoenix.c:1132 earmelf_vxworks.c:1172 earmelfb.c:1132
#: earmelfb_fbsd.c:1132 earmelfb_fuchsia.c:1132 earmelfb_linux.c:1132
#: earmelfb_linux_eabi.c:1132 earmelfb_linux_fdpiceabi.c:1132
#: earmelfb_nacl.c:1132 earmelfb_nbsd.c:1132 earmnto.c:1107 earmsymbian.c:1132
#, c-format
msgid ""
"  --[no-]fix-arm1176          Disable/enable ARM1176 BLX immediate erratum "
"fix\n"
msgstr ""

#: earmelf_vxworks.c:601 eelf32_sparc_vxworks.c:71 eelf32ebmipvxworks.c:267
#: eelf32elmipvxworks.c:267 eelf32ppcvxworks.c:224 eelf_i386_vxworks.c:95
#: eshelf_vxworks.c:71 eshlelf_vxworks.c:71
msgid "%X%P: cannot create dynamic sections %E\n"
msgstr ""

#: earmelf_vxworks.c:607 eelf32_sparc_vxworks.c:77 eelf32ebmipvxworks.c:273
#: eelf32elmipvxworks.c:273 eelf32ppcvxworks.c:230 eelf_i386_vxworks.c:101
#: eshelf_vxworks.c:77 eshlelf_vxworks.c:77
msgid "%X%P: dynamic sections created in non-dynamic link\n"
msgstr ""

#: earmelf_vxworks.c:1174 eelf32_sparc_vxworks.c:472 eelf32ebmipvxworks.c:730
#: eelf32elmipvxworks.c:730 eelf32ppcvxworks.c:783 eelf_i386_vxworks.c:549
#: eshelf_vxworks.c:447 eshlelf_vxworks.c:447
#, c-format
msgid "  --force-dynamic             Always create dynamic sections\n"
msgstr ""

#: eavr1.c:122 eavr2.c:122 eavr25.c:122 eavr3.c:122 eavr31.c:122 eavr35.c:122
#: eavr4.c:122 eavr5.c:122 eavr51.c:122 eavr6.c:122 eavrtiny.c:122
#: eavrxmega1.c:122 eavrxmega2.c:122 eavrxmega3.c:122 eavrxmega4.c:122
#: eavrxmega5.c:122 eavrxmega6.c:122 eavrxmega7.c:122
msgid "%X%P: can not setup the input section list: %E\n"
msgstr ""

#: eavr1.c:157 eavr2.c:157 eavr25.c:157 eavr3.c:157 eavr31.c:157 eavr35.c:157
#: eavr4.c:157 eavr5.c:157 eavr51.c:157 eavr6.c:157 eavrtiny.c:157
#: eavrxmega1.c:157 eavrxmega2.c:157 eavrxmega3.c:157 eavrxmega4.c:157
#: eavrxmega5.c:157 eavrxmega6.c:157 eavrxmega7.c:157
msgid "%X%P: can not create stub BFD: %E\n"
msgstr ""

#: eavr1.c:513 eavr2.c:513 eavr25.c:513 eavr3.c:513 eavr31.c:513 eavr35.c:513
#: eavr4.c:513 eavr5.c:513 eavr51.c:513 eavr6.c:513 eavrtiny.c:513
#: eavrxmega1.c:513 eavrxmega2.c:513 eavrxmega3.c:513 eavrxmega4.c:513
#: eavrxmega5.c:513 eavrxmega6.c:513 eavrxmega7.c:513
#, c-format
msgid ""
"  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that "
"a\n"
"                                program counter wrap-around occurs at "
"address\n"
"                                <val>.  Supported values: 8k, 16k, 32k and "
"64k.\n"
msgstr ""

#: eavr1.c:519 eavr2.c:519 eavr25.c:519 eavr3.c:519 eavr31.c:519 eavr35.c:519
#: eavr4.c:519 eavr5.c:519 eavr51.c:519 eavr6.c:519 eavrtiny.c:519
#: eavrxmega1.c:519 eavrxmega2.c:519 eavrxmega3.c:519 eavrxmega4.c:519
#: eavrxmega5.c:519 eavrxmega6.c:519 eavrxmega7.c:519
#, c-format
msgid ""
"  --no-call-ret-replacement   The relaxation machine normally will\n"
"                                substitute two immediately following call/"
"ret\n"
"                                instructions by a single jump instruction.\n"
"                                This option disables this optimization.\n"
msgstr ""

#: eavr1.c:527 eavr2.c:527 eavr25.c:527 eavr3.c:527 eavr31.c:527 eavr35.c:527
#: eavr4.c:527 eavr5.c:527 eavr51.c:527 eavr6.c:527 eavrtiny.c:527
#: eavrxmega1.c:527 eavrxmega2.c:527 eavrxmega3.c:527 eavrxmega4.c:527
#: eavrxmega5.c:527 eavrxmega6.c:527 eavrxmega7.c:527
#, c-format
msgid ""
"  --no-stubs                  If the linker detects to attempt to access\n"
"                                an instruction beyond 128k by a reloc that\n"
"                                is limited to 128k max, it inserts a jump\n"
"                                stub. You can de-active this with this "
"switch.\n"
msgstr ""

#: eavr1.c:535 eavr2.c:535 eavr25.c:535 eavr3.c:535 eavr31.c:535 eavr35.c:535
#: eavr4.c:535 eavr5.c:535 eavr51.c:535 eavr6.c:535 eavrtiny.c:535
#: eavrxmega1.c:535 eavrxmega2.c:535 eavrxmega3.c:535 eavrxmega4.c:535
#: eavrxmega5.c:535 eavrxmega6.c:535 eavrxmega7.c:535
#, c-format
msgid "  --debug-stubs               Used for debugging avr-ld.\n"
msgstr ""

#: eavr1.c:537 eavr2.c:537 eavr25.c:537 eavr3.c:537 eavr31.c:537 eavr35.c:537
#: eavr4.c:537 eavr5.c:537 eavr51.c:537 eavr6.c:537 eavrtiny.c:537
#: eavrxmega1.c:537 eavrxmega2.c:537 eavrxmega3.c:537 eavrxmega4.c:537
#: eavrxmega5.c:537 eavrxmega6.c:537 eavrxmega7.c:537
#, c-format
msgid "  --debug-relax               Used for debugging avr-ld.\n"
msgstr ""

#: ecskyelf.c:275 ecskyelf_linux.c:275
msgid "%X%P: cannot size stub section: %E\n"
msgstr ""

#: ecskyelf.c:292 ecskyelf_linux.c:292
msgid "%X%P: cannot build stubs: %E\n"
msgstr ""

#: ecskyelf.c:530 ecskyelf_linux.c:692
#, c-format
msgid "  --[no-]branch-stub\n"
msgstr ""

#: ecskyelf.c:531 ecskyelf_linux.c:693
#, c-format
msgid ""
"\t\t\tDisable/enable use of stubs to expand branch instructions that cannot "
"reach the target.\n"
msgstr ""

#: ecskyelf.c:533 ecskyelf_linux.c:695
#, c-format
msgid "  --stub-group-size=N\n"
msgstr ""

#: ecskyelf.c:534 ecskyelf_linux.c:696
#, c-format
msgid ""
"\t\t\tMaximum size of a group of input sections handled by one stub section."
msgstr ""

#: ed30v_e.c:73 ed30v_o.c:73 ed30velf.c:73 eelf32_dlx.c:73 eelf32fr30.c:73
#: eelf32frv.c:73 eelf32ft32.c:73 eelf32iq10.c:73 eelf32iq2000.c:73
#: eelf32mt.c:73 em9s12zelf.c:73 emn10200.c:73 emoxiebox.c:73 emsp430X.c:98
#: emsp430elf.c:98 epjelf.c:73 epjlelf.c:73 exgateelf.c:73
msgid "%X%P: can not size group sections: %E\n"
msgstr ""

#: eelf32_spu.c:255 ev850.c:73 ev850_rh850.c:73
msgid "%X%P: can not create note section: %E\n"
msgstr ""

#: eelf32_spu.c:344
msgid "%F%P: no built-in overlay manager\n"
msgstr ""

#: eelf32_spu.c:354
msgid "%X%P: can not open built-in overlay manager: %E\n"
msgstr ""

#: eelf32_spu.c:360
msgid "%X%P: can not load built-in overlay manager: %E\n"
msgstr ""

#: eelf32_spu.c:420
msgid "%X%P: can not find overlays: %E\n"
msgstr ""

#: eelf32_spu.c:427
msgid "%P: --auto-overlay ignored with user overlay script\n"
msgstr ""

#: eelf32_spu.c:448
msgid "%X%P: can not size overlay stubs: %E\n"
msgstr ""

#: eelf32_spu.c:521
msgid "%F%P: can not open script: %E\n"
msgstr ""

#: eelf32_spu.c:568
msgid "%X%P: %pA exceeds local store range\n"
msgstr ""

#: eelf32_spu.c:571
msgid "%P: --auto-overlay ignored with zero local store range\n"
msgstr ""

#: eelf32_spu.c:871
msgid "%F%P: invalid --local-store address range `%s'\n"
msgstr ""

#: eelf32_spu.c:907
msgid "%F%P: invalid --num-lines/--num-regions `%u'\n"
msgstr ""

#: eelf32_spu.c:912
msgid "%F%P: invalid --line-size/--region-size `%u'\n"
msgstr ""

#: eelf32_spu.c:933
msgid "%F%P: invalid --num-lines/--num-regions `%s'\n"
msgstr ""

#: eelf32_spu.c:946
msgid "%F%P: invalid --line-size/--region-size `%s'\n"
msgstr ""

#: eelf32_spu.c:955
msgid "%F%P: invalid --fixed-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:964
msgid "%F%P: invalid --reserved-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:973
msgid "%F%P: invalid --extra-stack-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:1010
#, c-format
msgid "  --plugin                    Make SPU plugin\n"
msgstr ""

#: eelf32_spu.c:1012
#, c-format
msgid "  --no-overlays               No overlay handling\n"
msgstr ""

#: eelf32_spu.c:1014
#, c-format
msgid ""
"  --compact-stubs             Use smaller and possibly slower call stubs\n"
msgstr ""

#: eelf32_spu.c:1016
#, c-format
msgid "  --emit-stub-syms            Add symbols on overlay call stubs\n"
msgstr ""

#: eelf32_spu.c:1018
#, c-format
msgid ""
"  --extra-overlay-stubs       Add stubs on all calls out of overlay regions\n"
msgstr ""

#: eelf32_spu.c:1020
#, c-format
msgid "  --local-store=lo:hi         Valid address range\n"
msgstr ""

#: eelf32_spu.c:1022
#, c-format
msgid "  --stack-analysis            Estimate maximum stack requirement\n"
msgstr ""

#: eelf32_spu.c:1024
#, c-format
msgid ""
"  --emit-stack-syms           Add sym giving stack needed for each func\n"
msgstr ""

#: eelf32_spu.c:1026
#, c-format
msgid ""
"  --auto-overlay [=filename]  Create an overlay script in filename if\n"
"                                executable does not fit in local store\n"
msgstr ""

#: eelf32_spu.c:1029
#, c-format
msgid "  --auto-relink               Rerun linker using auto-overlay script\n"
msgstr ""

#: eelf32_spu.c:1031
#, c-format
msgid ""
"  --overlay-rodata            Place read-only data with associated function\n"
"                                code in overlays\n"
msgstr ""

#: eelf32_spu.c:1034
#, c-format
msgid "  --num-regions               Number of overlay buffers (default 1)\n"
msgstr ""

#: eelf32_spu.c:1036
#, c-format
msgid ""
"  --region-size               Size of overlay buffers (default 0, auto)\n"
msgstr ""

#: eelf32_spu.c:1038
#, c-format
msgid ""
"  --fixed-space=bytes         Local store for non-overlay code and data\n"
msgstr ""

#: eelf32_spu.c:1040
#, c-format
msgid ""
"  --reserved-space=bytes      Local store for stack and heap.  If not "
"specified\n"
"                                ld will estimate stack size and assume no "
"heap\n"
msgstr ""

#: eelf32_spu.c:1043
#, c-format
msgid ""
"  --extra-stack-space=bytes   Space for negative sp access (default 2000) "
"if\n"
"                                --reserved-space not given\n"
msgstr ""

#: eelf32_spu.c:1046
#, c-format
msgid "  --soft-icache               Generate software icache overlays\n"
msgstr ""

#: eelf32_spu.c:1048
#, c-format
msgid ""
"  --num-lines                 Number of soft-icache lines (default 32)\n"
msgstr ""

#: eelf32_spu.c:1050
#, c-format
msgid "  --line-size                 Size of soft-icache lines (default 1k)\n"
msgstr ""

#: eelf32_spu.c:1052
#, c-format
msgid "  --non-ia-text               Allow non-icache code in icache lines\n"
msgstr ""

#: eelf32_spu.c:1054
#, c-format
msgid "  --lrlive-analysis           Scan function prologue for lr liveness\n"
msgstr ""

#: eelf32_tic6x_be.c:88 eelf32_tic6x_elf_be.c:88 eelf32_tic6x_elf_le.c:88
#: eelf32_tic6x_le.c:88 eelf32_tic6x_linux_be.c:88 eelf32_tic6x_linux_le.c:88
msgid "%F%P: invalid --dsbt-index %d, outside DSBT size\n"
msgstr ""

#: eelf32_tic6x_be.c:540 eelf32_tic6x_elf_be.c:540 eelf32_tic6x_elf_le.c:540
#: eelf32_tic6x_le.c:540 eelf32_tic6x_linux_be.c:540
#: eelf32_tic6x_linux_le.c:540
msgid "%F%P: invalid --dsbt-index %s\n"
msgstr ""

#: eelf32_tic6x_be.c:550 eelf32_tic6x_elf_be.c:550 eelf32_tic6x_elf_le.c:550
#: eelf32_tic6x_le.c:550 eelf32_tic6x_linux_be.c:550
#: eelf32_tic6x_linux_le.c:550
msgid "%F%P: invalid --dsbt-size %s\n"
msgstr ""

#: eelf32_tic6x_be.c:566 eelf32_tic6x_elf_be.c:566 eelf32_tic6x_elf_le.c:566
#: eelf32_tic6x_le.c:566 eelf32_tic6x_linux_be.c:566
#: eelf32_tic6x_linux_le.c:566
#, c-format
msgid ""
"  --dsbt-index <index>    Use this as the DSBT index for the output object\n"
msgstr ""

#: eelf32_tic6x_be.c:567 eelf32_tic6x_elf_be.c:567 eelf32_tic6x_elf_le.c:567
#: eelf32_tic6x_le.c:567 eelf32_tic6x_linux_be.c:567
#: eelf32_tic6x_linux_le.c:567
#, c-format
msgid ""
"  --dsbt-size <index>     Use this as the number of entries in the DSBT "
"table\n"
msgstr ""

#: eelf32_tic6x_be.c:568 eelf32_tic6x_elf_be.c:568 eelf32_tic6x_elf_le.c:568
#: eelf32_tic6x_le.c:568 eelf32_tic6x_linux_be.c:568
#: eelf32_tic6x_linux_le.c:568
#, c-format
msgid "  --no-merge-exidx-entries\n"
msgstr ""

#: eelf32_tic6x_be.c:569 eelf32_tic6x_elf_be.c:569 eelf32_tic6x_elf_le.c:569
#: eelf32_tic6x_le.c:569 eelf32_tic6x_linux_be.c:569
#: eelf32_tic6x_linux_le.c:569
#, c-format
msgid "                          Disable merging exidx entries\n"
msgstr ""

#: eelf32_x86_64.c:480 eelf32_x86_64_nacl.c:480 eelf_i386.c:477
#: eelf_i386_be.c:442 eelf_i386_fbsd.c:477 eelf_i386_ldso.c:452
#: eelf_i386_nacl.c:477 eelf_i386_sol2.c:608 eelf_i386_vxworks.c:504
#: eelf_iamcu.c:4960 eelf_k1om.c:5316 eelf_k1om_fbsd.c:5316 eelf_l1om.c:5316
#: eelf_l1om_fbsd.c:5316 eelf_x86_64.c:480 eelf_x86_64_cloudabi.c:480
#: eelf_x86_64_fbsd.c:480 eelf_x86_64_nacl.c:480 eelf_x86_64_sol2.c:611
msgid "%F%P: invalid number for -z call-nop=prefix-: %s\n"
msgstr ""

#: eelf32_x86_64.c:489 eelf32_x86_64_nacl.c:489 eelf_i386.c:486
#: eelf_i386_be.c:451 eelf_i386_fbsd.c:486 eelf_i386_ldso.c:461
#: eelf_i386_nacl.c:486 eelf_i386_sol2.c:617 eelf_i386_vxworks.c:513
#: eelf_iamcu.c:4969 eelf_k1om.c:5325 eelf_k1om_fbsd.c:5325 eelf_l1om.c:5325
#: eelf_l1om_fbsd.c:5325 eelf_x86_64.c:489 eelf_x86_64_cloudabi.c:489
#: eelf_x86_64_fbsd.c:489 eelf_x86_64_nacl.c:489 eelf_x86_64_sol2.c:620
msgid "%F%P: invalid number for -z call-nop=suffix-: %s\n"
msgstr ""

#: eelf32_x86_64.c:494 eelf32_x86_64_nacl.c:494 eelf_i386.c:491
#: eelf_i386_be.c:456 eelf_i386_fbsd.c:491 eelf_i386_ldso.c:466
#: eelf_i386_nacl.c:491 eelf_i386_sol2.c:622 eelf_i386_vxworks.c:518
#: eelf_iamcu.c:4974 eelf_k1om.c:5330 eelf_k1om_fbsd.c:5330 eelf_l1om.c:5330
#: eelf_l1om_fbsd.c:5330 eelf_x86_64.c:494 eelf_x86_64_cloudabi.c:494
#: eelf_x86_64_fbsd.c:494 eelf_x86_64_nacl.c:494 eelf_x86_64_sol2.c:625
msgid "%F%P: unsupported option: -z %s\n"
msgstr ""

#: eelf32_x86_64.c:516 eelf32_x86_64_nacl.c:516 eelf_i386.c:513
#: eelf_i386_fbsd.c:513 eelf_i386_nacl.c:513 eelf_x86_64.c:516
#: eelf_x86_64_cloudabi.c:516 eelf_x86_64_fbsd.c:516 eelf_x86_64_nacl.c:516
#: eelf_x86_64_sol2.c:647
msgid "%F%P: invalid option for -z cet-report=: %s\n"
msgstr ""

#: eelf32_x86_64.c:553 eelf32_x86_64_nacl.c:553 eelf_i386.c:550
#: eelf_i386_be.c:472 eelf_i386_fbsd.c:550 eelf_i386_ldso.c:491
#: eelf_i386_nacl.c:550 eelf_i386_sol2.c:647 eelf_i386_vxworks.c:539
#: eelf_iamcu.c:4999 eelf_k1om.c:5355 eelf_k1om_fbsd.c:5355 eelf_l1om.c:5355
#: eelf_l1om_fbsd.c:5355 eelf_x86_64.c:553 eelf_x86_64_cloudabi.c:553
#: eelf_x86_64_fbsd.c:553 eelf_x86_64_nacl.c:553 eelf_x86_64_sol2.c:684
#, c-format
msgid ""
"  -z noextern-protected-data  Do not treat protected data symbol as "
"external\n"
msgstr ""

#: eelf32_x86_64.c:556 eelf32_x86_64_nacl.c:556 eelf32lppc.c:775
#: eelf32lppclinux.c:775 eelf32lppcnto.c:775 eelf32lppcsim.c:775
#: eelf32ppc.c:775 eelf32ppc_fbsd.c:775 eelf32ppclinux.c:775 eelf32ppcnto.c:775
#: eelf32ppcsim.c:775 eelf32ppcvxworks.c:753 eelf32ppcwindiss.c:775
#: eelf64lppc.c:1256 eelf64ppc.c:1256 eelf64ppc_fbsd.c:1256 eelf_i386.c:553
#: eelf_i386_be.c:475 eelf_i386_fbsd.c:553 eelf_i386_ldso.c:494
#: eelf_i386_nacl.c:553 eelf_i386_sol2.c:650 eelf_i386_vxworks.c:542
#: eelf_iamcu.c:5002 eelf_k1om.c:5358 eelf_k1om_fbsd.c:5358 eelf_l1om.c:5358
#: eelf_l1om_fbsd.c:5358 eelf_x86_64.c:556 eelf_x86_64_cloudabi.c:556
#: eelf_x86_64_fbsd.c:556 eelf_x86_64_nacl.c:556 eelf_x86_64_sol2.c:687
#: eppclynx.c:775
#, c-format
msgid ""
"  -z dynamic-undefined-weak   Make undefined weak symbols dynamic\n"
"  -z nodynamic-undefined-weak Do not make undefined weak symbols dynamic\n"
msgstr ""

#: eelf32_x86_64.c:560 eelf32_x86_64_nacl.c:560 eelf_x86_64.c:560
#: eelf_x86_64_cloudabi.c:560 eelf_x86_64_fbsd.c:560 eelf_x86_64_nacl.c:560
#: eelf_x86_64_sol2.c:691
#, c-format
msgid "  -z noreloc-overflow         Disable relocation overflow check\n"
msgstr ""

#: eelf32_x86_64.c:563 eelf32_x86_64_nacl.c:563 eelf_i386.c:557
#: eelf_i386_be.c:479 eelf_i386_fbsd.c:557 eelf_i386_ldso.c:498
#: eelf_i386_nacl.c:557 eelf_i386_sol2.c:654 eelf_i386_vxworks.c:546
#: eelf_iamcu.c:5006 eelf_k1om.c:5362 eelf_k1om_fbsd.c:5362 eelf_l1om.c:5362
#: eelf_l1om_fbsd.c:5362 eelf_x86_64.c:563 eelf_x86_64_cloudabi.c:563
#: eelf_x86_64_fbsd.c:563 eelf_x86_64_nacl.c:563 eelf_x86_64_sol2.c:694
#, c-format
msgid "  -z call-nop=PADDING         Use PADDING as 1-byte NOP for branch\n"
msgstr ""

#: eelf32_x86_64.c:566 eelf32_x86_64_nacl.c:566 eelf_i386.c:560
#: eelf_i386_fbsd.c:560 eelf_i386_nacl.c:560 eelf_x86_64.c:566
#: eelf_x86_64_cloudabi.c:566 eelf_x86_64_fbsd.c:566 eelf_x86_64_nacl.c:566
#: eelf_x86_64_sol2.c:697
#, c-format
msgid "  -z ibtplt                   Generate IBT-enabled PLT entries\n"
msgstr ""

#: eelf32_x86_64.c:568 eelf32_x86_64_nacl.c:568 eelf_i386.c:562
#: eelf_i386_fbsd.c:562 eelf_i386_nacl.c:562 eelf_x86_64.c:568
#: eelf_x86_64_cloudabi.c:568 eelf_x86_64_fbsd.c:568 eelf_x86_64_nacl.c:568
#: eelf_x86_64_sol2.c:699
#, c-format
msgid "  -z ibt                      Generate GNU_PROPERTY_X86_FEATURE_1_IBT\n"
msgstr ""

#: eelf32_x86_64.c:570 eelf32_x86_64_nacl.c:570 eelf_i386.c:564
#: eelf_i386_fbsd.c:564 eelf_i386_nacl.c:564 eelf_x86_64.c:570
#: eelf_x86_64_cloudabi.c:570 eelf_x86_64_fbsd.c:570 eelf_x86_64_nacl.c:570
#: eelf_x86_64_sol2.c:701
#, c-format
msgid ""
"  -z shstk                    Generate GNU_PROPERTY_X86_FEATURE_1_SHSTK\n"
msgstr ""

#: eelf32_x86_64.c:572 eelf32_x86_64_nacl.c:572 eelf_i386.c:566
#: eelf_i386_fbsd.c:566 eelf_i386_nacl.c:566 eelf_x86_64.c:572
#: eelf_x86_64_cloudabi.c:572 eelf_x86_64_fbsd.c:572 eelf_x86_64_nacl.c:572
#: eelf_x86_64_sol2.c:703
#, c-format
msgid ""
"  -z cet-report=[none|warning|error] (default: none)\n"
"                              Report missing IBT and SHSTK properties\n"
msgstr ""

#: eelf32b4300.c:670 eelf32bmip.c:670 eelf32bmipn32.c:684 eelf32bsmip.c:684
#: eelf32btsmip.c:670 eelf32btsmip_fbsd.c:670 eelf32btsmipn32.c:670
#: eelf32btsmipn32_fbsd.c:670 eelf32ebmip.c:670 eelf32ebmipvxworks.c:709
#: eelf32elmip.c:670 eelf32elmipvxworks.c:709 eelf32l4300.c:670
#: eelf32lmip.c:670 eelf32lr5900.c:533 eelf32lr5900n32.c:533 eelf32lsmip.c:670
#: eelf32ltsmip.c:670 eelf32ltsmip_fbsd.c:670 eelf32ltsmipn32.c:670
#: eelf32ltsmipn32_fbsd.c:670 eelf32mipswindiss.c:508 eelf64bmip.c:684
#: eelf64btsmip.c:670 eelf64btsmip_fbsd.c:670 eelf64ltsmip.c:670
#: eelf64ltsmip_fbsd.c:670
#, c-format
msgid ""
"  --insn32                    Only generate 32-bit microMIPS instructions\n"
msgstr ""

#: eelf32b4300.c:673 eelf32bmip.c:673 eelf32bmipn32.c:687 eelf32bsmip.c:687
#: eelf32btsmip.c:673 eelf32btsmip_fbsd.c:673 eelf32btsmipn32.c:673
#: eelf32btsmipn32_fbsd.c:673 eelf32ebmip.c:673 eelf32ebmipvxworks.c:712
#: eelf32elmip.c:673 eelf32elmipvxworks.c:712 eelf32l4300.c:673
#: eelf32lmip.c:673 eelf32lr5900.c:536 eelf32lr5900n32.c:536 eelf32lsmip.c:673
#: eelf32ltsmip.c:673 eelf32ltsmip_fbsd.c:673 eelf32ltsmipn32.c:673
#: eelf32ltsmipn32_fbsd.c:673 eelf32mipswindiss.c:511 eelf64bmip.c:687
#: eelf64btsmip.c:673 eelf64btsmip_fbsd.c:673 eelf64ltsmip.c:673
#: eelf64ltsmip_fbsd.c:673
#, c-format
msgid "  --no-insn32                 Generate all microMIPS instructions\n"
msgstr ""

#: eelf32b4300.c:676 eelf32bmip.c:676 eelf32bmipn32.c:690 eelf32bsmip.c:690
#: eelf32btsmip.c:676 eelf32btsmip_fbsd.c:676 eelf32btsmipn32.c:676
#: eelf32btsmipn32_fbsd.c:676 eelf32ebmip.c:676 eelf32ebmipvxworks.c:715
#: eelf32elmip.c:676 eelf32elmipvxworks.c:715 eelf32l4300.c:676
#: eelf32lmip.c:676 eelf32lr5900.c:539 eelf32lr5900n32.c:539 eelf32lsmip.c:676
#: eelf32ltsmip.c:676 eelf32ltsmip_fbsd.c:676 eelf32ltsmipn32.c:676
#: eelf32ltsmipn32_fbsd.c:676 eelf32mipswindiss.c:514 eelf64bmip.c:690
#: eelf64btsmip.c:676 eelf64btsmip_fbsd.c:676 eelf64ltsmip.c:676
#: eelf64ltsmip_fbsd.c:676
#, c-format
msgid ""
"  --ignore-branch-isa         Accept invalid branch relocations requiring\n"
"                              an ISA mode switch\n"
msgstr ""

#: eelf32b4300.c:680 eelf32bmip.c:680 eelf32bmipn32.c:694 eelf32bsmip.c:694
#: eelf32btsmip.c:680 eelf32btsmip_fbsd.c:680 eelf32btsmipn32.c:680
#: eelf32btsmipn32_fbsd.c:680 eelf32ebmip.c:680 eelf32ebmipvxworks.c:719
#: eelf32elmip.c:680 eelf32elmipvxworks.c:719 eelf32l4300.c:680
#: eelf32lmip.c:680 eelf32lr5900.c:543 eelf32lr5900n32.c:543 eelf32lsmip.c:680
#: eelf32ltsmip.c:680 eelf32ltsmip_fbsd.c:680 eelf32ltsmipn32.c:680
#: eelf32ltsmipn32_fbsd.c:680 eelf32mipswindiss.c:518 eelf64bmip.c:694
#: eelf64btsmip.c:680 eelf64btsmip_fbsd.c:680 eelf64ltsmip.c:680
#: eelf64ltsmip_fbsd.c:680
#, c-format
msgid ""
"  --no-ignore-branch-isa      Reject invalid branch relocations requiring\n"
"                              an ISA mode switch\n"
msgstr ""

#: eelf32b4300.c:684 eelf32bmip.c:684 eelf32bmipn32.c:698 eelf32bsmip.c:698
#: eelf32btsmip.c:684 eelf32btsmip_fbsd.c:684 eelf32btsmipn32.c:684
#: eelf32btsmipn32_fbsd.c:684 eelf32ebmip.c:684 eelf32ebmipvxworks.c:723
#: eelf32elmip.c:684 eelf32elmipvxworks.c:723 eelf32l4300.c:684
#: eelf32lmip.c:684 eelf32lr5900.c:547 eelf32lr5900n32.c:547 eelf32lsmip.c:684
#: eelf32ltsmip.c:684 eelf32ltsmip_fbsd.c:684 eelf32ltsmipn32.c:684
#: eelf32ltsmipn32_fbsd.c:684 eelf32mipswindiss.c:522 eelf64bmip.c:698
#: eelf64btsmip.c:684 eelf64btsmip_fbsd.c:684 eelf64ltsmip.c:684
#: eelf64ltsmip_fbsd.c:684
#, c-format
msgid ""
"  --compact-branches          Generate compact branches/jumps for MIPS R6\n"
msgstr ""

#: eelf32b4300.c:687 eelf32bmip.c:687 eelf32bmipn32.c:701 eelf32bsmip.c:701
#: eelf32btsmip.c:687 eelf32btsmip_fbsd.c:687 eelf32btsmipn32.c:687
#: eelf32btsmipn32_fbsd.c:687 eelf32ebmip.c:687 eelf32ebmipvxworks.c:726
#: eelf32elmip.c:687 eelf32elmipvxworks.c:726 eelf32l4300.c:687
#: eelf32lmip.c:687 eelf32lr5900.c:550 eelf32lr5900n32.c:550 eelf32lsmip.c:687
#: eelf32ltsmip.c:687 eelf32ltsmip_fbsd.c:687 eelf32ltsmipn32.c:687
#: eelf32ltsmipn32_fbsd.c:687 eelf32mipswindiss.c:525 eelf64bmip.c:701
#: eelf64btsmip.c:687 eelf64btsmip_fbsd.c:687 eelf64ltsmip.c:687
#: eelf64ltsmip_fbsd.c:687
#, c-format
msgid ""
"  --no-compact-branches       Generate delay slot branches/jumps for MIPS "
"R6\n"
msgstr ""

#: eelf32bfin.c:431 eelf32bfinfd.c:456
#, c-format
msgid "  --code-in-l1                Put code in L1\n"
msgstr ""

#: eelf32bfin.c:433 eelf32bfinfd.c:458
#, c-format
msgid "  --data-in-l1                Put data in L1\n"
msgstr ""

#: eelf32cr16.c:85
msgid ""
"%F%P: %pB: all input objects must be COFF or ELF for --embedded-relocs\n"
msgstr ""

#: eelf32cr16.c:109 em68kelf.c:113 em68kelfnbsd.c:113
msgid "%F%P: %pB: can not create .emreloc section: %E\n"
msgstr ""

#: eelf32cr16.c:128 em68kelf.c:134 em68kelfnbsd.c:134
msgid "%X%P: %pB: section %s has relocs; can not use --embedded-relocs\n"
msgstr ""

#: eelf32cr16.c:184 em68kelf.c:177 em68kelfnbsd.c:177
msgid "%X%P: %pB: can not create runtime reloc information: %E\n"
msgstr ""

#: eelf32cr16.c:187 em68kelf.c:181 em68kelfnbsd.c:181
msgid "%X%P: %pB: can not create runtime reloc information: %s\n"
msgstr ""

#: eelf32lppc.c:96 eelf32lppclinux.c:96 eelf32lppcnto.c:96 eelf32lppcsim.c:96
#: eelf32ppc.c:96 eelf32ppc_fbsd.c:96 eelf32ppclinux.c:96 eelf32ppcnto.c:96
#: eelf32ppcsim.c:96 eelf32ppcwindiss.c:96 eppclynx.c:96
msgid "%X%P: select_plt_layout problem %E\n"
msgstr ""

#: eelf32lppc.c:160 eelf32lppclinux.c:160 eelf32lppcnto.c:160
#: eelf32lppcsim.c:160 eelf32ppc.c:160 eelf32ppc_fbsd.c:160
#: eelf32ppclinux.c:160 eelf32ppcnto.c:160 eelf32ppcsim.c:160
#: eelf32ppcvxworks.c:105 eelf32ppcwindiss.c:160 eelf64lppc.c:319
#: eelf64ppc.c:319 eelf64ppc_fbsd.c:319 eppclynx.c:160
msgid "%X%P: inline PLT: %E\n"
msgstr ""

#: eelf32lppc.c:168 eelf32lppclinux.c:168 eelf32lppcnto.c:168
#: eelf32lppcsim.c:168 eelf32ppc.c:168 eelf32ppc_fbsd.c:168
#: eelf32ppclinux.c:168 eelf32ppcnto.c:168 eelf32ppcsim.c:168
#: eelf32ppcvxworks.c:113 eelf32ppcwindiss.c:168 eelf64lppc.c:330
#: eelf64ppc.c:330 eelf64ppc_fbsd.c:330 eppclynx.c:168
msgid "%X%P: TLS problem %E\n"
msgstr ""

#: eelf32lppc.c:255 eelf32lppclinux.c:255 eelf32lppcnto.c:255
#: eelf32lppcsim.c:255 eelf32ppc.c:255 eelf32ppc_fbsd.c:255
#: eelf32ppclinux.c:255 eelf32ppcnto.c:255 eelf32ppcsim.c:255
#: eelf32ppcvxworks.c:200 eelf32ppcwindiss.c:255 eppclynx.c:255
msgid "%X%P: ppc_finish_symbols problem %E\n"
msgstr ""

#: eelf32lppc.c:716 eelf32lppclinux.c:716 eelf32lppcnto.c:716
#: eelf32lppcsim.c:716 eelf32ppc.c:716 eelf32ppc_fbsd.c:716
#: eelf32ppclinux.c:716 eelf32ppcnto.c:716 eelf32ppcsim.c:716
#: eelf32ppcvxworks.c:690 eelf32ppcwindiss.c:716 eelf64lppc.c:1149
#: eelf64ppc.c:1149 eelf64ppc_fbsd.c:1149 eppclynx.c:716
msgid "%F%P: invalid --plt-align `%s'\n"
msgstr ""

#: eelf32lppc.c:749 eelf32lppclinux.c:749 eelf32lppcnto.c:749
#: eelf32lppcsim.c:749 eelf32ppc.c:749 eelf32ppc_fbsd.c:749
#: eelf32ppclinux.c:749 eelf32ppcnto.c:749 eelf32ppcsim.c:749
#: eelf32ppcvxworks.c:723 eelf32ppcwindiss.c:749 eppclynx.c:749
msgid "%F%P: invalid pagesize `%s'\n"
msgstr ""

#: eelf32lppc.c:779 eelf32lppclinux.c:779 eelf32lppcnto.c:779
#: eelf32lppcsim.c:779 eelf32ppc.c:779 eelf32ppc_fbsd.c:779
#: eelf32ppclinux.c:779 eelf32ppcnto.c:779 eelf32ppcsim.c:779
#: eelf32ppcvxworks.c:757 eelf32ppcwindiss.c:779 eelf64lppc.c:1294
#: eelf64ppc.c:1294 eelf64ppc_fbsd.c:1294 eppclynx.c:779
#, c-format
msgid "  --emit-stub-syms            Label linker stubs with a symbol\n"
msgstr ""

#: eelf32lppc.c:782 eelf32lppclinux.c:782 eelf32lppcnto.c:782
#: eelf32lppcsim.c:782 eelf32ppc.c:782 eelf32ppc_fbsd.c:782
#: eelf32ppclinux.c:782 eelf32ppcnto.c:782 eelf32ppcsim.c:782
#: eelf32ppcvxworks.c:760 eelf32ppcwindiss.c:782 eelf64lppc.c:1297
#: eelf64ppc.c:1297 eelf64ppc_fbsd.c:1297 eppclynx.c:782
#, c-format
msgid "  --no-emit-stub-syms         Don't label linker stubs with a symbol\n"
msgstr ""

#: eelf32lppc.c:785 eelf32lppclinux.c:785 eelf32lppcnto.c:785
#: eelf32lppcsim.c:785 eelf32ppc.c:785 eelf32ppc_fbsd.c:785
#: eelf32ppclinux.c:785 eelf32ppcnto.c:785 eelf32ppcsim.c:785
#: eelf32ppcvxworks.c:763 eelf32ppcwindiss.c:785 eelf64lppc.c:1317
#: eelf64ppc.c:1317 eelf64ppc_fbsd.c:1317 eppclynx.c:785
#, c-format
msgid "  --no-tls-optimize           Don't try to optimize TLS accesses\n"
msgstr ""

#: eelf32lppc.c:788 eelf32lppclinux.c:788 eelf32lppcnto.c:788
#: eelf32lppcsim.c:788 eelf32ppc.c:788 eelf32ppc_fbsd.c:788
#: eelf32ppclinux.c:788 eelf32ppcnto.c:788 eelf32ppcsim.c:788
#: eelf32ppcvxworks.c:766 eelf32ppcwindiss.c:788 eelf64lppc.c:1323
#: eelf64ppc.c:1323 eelf64ppc_fbsd.c:1323 eppclynx.c:788
#, c-format
msgid "  --no-tls-get-addr-optimize  Don't use a special __tls_get_addr call\n"
msgstr ""

#: eelf32lppc.c:791 eelf32lppclinux.c:791 eelf32lppcnto.c:791
#: eelf32lppcsim.c:791 eelf32ppc.c:791 eelf32ppc_fbsd.c:791
#: eelf32ppclinux.c:791 eelf32ppcnto.c:791 eelf32ppcsim.c:791
#: eelf32ppcwindiss.c:791 eppclynx.c:791
#, c-format
msgid "  --secure-plt                Use new-style PLT if possible\n"
msgstr ""

#: eelf32lppc.c:794 eelf32lppclinux.c:794 eelf32lppcnto.c:794
#: eelf32lppcsim.c:794 eelf32ppc.c:794 eelf32ppc_fbsd.c:794
#: eelf32ppclinux.c:794 eelf32ppcnto.c:794 eelf32ppcsim.c:794
#: eelf32ppcwindiss.c:794 eppclynx.c:794
#, c-format
msgid "  --bss-plt                   Force old-style BSS PLT\n"
msgstr ""

#: eelf32lppc.c:797 eelf32lppclinux.c:797 eelf32lppcnto.c:797
#: eelf32lppcsim.c:797 eelf32ppc.c:797 eelf32ppc_fbsd.c:797
#: eelf32ppclinux.c:797 eelf32ppcnto.c:797 eelf32ppcsim.c:797
#: eelf32ppcwindiss.c:797 eppclynx.c:797
#, c-format
msgid "  --plt-align                 Align PLT call stubs to fit cache lines\n"
msgstr ""

#: eelf32lppc.c:800 eelf32lppclinux.c:800 eelf32lppcnto.c:800
#: eelf32lppcsim.c:800 eelf32ppc.c:800 eelf32ppc_fbsd.c:800
#: eelf32ppclinux.c:800 eelf32ppcnto.c:800 eelf32ppcsim.c:800
#: eelf32ppcwindiss.c:800 eelf64lppc.c:1285 eelf64ppc.c:1285
#: eelf64ppc_fbsd.c:1285 eppclynx.c:800
#, c-format
msgid "  --no-plt-align              Dont't align individual PLT call stubs\n"
msgstr ""

#: eelf32lppc.c:803 eelf32lppclinux.c:803 eelf32lppcnto.c:803
#: eelf32lppcsim.c:803 eelf32ppc.c:803 eelf32ppc_fbsd.c:803
#: eelf32ppclinux.c:803 eelf32ppcnto.c:803 eelf32ppcsim.c:803
#: eelf32ppcwindiss.c:803 eelf64lppc.c:1335 eelf64ppc.c:1335
#: eelf64ppc_fbsd.c:1335 eppclynx.c:803
#, c-format
msgid ""
"  --no-inline-optimize        Don't convert inline PLT to direct calls\n"
msgstr ""

#: eelf32lppc.c:806 eelf32lppclinux.c:806 eelf32lppcnto.c:806
#: eelf32lppcsim.c:806 eelf32ppc.c:806 eelf32ppc_fbsd.c:806
#: eelf32ppclinux.c:806 eelf32ppcnto.c:806 eelf32ppcsim.c:806
#: eelf32ppcwindiss.c:806 eppclynx.c:806
#, c-format
msgid "  --sdata-got                 Force GOT location just before .sdata\n"
msgstr ""

#: eelf32lppc.c:809 eelf32lppclinux.c:809 eelf32lppcnto.c:809
#: eelf32lppcsim.c:809 eelf32ppc.c:809 eelf32ppc_fbsd.c:809
#: eelf32ppclinux.c:809 eelf32ppcnto.c:809 eelf32ppcsim.c:809
#: eelf32ppcvxworks.c:769 eelf32ppcwindiss.c:809 eppclynx.c:809
#, c-format
msgid ""
"  --ppc476-workaround [=pagesize]\n"
"                              Avoid a cache bug on ppc476\n"
msgstr ""

#: eelf32lppc.c:813 eelf32lppclinux.c:813 eelf32lppcnto.c:813
#: eelf32lppcsim.c:813 eelf32ppc.c:813 eelf32ppc_fbsd.c:813
#: eelf32ppclinux.c:813 eelf32ppcnto.c:813 eelf32ppcsim.c:813
#: eelf32ppcvxworks.c:773 eelf32ppcwindiss.c:813 eppclynx.c:813
#, c-format
msgid "  --no-ppc476-workaround      Disable workaround\n"
msgstr ""

#: eelf32lppc.c:816 eelf32lppclinux.c:816 eelf32lppcnto.c:816
#: eelf32lppcsim.c:816 eelf32ppc.c:816 eelf32ppc_fbsd.c:816
#: eelf32ppclinux.c:816 eelf32ppcnto.c:816 eelf32ppcsim.c:816
#: eelf32ppcvxworks.c:776 eelf32ppcwindiss.c:816 eppclynx.c:816
#, c-format
msgid "  --no-pic-fixup              Don't edit non-pic to pic\n"
msgstr ""

#: eelf32lppc.c:819 eelf32lppclinux.c:819 eelf32lppcnto.c:819
#: eelf32lppcsim.c:819 eelf32ppc.c:819 eelf32ppc_fbsd.c:819
#: eelf32ppclinux.c:819 eelf32ppcnto.c:819 eelf32ppcsim.c:819
#: eelf32ppcvxworks.c:779 eelf32ppcwindiss.c:819 eppclynx.c:819
#, c-format
msgid ""
"  --vle-reloc-fixup           Correct old object file 16A/16D relocation\n"
msgstr ""

#: eelf32mcore.c:281
#, c-format
msgid ""
"  --base_file <basefile>      Generate a base file for relocatable DLLs\n"
msgstr ""

#: eelf32metag.c:689 eelf64lppc.c:1260 eelf64ppc.c:1260 eelf64ppc_fbsd.c:1260
#: ehppaelf.c:554 ehppalinux.c:731 ehppanbsd.c:731 ehppaobsd.c:731
#, c-format
msgid ""
"  --stub-group-size=N         Maximum size of a group of input sections "
"that\n"
"                                can be handled by one stub section.  A "
"negative\n"
"                                value locates all stubs before their "
"branches\n"
"                                (with a group size of -N), while a positive\n"
"                                value allows two groups of input sections, "
"one\n"
"                                before, and one after each stub section.\n"
"                                Values of +/-1 indicate the linker should\n"
"                                choose suitable defaults.\n"
msgstr ""

#: eelf32rx.c:313
#, c-format
msgid ""
"  --no-flag-mismatch-warnings Don't warn about objects with incompatible\n"
"                                endian or dsp settings\n"
msgstr ""

#: eelf32rx.c:315
#, c-format
msgid ""
"  --flag-mismatch-warnings    Warn about objects with incompatible\n"
"                                endian, dsp or ABI settings\n"
msgstr ""

#: eelf32rx.c:317
#, c-format
msgid ""
"  --ignore-lma                Ignore segment LMAs [default]\n"
"                                (for Renesas Tools compatibility)\n"
msgstr ""

#: eelf32rx.c:319
#, c-format
msgid "  --no-ignore-lma             Don't ignore segment LMAs\n"
msgstr ""

#: eelf32xtensa.c:137
msgid "file already has property tables"
msgstr ""

#: eelf32xtensa.c:147
msgid "failed to read section contents"
msgstr ""

#: eelf32xtensa.c:159
msgid "could not create new section"
msgstr ""

#: eelf32xtensa.c:175
msgid "could not allocate section contents"
msgstr ""

#: eelf32xtensa.c:194
msgid "out of memory"
msgstr ""

#: eelf32xtensa.c:292
msgid ""
"%P: warning: failed to convert %s table in %pB (%s); subsequent disassembly "
"may be incomplete\n"
msgstr ""

#: eelf32xtensa.c:408
msgid "%F%P: %pB: cannot read contents of section %pA\n"
msgstr ""

#: eelf32xtensa.c:419
msgid "%P: %pB: warning: incompatible Xtensa configuration (%s)\n"
msgstr ""

#: eelf32xtensa.c:423
msgid "%P: %pB: warning: cannot parse .xtensa.info section\n"
msgstr ""

#: eelf32xtensa.c:449
msgid "%F%P: little endian output does not match Xtensa configuration\n"
msgstr ""

#: eelf32xtensa.c:455
msgid "%F%P: big endian output does not match Xtensa configuration\n"
msgstr ""

#: eelf32xtensa.c:474
msgid "%F%P: cross-endian linking for %pB not supported\n"
msgstr ""

#: eelf32xtensa.c:505
msgid "%F%P: failed to create .xtensa.info section\n"
msgstr ""

#: eelf32xtensa.c:1246
msgid "%F%P: Relaxation not supported with --enable-non-contiguous-regions.\n"
msgstr ""

#: eelf32xtensa.c:2341
#, c-format
msgid ""
"  --size-opt                  When relaxing longcalls, prefer size\n"
"                                optimization over branch target alignment\n"
msgstr ""

#: eelf32z80.c:67 ez80.c:59
msgid "%F%P: %pB: Instruction sets of object files incompatible\n"
msgstr ""

#: eelf64_ia64.c:467 eelf64_ia64_fbsd.c:467
#, c-format
msgid ""
"  --itanium                   Generate code for Intel Itanium processor\n"
msgstr ""

#: eelf64_s390.c:63 eelf64lppc.c:127 eelf64ppc.c:127 eelf64ppc_fbsd.c:127
msgid "%F%P: can not init BFD: %E\n"
msgstr ""

#: eelf64_s390.c:505
#, c-format
msgid ""
"  --s390-pgste                Tell the kernel to allocate 4k page tables\n"
msgstr ""

#: eelf64alpha.c:534 eelf64alpha_fbsd.c:534 eelf64alpha_nbsd.c:534
#, c-format
msgid ""
"  --taso                      Load executable in the lower 31-bit "
"addressable\n"
"                                virtual address range\n"
msgstr ""

#: eelf64alpha.c:537 eelf64alpha_fbsd.c:537 eelf64alpha_nbsd.c:537
#, c-format
msgid "  --secureplt                 Force PLT in text segment\n"
msgstr ""

#: eelf64alpha.c:539 eelf64alpha_fbsd.c:539 eelf64alpha_nbsd.c:539
#, c-format
msgid "  --no-secureplt              Force PLT in data segment\n"
msgstr ""

#: eelf64lppc.c:311 eelf64lppc.c:339 eelf64ppc.c:311 eelf64ppc.c:339
#: eelf64ppc_fbsd.c:311 eelf64ppc_fbsd.c:339
msgid "%X%P: can not edit %s: %E\n"
msgstr ""

#: eelf64lppc.c:504 eelf64ppc.c:504 eelf64ppc_fbsd.c:504
msgid "%X%P: linker script separates .got and .toc\n"
msgstr ""

#: eelf64lppc.c:565 eelf64ppc.c:565 eelf64ppc_fbsd.c:565
msgid "%P: .init/.fini fragments use differing TOC pointers\n"
msgstr ""

#: eelf64lppc.c:1270 eelf64ppc.c:1270
#, c-format
msgid ""
"  --plt-static-chain          PLT call stubs should load r11 (default)\n"
msgstr ""

#: eelf64lppc.c:1273 eelf64ppc.c:1273
#, c-format
msgid "  --no-plt-static-chain       PLT call stubs should not load r11\n"
msgstr ""

#: eelf64lppc.c:1276 eelf64ppc.c:1276 eelf64ppc_fbsd.c:1276
#, c-format
msgid "  --plt-thread-safe           PLT call stubs with load-load barrier\n"
msgstr ""

#: eelf64lppc.c:1279 eelf64ppc.c:1279 eelf64ppc_fbsd.c:1279
#, c-format
msgid "  --no-plt-thread-safe        PLT call stubs without barrier\n"
msgstr ""

#: eelf64lppc.c:1282 eelf64ppc.c:1282 eelf64ppc_fbsd.c:1282
#, c-format
msgid "  --plt-align [=<align>]      Align PLT call stubs to fit cache lines\n"
msgstr ""

#: eelf64lppc.c:1288 eelf64ppc.c:1288 eelf64ppc_fbsd.c:1288
#, c-format
msgid ""
"  --plt-localentry            Optimize calls to ELFv2 localentry:0 "
"functions\n"
msgstr ""

#: eelf64lppc.c:1291 eelf64ppc.c:1291 eelf64ppc_fbsd.c:1291
#, c-format
msgid "  --no-plt-localentry         Don't optimize ELFv2 calls\n"
msgstr ""

#: eelf64lppc.c:1300 eelf64ppc.c:1300 eelf64ppc_fbsd.c:1300
#, c-format
msgid ""
"  --dotsyms                   For every version pattern \"foo\" in a "
"version\n"
"                                script, add \".foo\" so that function code\n"
"                                symbols are treated the same as function\n"
"                                descriptor symbols.  Defaults to on.\n"
msgstr ""

#: eelf64lppc.c:1306 eelf64ppc.c:1306 eelf64ppc_fbsd.c:1306
#, c-format
msgid ""
"  --no-dotsyms                Don't do anything special in version scripts\n"
msgstr ""

#: eelf64lppc.c:1309 eelf64ppc.c:1309 eelf64ppc_fbsd.c:1309
#, c-format
msgid ""
"  --save-restore-funcs        Provide register save and restore routines "
"used\n"
"                                by gcc -Os code.  Defaults to on for normal\n"
"                                final link, off for ld -r.\n"
msgstr ""

#: eelf64lppc.c:1314 eelf64ppc.c:1314 eelf64ppc_fbsd.c:1314
#, c-format
msgid "  --no-save-restore-funcs     Don't provide these routines\n"
msgstr ""

#: eelf64lppc.c:1320 eelf64ppc.c:1320 eelf64ppc_fbsd.c:1320
#, c-format
msgid ""
"  --tls-get-addr-optimize     Force use of special __tls_get_addr call\n"
msgstr ""

#: eelf64lppc.c:1326 eelf64ppc.c:1326 eelf64ppc_fbsd.c:1326
#, c-format
msgid "  --tls-get-addr-regsave      Force register save __tls_get_addr stub\n"
msgstr ""

#: eelf64lppc.c:1329 eelf64ppc.c:1329 eelf64ppc_fbsd.c:1329
#, c-format
msgid ""
"  --no-tls-get-addr-regsave   Don't use register save __tls_get_addr stub\n"
msgstr ""

#: eelf64lppc.c:1332 eelf64ppc.c:1332 eelf64ppc_fbsd.c:1332
#, c-format
msgid "  --no-opd-optimize           Don't optimize the OPD section\n"
msgstr ""

#: eelf64lppc.c:1338 eelf64ppc.c:1338 eelf64ppc_fbsd.c:1338
#, c-format
msgid "  --no-toc-optimize           Don't optimize the TOC section\n"
msgstr ""

#: eelf64lppc.c:1341 eelf64ppc.c:1341 eelf64ppc_fbsd.c:1341
#, c-format
msgid ""
"  --no-multi-toc              Disallow automatic multiple toc sections\n"
msgstr ""

#: eelf64lppc.c:1344 eelf64ppc.c:1344 eelf64ppc_fbsd.c:1344
#, c-format
msgid "  --no-toc-sort               Don't sort TOC and GOT sections\n"
msgstr ""

#: eelf64lppc.c:1347 eelf64ppc.c:1347 eelf64ppc_fbsd.c:1347
#, c-format
msgid ""
"  --non-overlapping-opd       Canonicalize .opd, so that there are no\n"
"                                overlapping .opd entries\n"
msgstr ""

#: eelf64mmix.c:81 emmo.c:84
msgid "%X%P: internal problems setting up section %s"
msgstr ""

#: eelf64mmix.c:125 emmo.c:128
msgid "%X%P: too many global registers: %u, max 223\n"
msgstr ""

#. This is a fatal error; make einfo call not return.
#: eelf64mmix.c:143 emmo.c:146
msgid "%F%P: can't finalize linker-allocated global registers\n"
msgstr ""

#: eelf64ppc_fbsd.c:1270
#, c-format
msgid "  --plt-static-chain          PLT call stubs should load r111\n"
msgstr ""

#: eelf64ppc_fbsd.c:1273
#, c-format
msgid ""
"  --no-plt-static-chain       PLT call stubs should not load r11 (default)\n"
msgstr ""

#: ehppaelf.c:324 ehppalinux.c:324 ehppanbsd.c:324 ehppaobsd.c:324
msgid "%X%P: can not set gp\n"
msgstr ""

#: ehppaelf.c:550 ehppalinux.c:727 ehppanbsd.c:727 ehppaobsd.c:727
#, c-format
msgid ""
"  --multi-subspace            Generate import and export stubs to support\n"
"                                multiple sub-space shared libraries\n"
msgstr ""

#: ei386beos.c:376
msgid "%F%P: PE operations on non PE file\n"
msgstr ""

#: ei386beos.c:426 ei386beos.c:431
msgid "%F%P: %pB: can't read contents of section .idata: %E\n"
msgstr ""

#: ei386beos.c:680
msgid "%F%P: section %s has '$' as first character\n"
msgstr ""

#: ei386beos.c:712
msgid "%F%P: *(%s$) missing from linker script\n"
msgstr ""

#: ei386pep.c:377
#, c-format
msgid ""
"  --[no-]insert-timestamp            Use a real timestamp rather than zero "
"(default)\n"
msgstr ""

#: ei386pep.c:388
#, c-format
msgid ""
"                                     export, place into import library "
"instead\n"
msgstr ""

#: ei386pep.c:393
#, c-format
msgid ""
"  --compat-implib                    Create backward compatible import "
"libs;\n"
"                                       create __imp_<SYMBOL> as well\n"
msgstr ""

#: ei386pep.c:394
#, c-format
msgid ""
"  --enable-auto-image-base           Automatically choose image base for "
"DLLs\n"
"                                       unless user specifies one\n"
msgstr ""

#: ei386pep.c:395
#, c-format
msgid ""
"  --disable-auto-image-base          Do not auto-choose image base "
"(default)\n"
msgstr ""

#: ei386pep.c:399
#, c-format
msgid ""
"  --enable-runtime-pseudo-reloc      Work around auto-import limitations by\n"
"                                       adding pseudo-relocations resolved "
"at\n"
"                                       runtime\n"
msgstr ""

#: ei386pep.c:400
#, c-format
msgid ""
"  --disable-runtime-pseudo-reloc     Do not add runtime pseudo-relocations "
"for\n"
"                                       auto-imported DATA\n"
msgstr ""

#: ei386pep.c:401
#, c-format
msgid ""
"  --enable-extra-pep-debug            Enable verbose debug output when "
"building\n"
"                                       or linking to DLLs (esp. auto-"
"import)\n"
msgstr ""

#: ei386pep.c:404
#, c-format
msgid ""
"  --high-entropy-va                  Image is compatible with 64-bit address "
"space\n"
"                                       layout randomization (ASLR)\n"
msgstr ""

#: ei386pep.c:410
#, c-format
msgid ""
"  --no-seh                   Image does not use SEH; no SE handler may\n"
"                                       be called in this image\n"
msgstr ""

#: ei386pep.c:912
msgid ""
"%P: warning: --export-dynamic is not supported for PE+ targets, did you mean "
"--export-all-symbols?\n"
msgstr ""

#: ei386pep.c:980 ei386pep.c:1007
#, c-format
msgid "warning: resolving %s by linking to %s\n"
msgstr ""

#: em68hc11elf.c:141 em68hc11elfb.c:141 em68hc12elf.c:141 em68hc12elfb.c:141
msgid ""
"%P: warning: the size of the 'window' memory region is not a power of 2; its "
"size %d is truncated to %d\n"
msgstr ""

#: em68hc11elf.c:156 em68hc11elfb.c:156 em68hc12elf.c:156 em68hc12elfb.c:156
msgid "%X%P: changing output format whilst linking is not supported\n"
msgstr ""

#: em68hc11elf.c:547 em68hc11elfb.c:547 em68hc12elf.c:547 em68hc12elfb.c:547
#, c-format
msgid ""
"  --no-trampoline             Do not generate the far trampolines used to "
"call\n"
"                                a far function using jsr or bsr\n"
msgstr ""

#: em68hc11elf.c:550 em68hc11elfb.c:550 em68hc12elf.c:550 em68hc12elfb.c:550
#, c-format
msgid ""
"  --bank-window NAME          Specify the name of the memory region "
"describing\n"
"                                the layout of the memory bank window\n"
msgstr ""

#: em68kelf.c:89 em68kelfnbsd.c:89
msgid "%F%P: %pB: all input objects must be ELF for --embedded-relocs\n"
msgstr ""

#: em68kelf.c:588 em68kelfnbsd.c:588
msgid "%P: unrecognized --got argument '%s'\n"
msgstr ""

#: em68kelf.c:601 em68kelfnbsd.c:601
#, c-format
msgid "  --got=<type>                Specify GOT handling scheme\n"
msgstr ""

#: emmo.c:333
msgid "%X%P: internal problems scanning %pB after opening it"
msgstr ""

#: emsp430X.c:159 emsp430elf.c:159
msgid "%P: error: unhandled data_statement size\n"
msgstr ""

#: emsp430X.c:300 emsp430elf.c:300
msgid "%P: error: no section named %s or %s in linker script\n"
msgstr ""

#: emsp430X.c:309 emsp430elf.c:309
msgid "%P: error: no section named %s in linker script\n"
msgstr ""

#: emsp430X.c:452 emsp430elf.c:452
#, c-format
msgid ""
"  --code-region={either,lower,upper,none}\n"
"        Transform .text* sections to {either,lower,upper,none}.text* "
"sections\n"
msgstr ""

#: emsp430X.c:453 emsp430elf.c:453
#, c-format
msgid ""
"  --data-region={either,lower,upper,none}\n"
"        Transform .data*, .rodata* and .bss* sections to\n"
"        {either,lower,upper,none}.{bss,data,rodata}* sections\n"
msgstr ""

#: emsp430X.c:454 emsp430elf.c:454
#, c-format
msgid ""
"  --disable-sec-transformation\n"
"        Disable transformation of .{text,data,bss,rodata}* sections to\n"
"        add the {either,lower,upper,none} prefixes\n"
msgstr ""

#: emsp430X.c:473 emsp430elf.c:473
msgid "%P: --code-region requires an argument: {upper,lower,either,none}\n"
msgstr ""

#: emsp430X.c:479 emsp430elf.c:479
msgid "%P: error: unrecognized argument to --code-region= option: \"%s\"\n"
msgstr ""

#: emsp430X.c:496 emsp430elf.c:496
msgid "%P: --data-region requires an argument: {upper,lower,either,none}\n"
msgstr ""

#: emsp430X.c:502 emsp430elf.c:502
msgid "%P: error: unrecognized argument to --data-region= option: \"%s\"\n"
msgstr ""

#. Incompatible objects.
#: ends32belf.c:126 ends32belf16m.c:126 ends32belf_linux.c:126 ends32elf.c:126
#: ends32elf16m.c:126 ends32elf_linux.c:126
msgid "%F%P: %pB: ABI version of object files mismatched\n"
msgstr ""

#: ends32belf.c:380 ends32belf16m.c:380 ends32belf_linux.c:509 ends32elf.c:380
#: ends32elf16m.c:380 ends32elf_linux.c:509
msgid "%P: --mbaseline is not used anymore\n"
msgstr ""

#: ends32belf.c:391 ends32belf16m.c:391 ends32belf_linux.c:520 ends32elf.c:391
#: ends32elf16m.c:391 ends32elf_linux.c:520
msgid "%P: --relax-[no-]reduce-fp-updat is not used anymore\n"
msgstr ""

#: ends32belf.c:395 ends32belf16m.c:395 ends32belf_linux.c:524 ends32elf.c:395
#: ends32elf16m.c:395 ends32elf_linux.c:524
msgid "%P: missing file for --mexport-symbols\n"
msgstr ""

#: ends32belf.c:408 ends32belf.c:417 ends32belf16m.c:408 ends32belf16m.c:417
#: ends32belf_linux.c:537 ends32belf_linux.c:546 ends32elf.c:408
#: ends32elf.c:417 ends32elf16m.c:408 ends32elf16m.c:417 ends32elf_linux.c:537
#: ends32elf_linux.c:546
msgid "%P: valid arguments to --mhyper-relax=(low|medium|high)\n"
msgstr ""

#: ends32belf.c:437 ends32belf16m.c:437 ends32belf_linux.c:566 ends32elf.c:437
#: ends32elf16m.c:437 ends32elf_linux.c:566
#, c-format
msgid "  --m[no-]fp-as-gp            Disable/enable fp-as-gp relaxation\n"
msgstr ""

#: ends32belf.c:439 ends32belf16m.c:439 ends32belf_linux.c:568 ends32elf.c:439
#: ends32elf16m.c:439 ends32elf_linux.c:568
#, c-format
msgid "  --mexport-symbols=FILE      Exporting symbols in linker script\n"
msgstr ""

#: ends32belf.c:441 ends32belf16m.c:441 ends32belf_linux.c:570 ends32elf.c:441
#: ends32elf16m.c:441 ends32elf_linux.c:570
#, c-format
msgid ""
"  --mhyper-relax=level        Adjust relax level (low|medium|high). default: "
"medium\n"
msgstr ""

#: ends32belf.c:443 ends32belf16m.c:443 ends32belf_linux.c:572 ends32elf.c:443
#: ends32elf16m.c:443 ends32elf_linux.c:572
#, c-format
msgid "  --m[no-]tlsdesc-trampoline  Disable/enable TLS DESC trampoline\n"
msgstr ""

#: epdp11.c:82
#, c-format
msgid ""
"  -N, --omagic   Do not make text readonly, do not page align data "
"(default)\n"
msgstr ""

#: epdp11.c:83
#, c-format
msgid "  -n, --nmagic   Make text readonly, align data to next page\n"
msgstr ""

#: epdp11.c:84
#, c-format
msgid ""
"  -z, --imagic   Make text readonly, separate instruction and data spaces\n"
msgstr ""

#: epdp11.c:85
#, c-format
msgid "  --no-omagic    Equivalent to --nmagic\n"
msgstr ""

#: etic3xcoff.c:69 etic3xcoff_onchip.c:69 etic4xcoff.c:69 etic54xcoff.c:69
#, c-format
msgid "  --format 0|1|2              Specify which COFF version to use\n"
msgstr ""

#: etic3xcoff.c:91 etic3xcoff_onchip.c:91 etic4xcoff.c:91 etic54xcoff.c:91
msgid "%F%P: invalid COFF format version %s\n"
msgstr ""
